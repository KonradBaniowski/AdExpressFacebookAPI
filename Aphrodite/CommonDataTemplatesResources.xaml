<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:KMIAppUtils="clr-namespace:KMI.WebTeam.Utils.Application;assembly=KMI.WebTeam.Utils" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    <!--<Style TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="TextBox.IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Green" />
                <Setter Property="BorderThickness" Value="4" />
            </Trigger>
            <Trigger Property="TextBox.IsMouseOver" Value="False">
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="BorderThickness" Value="4" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!-- Template for the Date column of the Log listview -->
    <DataTemplate x:Key="EventTemplate">
        <Image x:Name="LogImage" Width="16" Height="16" VerticalAlignment="Center"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding EvType, Mode=OneWay}">
                <DataTrigger.Value>
                    <KMIAppUtils:EventType>information</KMIAppUtils:EventType>
                </DataTrigger.Value>
                <Setter TargetName="LogImage" Property="Source" Value="Images\Purple.gif"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding EvType, Mode=OneWay}">
                <DataTrigger.Value>
                    <KMIAppUtils:EventType>alert</KMIAppUtils:EventType>
                </DataTrigger.Value>
                <Setter TargetName="LogImage" Property="Source" Value="Images\yellow.gif"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding EvType, Mode=OneWay}">
                <DataTrigger.Value>
                    <KMIAppUtils:EventType>error</KMIAppUtils:EventType>
                </DataTrigger.Value>
                <Setter TargetName="LogImage" Property="Source" Value="Images\Red.gif"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding EvType, Mode=OneWay}">
                <DataTrigger.Value>
                    <KMIAppUtils:EventType>inProgress</KMIAppUtils:EventType>
                </DataTrigger.Value>
                <Setter TargetName="LogImage" Property="Source" Value="Images\Gray.gif"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding EvType, Mode=OneWay}">
                <DataTrigger.Value>
                    <KMIAppUtils:EventType>Done</KMIAppUtils:EventType>
                </DataTrigger.Value>
                <Setter TargetName="LogImage" Property="Source" Value="Images\Purple.gif"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
	
	<!--<Style x:Key="ListViewColumnHeader"	TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="Background" Value="#FF595959"/>
		<Setter Property="Border.CornerRadius" Value="50"/>
		<Setter Property="Border.BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="#FFE95C29"/>
		<Setter Property="Template" Value="{DynamicResource GridViewColumnHeaderControlTemplate}"/>
	</Style>-->
	
	<Color x:Key="greyColor">#FF595959</Color>
	<Color x:Key="darkGreyColor">#FF333333</Color>
	<Color x:Key="kmiOrangeColor">#FFFF5100</Color>
	<Color x:Key="kmiYellowColor">#FFFFED00</Color>
	<SolidColorBrush x:Key="kmiOrangeColorBrush">#FFFF5100</SolidColorBrush>
	
	<Style x:Key="BorderStyle" TargetType="{x:Type Border}">
		<Setter Property="BorderBrush" Value="{StaticResource kmiOrangeColorBrush}"/>
		<Setter Property="BorderThickness" Value="0,1,1,0"/>
		<Setter Property="CornerRadius" Value="0,9,0,0"/>
		<!--<Setter Property="Background" Value="{StaticResource greyColor}"/>-->
	</Style>
	
	<Style x:Key="BorderStyle2" TargetType="{x:Type Border}">
		<Setter Property="BorderBrush" Value="{StaticResource kmiOrangeColorBrush}"/>
		<Setter Property="BorderThickness" Value="0,1,0,0"/>
		<Setter Property="CornerRadius" Value="0"/>
		<!--<Setter Property="Background" Value="{StaticResource greyColor}"/>-->
	</Style>
	
	<Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
					<Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
						<Border x:Name="HeaderPressBorder2" Style="{StaticResource BorderStyle2}"/>
						<Border x:Name="HeaderPressBorder" Style="{StaticResource BorderStyle}"/>
						<Border x:Name="HighlightBorder" VerticalAlignment="Bottom" Height="2" BorderBrush="#FFFFFFFF" BorderThickness="0" CornerRadius="0">
							<Border.Background>
								<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
									<GradientStop Color="{StaticResource kmiYellowColor}" Offset="0"/>
									<GradientStop Color="{StaticResource kmiOrangeColor}" Offset="1"/>
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Border Margin="1,0" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
							<ContentPresenter x:Name="HeaderContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" />
						</Border>
						<Canvas>
							<Thumb x:Name="PART_HeaderGripper">
								<Thumb.Style>
									<Style TargetType="{x:Type Thumb}">
										<Setter Property="Canvas.Right" Value="-9"/>
										<Setter Property="Width" Value="18"/>
										<Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
										<Setter Property="Padding" Value="5,5,50,5"/>
										<Setter Property="Background" Value="#FFC7C5B2"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type Thumb}">
													<Border Background="Transparent" Padding="{TemplateBinding Padding}">
														<DockPanel HorizontalAlignment="Center">
															<Rectangle Fill="{TemplateBinding Background}" Width="1"/>
															<Rectangle Fill="White" Width="1"/>
														</DockPanel>
													</Border>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Thumb.Style>
							</Thumb>
						</Canvas>
						
						
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="HeaderPressBorder" Value="{StaticResource kmiOrangeColorBrush}"/>
							<Setter Property="BorderBrush" TargetName="HighlightBorder" Value="#FFCE7121"/>
							<Setter Property="Background" TargetName="HighlightBorder" Value="#FFE39658"/>
							<Setter Property="CornerRadius" TargetName="HighlightBorder" Value="0,0,3,3"/>
							<Setter Property="BorderThickness" TargetName="HighlightBorder" Value="1,0,1,1"/>
							<Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Visibility" TargetName="HighlightBorder" Value="Hidden"/>
							<Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>
							<Setter Property="BorderBrush" TargetName="HeaderPressBorder" Value="#FFA5A597"/>
							<Setter Property="Margin" TargetName="HeaderPressBorder" Value="1,0,0,0"/>
							<Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0"/>
							<Setter Property="Background" Value="#FFDEDFD8"/>
							<Setter Property="BorderBrush" Value="#FFDEDFD8"/>
						</Trigger>
						<Trigger Property="Height" Value="Auto">
							<Setter Property="MinHeight" Value="20"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="#FF595959"/>
	</Style>
</ResourceDictionary>