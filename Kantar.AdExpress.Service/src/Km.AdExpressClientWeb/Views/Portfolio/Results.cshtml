@model Km.AdExpressClientWeb.Models.Portfolio.ResultsViewModel
@using TNS.AdExpress.Domain.Translation;
@{
    ViewBag.Title = "Results";
    var _controller = Model.NavigationBar.First().Controller;
    var _exportController = "PortfolioExport";
    Layout = "~/Views/Shared/_LayoutResults.cshtml";
}

<link href="~/IgniteUI/css/structure/infragistics.css" rel="stylesheet" />
<link href="~/IgniteUI/css/themes/kantar/infragistics.theme.css" rel="stylesheet" />


<div class="row">
    @Html.Partial("Presentation", Model.Presentation)
    @Html.Partial("DetailSelection")
    @Html.Hidden("ExportController", "PortfolioExport")
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 margin-top-30">
        <div class="row row-sm">
            @Html.Partial("NavigationBar", Model.NavigationBar)
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="pull-right custom-button selectexporttype">
            <select id="export-type" class="selectdatepicker hide">
                <option value="1"> @Model.Labels.ExportFormattedResult</option>
                <option value="3"> @Model.Labels.ExportGrossResult</option>             
            </select>&nbsp;
            <button class="btn btn-save" id="btn-export"><i class="fa fa-file-excel-o fa-file-excel-size"></i></button>
            <button class="btn btn-save" id="btn-save-result" title="@Model.Labels.Save"><i class="glyphicon glyphicon-floppy-save fa-file-excel-size"></i></button>
            <button class="btn btn-save" id="btn-create-alert" title="@Model.Labels.CreateAlert"><i class="fa fa-clock-o fa-file-excel-size"></i></button>
        </div>
    </div>
</div>
@*<div class="h20">
    </div>*@
<div class="row">
    <div class="col-md-12">
        @Html.Action("ResultOptions", _controller)
    </div>
</div>
<div class="h20">
</div>

<div id="globalLoader">
    <div class='uil-ring-css' style='transform:scale(0.54); top:40%'><div></div></div>
</div>

<div class="panel-group panel-group-results hide" id="resaccord" style="margin-bottom:20px;">
    <div id="allPeriodInsertions" class="text-center margin-bot-30"></div>
    <div id="GridPanel" class="panel panel-primary panel-results">
        <div class="panel-heading head-results">
            <h3 class="panel-title pull-left">
                <a data-toggle="collapse" data-parent="#resaccord" href="#accord1">
                    <i class="fa fa-table"></i> @GestionWeb.GetWebWord(1192, Model.Presentation.SiteLanguage)
                </a>
            </h3>
            <div class="clearfix"></div>
        </div>
        <div id="accord1" class="panel-collapse collapse in">
            <div class="panel-body">
                <center>
                    <p id="gridEmpty" style="display:none">@GestionWeb.GetWebWord(2106, Model.Presentation.SiteLanguage)</p>
                    <div id="grid">
                    </div>
                </center>
            </div>
        </div>
    </div>
    <div id="ChartPanel" class="panel panel-primary panel-results" style="display:none;">
        <div class="panel-heading head-results">
            <h3 class="panel-title">
                <a data-toggle="collapse" data-parent="#resaccord" href="#accord2">
                    <i class="fa fa-line-chart"></i> @GestionWeb.GetWebWord(1191, Model.Presentation.SiteLanguage)
                </a>
            </h3>
        </div>
        <div id="accord2" class="panel-collapse collapse in">
            <div class="panel-body">
                <div id="listCharts">
                </div>
            </div>
        </div>
    </div>
    <div id="carou-vehicleView" class="panel panel-primary panel-results" style="display:none; overflow:visible;">
        <div class="panel-heading head-results">
            <h3 class="panel-title">
                <a data-toggle="collapse" data-parent="#resaccord" href="#accord3">
                    <i class="fa fa-newspaper-o"></i> @GestionWeb.GetWebWord(1397, Model.Presentation.SiteLanguage)
                </a>
            </h3>
        </div>
        <div id="accord3" class="collapse in">
            <!--/panel-heading text-left-->
            <div class="panel-body">
                <div class="panel-group">
                    <div id="vhCarousel" class="carousel" data-interval="false">
                        <!--slide-->
                        <!-- Carousel items -->
                        <div class="carousel-inner">

                        </div>
                        <!--/carousel-inner-->
                        <a class="left carousel-control" href="#vhCarousel" role="button" data-slide="prev">
                            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                            <span class="sr-only">Previous</span>
                        </a>
                        <a class="right carousel-control" href="#vhCarousel" role="button" data-slide="next">
                            <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                            <span class="sr-only">Next</span>
                        </a>
                    </div>
                </div>
                <!--/vhCarousel-->
            </div>
            <!--/panel-body-->
        </div>
    </div>

</div>

<!--modal vehicle  view  -->
<div class="modal fade" id="modal-vehicleView">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>
<!--/modal-vehicleView-->
<!--modal-vehicleView-Img-->
<div class="modal fade" id="modal-vehicleView-Img" style="display: none;" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header panel-heading header-popup-vehicleView">
                <button class="close" aria-hidden="true" type="button" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
                <h4 class="font-normal m-t-none m-b-md text-primary-lt"><i class="fa fa-file-text blue"></i></h4>
            </div>
            <div class="modal-body">
                <img class="img-full" src="">
            </div>
        </div>
    </div>
</div>
<!--/modal-vehicleView-Img-->
<div id="resultModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>
<div id="gadModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>
<div id="exportResultModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>
<input type="hidden" id="current-url" value="/@_controller/Results" />
@section Scripts {
    
    @switch (Model.Presentation.SiteLanguage.ToString())
    {
        case TNS.AdExpress.Constantes.Web.CountryCode.FRANCE:
            <script src="~/IgniteUI/js/i18n/infragistics-fr.js"></script>
            <script src="~/IgniteUI/js/infragistics.core.js"></script>
            <script src="~/IgniteUI/js/infragistics.dv.js"></script>
            <script src="~/IgniteUI/js/infragistics.lob.js"></script>
            <script src="~/IgniteUI/js/modules/i18n/regional/infragistics.ui.regional-fr.js"></script>
            break;
        case TNS.AdExpress.Constantes.Web.CountryCode.UK:
            <script src="~/IgniteUI/js/infragistics.core.js"></script>
            <script src="~/IgniteUI/js/infragistics.dv.js"></script>
            <script src="~/IgniteUI/js/infragistics.lob.js"></script>
            <script src="~/IgniteUI/js/modules/i18n/regional/infragistics.ui.regional-en.js"></script>
            break;
        default:
            <script src="~/IgniteUI/js/infragistics.core.js"></script>
            <script src="~/IgniteUI/js/infragistics.dv.js"></script>
            <script src="~/IgniteUI/js/infragistics.lob.js"></script>
            <script src="~/IgniteUI/js/modules/i18n/regional/infragistics.ui.regional-en.js"></script>
            break;
    }
    @Scripts.Render("~/bundles/results")
    @Scripts.Render("~/bundles/portfolio-vehicle-view")
    <script>
        //{columnKey: 'Address', allowHiding: false, hidden: true}

        function GetAllPeriodInsertionsDetailSupp(idMedia) {
            javascript: window.open("/PortfolioDetailMedia?idMedia=" + idMedia + "&dayOfWeek=&ecran=", "_blank", "toolbar=no,scrollbars=yes,resizable=yes,top=80,left=100,width=1200,height=700");
            void (0);
        }

        $(document).ajaxStop(function () {
            $("#globalLoader").addClass("hide");
            $("#resaccord").removeClass("hide");
        });

        $(document).ready(function () {

            if (typeof jQuery === "undefined") { throw new Error("jQuery") }

            $("#grid").igTreeGrid({
                //dataSource: data,
                primaryKey: "ClassifId",
                width: "100%",
                defaultColumnWidth: 200,
                avgRowHeight: 60,
                autoGenerateColumns: true
            });

            //$("#changeColSett").click(function () {


            var ds;
            var cols;
            var colsFixed;
            var needFixedColumns = false;
            var zoomDate = '';
            var previousSubPeriodLabel;

            function GetItems(idItems) {
                var items = '';
                for (var i in idItems) {
                    items += idItems[i] + ",";
                }
                return items.substring(0, items.length - 1);
            }

            function GenericDetailLevelFilter() {
                this.DefaultDetailValue = $('#defaultDetail').val();
                this.CustomDetailValue = -1;
                this.L1DetailValue = -1;
                this.L2DetailValue = -1;
                this.L3DetailValue = -1;
            }

            function PeriodDetailFilter() {
                this.PeriodDetailType = $('#periodDetailType').val();
            }

            function UnitFilter() {
                this.Unit = $('#unit').val();
            }

            function ResultTypeFilter() {
                this.ResultType = $('#resultType').val();
            }

            function InsertionFilter() {
                this.Insertion = $('#insertion').val();
            }

            function AutoPromoFilter() {
                this.AutoPromo = $('#autoPromo').val();
            }

            function FormatFilter() {
                this.Formats = GetItems($('#format').val());
            }

            function PurchaseModeFilter() {
                this.PurchaseModes = GetItems($('#purchaseMode').val());
            }

            function UserFilter() {
                this.GenericDetailLevelFilter = new GenericDetailLevelFilter();
                this.PeriodDetailFilter = new PeriodDetailFilter();
                this.UnitFilter = new UnitFilter();
                this.InsertionFilter = new InsertionFilter();
                this.AutoPromoFilter = new AutoPromoFilter();
                this.FormatFilter = new FormatFilter();
                this.PurchaseModeFilter = new PurchaseModeFilter();
                this.ResultTypeFilter = new ResultTypeFilter();
                this.InitializeProduct = false;
            }

            var userFilter = new UserFilter();

            var renderGrid = function (success, error) {
                if (success) {

                    $("#grid").igTreeGrid("destroy");
                    if (needFixedColumns) {
                        $("#grid").igTreeGrid({
                            dataSource: ds.dataView(),
                            columns: cols,
                            height: "530px",
                            autoGenerateColumns: false,
                            primaryKey: "ID",
                            foreignKey: "PID",
                            width: "1120px",
                            features: [
                                {
                                    name: "MultiColumnHeaders"
                                },
                                {
                                    name: "Paging",
                                    mode: "allLevels",
                                    pageSize: 100
                                },
                                {
                                    name: "ColumnFixing",
                                    fixingDirection: "left",
                                    columnSettings: colsFixed
                                }
                                ,
                                {
                                    name: "Sorting",
                                    type: "local",
                                    applySortedColumnCss: false
                                }
                                 
                            ]
                        })
                    }
                    else {
                        $("#grid").igTreeGrid({
                            dataSource: ds.dataView(),
                            columns: cols,
                            height: "530px",
                            width: "1120px",
                            autoGenerateColumns: false,
                            primaryKey: "ID",
                            foreignKey: "PID",
                            features: [
                                {
                                    name: "MultiColumnHeaders"
                                },
                                {
                                    name: "Paging",
                                    mode: "allLevels",
                                    pageSize: 100
                                },
                                 {
                                     name: "Sorting",
                                     type: "local",
                                     applySortedColumnCss: false
                                 }
                                 
                            ]
                        })
                    }

                    $("#grid").igTreeGrid({
                        rowCollapsed: function (evt, ui) {
                            $("#grid_table_container").attr("style", "position: relative; height: 530px;");
                        }
                    });

                } else {
                    alert(error);
                }

            }

            function UnitFormatter(val) {
                if (val > 0)
                    return $.ig.formatter(val, "number");

                return "";
            }

            function PageFormatter(val) {
                if (val > 0)
                    return $.ig.formatter(val, "number", "#,##0.###");

                return "";
            }

            function EvolFormatter(val) {
                //if (isNaN(val))
                //    return '';

                if (val == "Infinity")
                    return '+<img src="../Content/img/g.gif" />';

                if (val > 0)
                    return $.ig.formatter(val, "number", "percent") + '<img src="../Content/img/g.gif" />';

                if (val < 0)
                    return $.ig.formatter(val, "number", "percent") + '<img src="../Content/img/r.gif" />';

                if (val == 0)
                    return '<img src="../Content/img/o.gif" />';

                return '';
            }

            function DurationFormatter(val) {

                if (val == 0)
                    return "";

                var s = val.toString();
                var nbToFillWithZero = 6 - s.length;
                for (var i = 0; i < nbToFillWithZero; i++)
                    s = "0" + s;
                return s.substr(0, 2) + " H " + s.substr(2, 2) + " M " + s.substr(4, 2) + " S";
            }

            function GetColumnsFormatter(columns) {

                if (columns != null) {

                    columns.forEach(function (elem) {
                        if (elem.group != null && elem.group != 'undefined') {
                            for (var i = 0, len = elem.group.length; i < len; i++) {
                                if (elem.group[i].key.indexOf("unit") > -1) {
                                    if (elem.group[i].key.indexOf("duration") > -1)
                                        elem.group[i].formatter = DurationFormatter;
                                    else if (elem.group[i].key.indexOf("pages") > -1)
                                        elem.group[i].formatter = PageFormatter;
                                    else
                                        elem.group[i].formatter = UnitFormatter;
                                }
                                if (elem.group[i].key.indexOf("evol") > -1) {
                                    elem.group[i].formatter = EvolFormatter;
                                }
                            }
                        } else if (elem.key.indexOf("unit") > -1) {
                            if (elem.key.indexOf("duration") > -1)
                                elem.formatter = DurationFormatter;
                            else if (elem.key.indexOf("pages") > -1)
                                elem.formatter = PageFormatter;
                            else
                                elem.formatter = UnitFormatter;
                        } else if (elem.key.indexOf("evol") > -1) {
                            elem.formatter = EvolFormatter;
                        }
                    });

                    return columns;
                }

                return columns;
            }

            function CallPortfolioResult() {
                $("#gridEmpty").hide();
                $("#GridPanel").hide();
                $("#allPeriodInsertions").hide();
                $.ajax({
                    url: '@Url.Action("PortfolioResult", _controller)',
                    contentType: "application/x-www-form-urlencoded",
                    type: "POST",
                    datatype: "json",
                    error: function (xmlHttpRequest, errorText, thrownError) {
                    },
                    success: function (data) {
                        if (data != null && data != "") {
                            if (data.isonecolumnline) {
                                //TODO : à faire autrement
                                $("#GridPanel").hide();
                                $("#allPeriodInsertions").html(data.datagrid.substring(3, data.datagrid.length - 3));
                                $("#allPeriodInsertions").show();
                            }
                            else {
                                $("#GridPanel").show();
                                dataTreeGrid = data.datagrid;
                                cols = GetColumnsFormatter(data.columns);
                                colsFixed = data.columnsfixed;
                                needFixedColumns = data.needfixedcolumns;

                                var schema = new $.ig.DataSchema("array", {
                                    fields: data.schema
                                });

                                ds = new $.ig.DataSource({
                                    type: "json",
                                    schema: schema,
                                    dataSource: dataTreeGrid,
                                    callback: renderGrid
                                });

                                ds.dataBind();
                            }

                            if (userFilter.ResultTypeFilter.ResultType == "4") {
                                $("#ChartPanel").show();
                                $("#accord1").collapse('hide');
                                $("#accord2").collapse('hide');
                                CallPortfolioGraphResult();
                            }
                        }
                        else {
                            $("#GridPanel").show();
                            $("#grid").addClass("hide");
                            $("#allPeriodInsertions").hide();
                            $("#gridEmpty").show();
                        }

                        if (userFilter.ResultTypeFilter.ResultType == "0" || userFilter.ResultTypeFilter.ResultType == "3") {
                            $("#carou-vehicleView").hide();
                            VehicleCarouselAsync(userFilter.ResultTypeFilter.ResultType, LABEL_NB_INSERTION, LABEL_TOTAL_INVEST);
                        }
                    }
                });
            }


            function CallPortfolioGraphResult() {
                $.ajax({
                    url: '@Url.Action("PortfolioGraphResult", _controller)',
                    contentType: "application/x-www-form-urlencoded",
                    type: "POST",
                    datatype: "json",
                    error: function (xmlHttpRequest, errorText, thrownError) {
                    },
                    success: function (data) {

                        if (data != null && data != "") {

                            for (i = 0; i < data.length; i++) {
                                dataChart = data[i].datachart;

                                var schema = new $.ig.DataSchema("array", {
                                    fields: data[0].schema
                                });
                                $("#listCharts").append("<div class='col-md-12'><div style='text-align: center; width: 100%;'>" + data[i].title + "</div><div id='chart" + i + "' class='chart' ></div><div id='legendChart" + i + "' class='legendChart' ></div></div>");
                                ds = new $.ig.DataSource({
                                    type: "json",
                                    schema: schema,
                                    dataSource: dataChart
                                });
                                ds.dataBind();

                                $("#chart" + i).igPieChart({
                                    dataSource: ds.dataView(),
                                    width: '600px',
                                    height: '400px',
                                    radiusFactor: .55,
                                    valueMemberPath: "ValKey",
                                    labelMemberPath: "LabelKey",
                                    labelsPosition: "outsideEnd",
                                    leaderLineType: "straightLine",
                                    othersCategoryThreshold: 0,
                                    othersCategoryType: "number",
                                    brushes: ["#FFE100", "#FF0080", "#B8DC00", "#00C8FF", "#FF8C00", "#9C1E8D", "#14C896", "#3C6BBF", "#B8292F", "#51266B", "#2B6077", "#2D2B62", "#000000", "#787878", "#E7E7E7"],
                                    legend: { element: 'legendChart' + i, type: "item" },
                                    formatLabel: function (context) {
                                        var num = context.percentValue
                                        num = parseFloat(Math.round(num * 100) / 100).toFixed(2);
                                        return num + " % : " + context.itemLabel;
                                    },
                                    showTooltip: true,
                                    tooltipTemplate: "<div class='ui-chart-tooltip'><strong>${item.LabelKey}</strong><div>" + data[i].title + ": <label>${item.ValKey}</label></div></div>"
                                });
                            }
                        }
                        else {
                            alert("Erreur");
                        }
                    }
                });
            }


            function CallSetOptions() {
                $("#globalLoader").removeClass("hide");
                $("#resaccord").addClass("hide");
                $("#ChartPanel").hide();
                $("#carou-vehicleView").hide();
                $("#accord1").collapse('show');
                if (userFilter.ResultTypeFilter.ResultType == "4") {
                    $("#ChartPanel").show();
                    $("#accord1").collapse('hide');
                    $("#accord2").collapse('hide');
                }
                $.ajax({
                    url: '@Url.Action("SetResultOptions", _controller)',
                    contentType: "application/x-www-form-urlencoded",
                    type: "POST",
                    datatype: "json",
                    data: userFilter,
                    error: function (xmlHttpRequest, errorText, thrownError) {
                    },
                    success: function (data) {
                        CallPortfolioResult();
                    }
                });
            }

            CallPortfolioResult();

            $("#gadModal").on('shown.bs.modal', function (event) {
                var link = $(event.relatedTarget);// Button that triggered the modal
                var datas = link.data('gad').toString(); // Extract info from data-* attributes
                datas = datas.replace(/\[|\]/g, '');
                datas = datas.split(",");

                if (datas[0] === null || datas[0] == "" || datas[0] == 0 || datas[0] == "0") {
                    alert("Les infos Gad ne sont pas disponibles.");
                }
                else {
                    var params = {
                        idAddress: datas[2],
                        advertiser: datas[1]                        
                    };
                    CallGadInfos(params);
                }
            });

            function CallGadInfos(params) {
                $.ajax({
                    url: '@Url.Action("GadInfos", "Gad")',
                    contentType: "application/x-www-form-urlencoded",
                    type: "GET",
                    datatype: "json",
                    data: params,
                    error: function (xmlHttpRequest, errorText, thrownError) {
                    },
                    success: function (data) {
                        $('#gadModal').html(data);
                        $("#btn-gad-detail").click(function (event) {
                            var link = $(event.target);// Button that triggered the modal
                            var datas = link.data('gad').toString(); // Extract info from data-* attributes

                            if (datas === null || datas == "" || datas == 0 || datas == "0") {
                                alert("Le lien vers Gad n'est pas disponible.");
                            }
                            else {
                                window.open(datas, "_blank");
                            }
                        });
                    }
                });
            }

            $("#btn-save-result").click(function () {
                $("#resultModal").modal("show");
            });

            $("#resultModal").on('shown.bs.modal', function (event) {
                var params = {
                    id: 0
                };
                CallUserResult(params);
            });

            $("#resultModal").on('hide.bs.modal', function () {
                $("#resultModal").html('<div class="modal-dialog"><div class="modal-content"></div></div>)');
            });

            function SaveResultEvents() {
                $("#folders").on('change', function (event) {
                    var idFolder = $("#folders").val();
                    var idResult = $('#results').val();
                    var params = {
                        id: idFolder
                    };
                    CallUserResult(params);
                });
            }

            function CallUserResult(params) {
                $.ajax({
                    url: '@Url.Action("UserResult", "Universe")',
                    contentType: "application/x-www-form-urlencoded",
                    type: "GET",
                    datatype: "json",
                    data: params,
                    error: function (xmlHttpRequest, errorText, thrownError) {
                    },
                    success: function (data) {
                        $('#resultModal').html(data);
                        SaveResultEvents();
                        CallSaveResult();
                    }
                });
            }

            function CallSaveResult() {
                $('#btnSaveResult').on('click', function (e) {
                    var idFolder = $("#folders").val();
                    var idResult = $('#results').val();
                    var resultName = $('#resultName').val();
                    var params = {
                        folderId: idFolder,
                        saveAsResultId: idResult,
                        saveResult: resultName
                    };
                    $.ajax({
                        url: '@Url.Action("SaveUserResult", "Universe")',
                        contentType: "application/x-www-form-urlencoded",
                        type: "POST",
                        datatype: "json",
                        data: params,
                        error: function (xmlHttpRequest, errorText, thrownError) {
                        },
                        success: function (data) {
                            if (data != null && data != "") {
                                bootbox.alert(data.Message);
                            }
                        }
                    });
                });
            }

            $('#periodDetailType').selectpicker();

            $('#periodDetailType').on('change', function (e) {
                userFilter.PeriodDetailFilter.PeriodDetailType = $('#periodDetailType').val();
            });

            $('#export-type').removeClass("hide");
            $('#export-type').selectpicker();

            @*$('#btn-export').on('click', function (e) {
                var selectedValue = $('#export-type').val();
                switch (selectedValue) {
                    case "1":
                        window.open('@Url.Action("Index", _exportController)', "_blank");
                        break;
                    case "2":
                        window.open('@Url.Action("ResultBrut", _exportController)', "_blank");
                        break;
                    default:
                        window.open('@Url.Action("Index", _exportController)', "_blank");
                        break;
                }
            });*@

            $('#save-custom-detail-levels').on('click', function (e) {
                var levels = $('#l1Detail').val() + ',' + $('#l2Detail').val() + ',' + $('#l3Detail').val();
                var type = 2;

                var params = {
                    levels: levels,
                    type: type
                };
                $.ajax({
                    url: '@Url.Action("SaveCustomDetailLevels", "Portfolio")',
                    contentType: "application/x-www-form-urlencoded",
                    type: "POST",
                    datatype: "json",
                    data: params,
                    error: function (xmlHttpRequest, errorText, thrownError) {
                    },
                    success: function (data) {
                        if (data != null && data != "") {
                            $("#customDetail")
                            .append('<option value="' + data.Id + '">' + data.Label + '</option>')
                            .selectpicker('refresh');
                            bootbox.alert(data.Message);
                        }
                    }
                });
            });

            $('#remove-custom-detail-levels').on('click', function (e) {
                var detailLevel = $('#customDetail').val();

                var params = {
                    detailLevel: detailLevel
                };
                $.ajax({
                    url: '@Url.Action("RemoveCustomDetailLevels", "Portfolio")',
                    contentType: "application/x-www-form-urlencoded",
                    type: "POST",
                    datatype: "json",
                    data: params,
                    error: function (xmlHttpRequest, errorText, thrownError) {
                    },
                    success: function (data) {
                        if (data != null && data != "") {
                            if (!(data.Message.indexOf("Impossible") > -1)) {
                                $('#customDetail').find('[value=' + detailLevel + ']').remove();
                                $('#customDetail').selectpicker('refresh');
                            }
                            bootbox.alert(data.Message);
                        }
                    }
                });
            });

            $('#validate-options').on('click', function (e) {
                $("#grid").addClass("hide");
                $("#collapseContainerOne").collapse('hide');

                if ($("#initializeProduct").prop('checked') == true) {
                    $("#initializeProductContainer").hide();
                }

                CallSetOptions();

                if ($("#initializeProduct").prop('checked') == true) {
                    $('#initializeProduct').attr('checked', false);
                    userFilter.InitializeProduct = false;
                }
            });

            $('#unit').selectpicker();

            $('#unit').on('change', function (e) {
                userFilter.UnitFilter.Unit = $('#unit').val();
            });

            $('#resultType').selectpicker();

            $('#resultType').on('change', function (e) {
                userFilter.ResultTypeFilter.ResultType = $('#resultType').val();
            });

            $('#insertion').selectpicker();

            $('#insertion').on('change', function (e) {
                userFilter.InsertionFilter.Insertion = $('#insertion').val();
            });

            $('#autoPromo').selectpicker();

            $('#autoPromo').on('change', function (e) {
                userFilter.AutoPromoFilter.AutoPromo = $('#autoPromo').val();
            });

            $('#format').selectpicker();

            $('#format').on('change', function (e) {
                userFilter.FormatFilter.Formats = GetItems($('#format').val());
            });

            $('#purchaseMode').selectpicker();

            $('#purchaseMode').on('change', function (e) {
                userFilter.PurchaseModeFilter.PurchaseModes = GetItems($('#purchaseMode').val());
            });

            $('#initializeProduct').selectpicker();

            $("#initializeProduct").click(function () {
                if ($(this).prop('checked') == true) {
                    userFilter.InitializeProduct = true;
                }
                else {
                    userFilter.InitializeProduct = false;
                }
            });

            $('#defaultDetail').selectpicker();
            $('#customDetail').selectpicker();
            $('#l1Detail').selectpicker();
            $('#l2Detail').selectpicker();
            $('#l3Detail').selectpicker();


            $('#defaultDetail').on('change', function (e) {
                $('#customDetail').selectpicker('val', '-1');
                $('#l1Detail').selectpicker('val', '-1');
                $('#l2Detail').selectpicker('val', '-1');
                $('#l3Detail').selectpicker('val', '-1');

                InitGenericDetailLevelFilter();
                userFilter.GenericDetailLevelFilter.DefaultDetailValue = $('#defaultDetail').val();
            });

            $('#customDetail').on('change', function (e) {
                $('#defaultDetail').selectpicker('val', '-1');
                $('#l1Detail').selectpicker('val', '-1');
                $('#l2Detail').selectpicker('val', '-1');
                $('#l3Detail').selectpicker('val', '-1');
                InitGenericDetailLevelFilter();
                userFilter.GenericDetailLevelFilter.CustomDetailValue = $('#customDetail').val();
            });

            function ResetLnLevel(lx, ly) {
                if ($(lx).val() == $(ly).val())
                    $(ly).selectpicker('val', '-1');
            }

            $('#l1Detail').on('change', function (e) {
                $('#customDetail').selectpicker('val', '-1');
                $('#defaultDetail').selectpicker('val', '-1');
                userFilter.GenericDetailLevelFilter.DefaultDetailValue = -1;
                userFilter.GenericDetailLevelFilter.CustomDetailValue = -1;
                userFilter.GenericDetailLevelFilter.L1DetailValue = $('#l1Detail').val();
                ResetLnLevel("#l1Detail", "#l2Detail");
                ResetLnLevel("#l1Detail", "#l3Detail");
            });

            $('#l2Detail').on('change', function (e) {
                $('#customDetail').selectpicker('val', '-1');
                $('#defaultDetail').selectpicker('val', '-1');
                userFilter.GenericDetailLevelFilter.DefaultDetailValue = -1;
                userFilter.GenericDetailLevelFilter.CustomDetailValue = -1;
                userFilter.GenericDetailLevelFilter.L2DetailValue = $('#l2Detail').val();
                ResetLnLevel("#l2Detail", "#l1Detail");
                ResetLnLevel("#l2Detail", "#l3Detail");
            });

            $('#l3Detail').on('change', function (e) {
                $('#customDetail').selectpicker('val', '-1');
                $('#defaultDetail').selectpicker('val', '-1');
                userFilter.GenericDetailLevelFilter.DefaultDetailValue = -1;
                userFilter.GenericDetailLevelFilter.CustomDetailValue = -1;
                userFilter.GenericDetailLevelFilter.L3DetailValue = $('#l3Detail').val();
                ResetLnLevel("#l3Detail", "#l1Detail");
                ResetLnLevel("#l3Detail", "#l2Detail");
            });


            function InitGenericDetailLevelFilter() {
                userFilter.GenericDetailLevelFilter.DefaultDetailValue = -1;
                userFilter.GenericDetailLevelFilter.CustomDetailValue = -1;
                userFilter.GenericDetailLevelFilter.L1DetailValue = -1;
                userFilter.GenericDetailLevelFilter.L2DetailValue = -1;
                userFilter.GenericDetailLevelFilter.L3DetailValue = -1;
            }

            //Portfolio Covers
            var LABEL_NB_INSERTION = "@Model.Labels.NbInsertionsLabel : ";
            var LABEL_TOTAL_INVEST = "@Model.Labels.TotalInvestLabel : ";

            var LABEL_NB_PAGES = "  @Model.Labels.NbPage : ";
            var LABEL_NEXT = "Suivant";
            var LABEL_PREV = "Précédent";

            OpenOneVehicleModalCarouselAsync( LABEL_NB_PAGES, LABEL_NEXT, LABEL_PREV);

            OpenZoomImageModal();

        });


    </script>
    @Scripts.Render("~/bundles/detail-selection")
}