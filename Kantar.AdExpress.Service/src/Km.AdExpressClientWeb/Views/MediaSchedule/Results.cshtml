@model Km.AdExpressClientWeb.Models.MediaSchedule.ResultsViewModel
@using TNS.AdExpress.Domain.Translation;

@{
    ViewBag.Title = "Results";
    Layout = "~/Views/Shared/_LayoutResults.cshtml";
    var _controller = "MediaSchedule";
}

<link href="~/IgniteUI/css/structure/infragistics.css" rel="stylesheet" />
<link href="~/IgniteUI/css/themes/kantar/infragistics.theme.css" rel="stylesheet" />

<div class="row">
    @Html.Partial("Presentation", Model.Presentation)
    @Html.Partial("DetailSelection")
    @Html.Hidden("ExportController", "TestExport")
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 margin-top-30">
        <div class="row row-sm">
            @Html.Partial("NavigationBar", Model.NavigationBar)
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="pull-right custom-button selectexporttype">
            <select id="export-type" class="selectdatepicker hide">
                <option value="1">@Model.Labels.ExportFormattedResult</option>
                <option value="2">@Model.Labels.ExportResultWithValue</option>
                <option value="3">@Model.Labels.ExportGrossResult</option>
                <option value="4">@Model.Labels.ExportPdfResult</option>
                <option value="5">@Model.Labels.ExportPptResult</option>
            </select>&nbsp;
            <button class="btn btn-save" id="btn-export"><i class="glyphicon glyphicon-floppy-open fa-file-excel-size"></i></button>
            <button class="btn btn-save" id="btn-save-result" title="@Model.Labels.Save"><i class="glyphicon glyphicon-floppy-save fa-file-excel-size"></i></button>
            <button class="btn btn-save" id="btn-create-alert" title="@Model.Labels.CreateAlert"><i class="fa fa-clock-o fa-file-excel-size"></i></button>
        </div>
    </div>
</div>
@*<div class="h20">
</div>*@
<div class="row">
    <div class="col-md-12">
        @Html.Action("ResultOptions", _controller)
    </div>
</div>
<div id="subPeriodSelection" class="h20" style="min-height: 70px; display:none;"></div>
<div style="margin-bottom:10px;"></div>
<div id="msCreativesResult" class="hide">
</div>
<div class="row">
    <div class="col-md-12">
        <center>
            <div id="grid" class="hide">
            </div>
            <div id="gridMessage" class="hide"></div>
            <div id="gridLoader">
                <div class='uil-ring-css' style='transform:scale(0.54);'><div></div></div>
            </div>
        </center>
    </div>
</div>
<div id="resultModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>
<div id="alertModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>
<div id="exportResultModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>
<input type="hidden" id="current-url" value="/@_controller/Results" />
@section Scripts {
    @switch (Model.Presentation.SiteLanguage.ToString())
        {
            case TNS.AdExpress.Constantes.Web.CountryCode.FRANCE:
            <script src="~/IgniteUI/js/i18n/infragistics-fr.js"></script>
            <script src="~/IgniteUI/js/infragistics.core.js"></script>
            <script src="~/IgniteUI/js/infragistics.lob.js"></script>
            <script src="~/IgniteUI/js/modules/i18n/regional/infragistics.ui.regional-fr.js"></script>
            break;
        case TNS.AdExpress.Constantes.Web.CountryCode.UK:
            <script src="~/IgniteUI/js/infragistics.core.js"></script>
            <script src="~/IgniteUI/js/infragistics.lob.js"></script>
            <script src="~/IgniteUI/js/modules/i18n/regional/infragistics.ui.regional-en.js"></script>
            break;
        case TNS.AdExpress.Constantes.Web.CountryCode.FINLAND:
            <script src="~/IgniteUI/js/infragistics.core.js"></script>
            <script src="~/IgniteUI/js/infragistics.lob.js"></script>
            <script src="~/IgniteUI/js/modules/i18n/regional/infragistics.ui.regional-fi.js"></script>
            break;
        default:
            <script src="~/IgniteUI/js/infragistics.core.js"></script>
            <script src="~/IgniteUI/js/infragistics.lob.js"></script>
            <script src="~/IgniteUI/js/modules/i18n/regional/infragistics.ui.regional-en.js"></script>
            break;
    }
    @Scripts.Render("~/bundles/results")
    <script>
        //{columnKey: 'Address', allowHiding: false, hidden: true}
        $(document).ready(function () {

        if (typeof jQuery === "undefined") { throw new Error("jQuery") }
            
            $("#grid").igTreeGrid({
            //dataSource: data,
            primaryKey: "ClassifId",
                width: "100%",
                defaultColumnWidth: 200,
                avgRowHeight: 60,
                autoGenerateColumns: true
            });

            //$("#changeColSett").click(function () {


            var ds;
            var cols;
            var colsFixed;
            var needFixedColumns = false;
            var zoomDate = '';
            var previousSubPeriodLabel;
            var hasMSCreatives = false;
            var creatives = [];
            var gridWidth;

            function GetItems(idItems) {
                var items = '';

                if (idItems != null) {
                    $.each(idItems, function (index, value) {
                        items += value + ",";
                    });
                    return items.substring(0, items.length - 1);
                }
                return items;
            }

            function GenericDetailLevelFilter() {
                this.DefaultDetailValue = $('#defaultDetail').val();
                this.CustomDetailValue = -1;
                this.L1DetailValue = -1;
                this.L2DetailValue = -1;
                this.L3DetailValue = -1;
                this.L4DetailValue = -1;
            }

            function PeriodDetailFilter() {
                this.PeriodDetailType = $('#periodDetailType').val();
            }

            function UnitFilter() {
                this.Unit = $('#unit').val();
            }


            function InsertionFilter() {
                this.Insertion = $('#insertion').val();
            }

            function AutoPromoFilter() {
                this.AutoPromo = $('#autoPromo').val();
            }

            function FormatFilter() {
                this.Formats = GetItems($('#format').val());
            }

            function PurchaseModeFilter() {
                this.PurchaseModes = GetItems($('#purchaseMode').val());
            }

            function UserFilter() {
                this.GenericDetailLevelFilter = new GenericDetailLevelFilter();
                this.PeriodDetailFilter = new PeriodDetailFilter();
                this.UnitFilter = new UnitFilter();
                this.InsertionFilter = new InsertionFilter();
                this.AutoPromoFilter = new AutoPromoFilter();
                this.FormatFilter = new FormatFilter();
                this.PurchaseModeFilter = new PurchaseModeFilter();
                this.ComparativeStudy = false;
                this.InitializeMedia = false;
                this.ComparativePeriodType = 1;
            }

            var userFilter = new UserFilter();

            var renderGrid = function (success, error) {
                if (success) {

                    $("#grid").igTreeGrid("destroy");
                    $("#gridLoader").addClass("hide");
                    $("#grid").removeClass("hide");
                    if (needFixedColumns) {
                        $("#grid").igTreeGrid({
                            dataSource: ds.dataView(),
                            columns: cols,
                            height: "580px",
                            autoGenerateColumns: false,
                            primaryKey: "ID_PRODUCT",
                            foreignKey: "PID",
                            width: "1140px",
                            features: [
                                {
                                    name: "MultiColumnHeaders"
                                },
                                {
                                    name: "Paging",
                                    mode: "allLevels",
                                    pageSize: 100
                                },
                                {
                                    name: "Sorting",
                                    type: "local",
                                    applySortedColumnCss: false
                                },
                                {
                                    name: "ColumnFixing",
                                    fixingDirection: "left",
                                    columnSettings: colsFixed
                                }
                            ]
                        })
                    }
                    else {
                        $("#grid").igTreeGrid({
                            dataSource: ds.dataView(),
                            columns: cols,
                            height: "530px",
                            autoGenerateColumns: false,
                            primaryKey: "ID_PRODUCT",
                            foreignKey: "PID",
                            features: [
                                {
                                    name: "MultiColumnHeaders"
                                },
                                {
                                    name: "Paging",
                                    mode: "allLevels",
                                    pageSize: 100
                                },
                                {
                                    name: "Sorting",
                                    type: "local",
                                    applySortedColumnCss: false
                                }
                            ]
                        })
                    }

                    gridWidth = $("#grid_table_container").width();

                    $("#grid").igTreeGrid({
                        rowCollapsed: function (evt, ui) {
                            $("#grid_table_container").attr("style", "position: relative; height: 530px; width: " + gridWidth + "px;");
                        }
                    });

                    $(".open-media-schedule").on('click', function (e) {
                        $("#perioddetailTypeContainer").removeClass("show").addClass("hide");
                        GetSubPeriodSelection('' + $(this).attr("date"));
                        $("#grid").addClass("hide");
                        $("#gridLoader").removeClass("hide");
                        CallMediaScheduleResult('' + $(this).attr("date"));
                    });
                } else {
                    alert(error);
                }

            }

            function UnitFormatter(val) {
                if (val > 0)
                    return $.ig.formatter(val, "number");

                return "";
            }

            function PageFormatter(val) {
                if (val > 0)
                    return $.ig.formatter(val, "number", "#,##0.###");

                return "";
            }

            function EvolFormatter(val) {
                //if (isNaN(val))
                //    return '';

                if (val == "+Infinity")
                    return '+<img src="../Content/img/g.gif" />';
                else if (val == "-Infinity")
                    return '-<img src="../Content/img/r.gif" />';

                if (val > 0)
                    return $.ig.formatter(val, "number", "percent") + '<img src="../Content/img/g.gif" />';

                if (val < 0)
                    return $.ig.formatter(val, "number", "percent") + '<img src="../Content/img/r.gif" />';

                if (val == 0)
                    return '<img src="../Content/img/o.gif" />';

                return '';
            }

            function DurationFormatter(val) {

                if (val == 0)
                    return "";

                var s = val.toString();
                var nbToFillWithZero = 6 - s.length;
                for (var i = 0; i < nbToFillWithZero; i++)
                    s = "0" + s;
                return s.substr(0, 2) + " H " + s.substr(2, 2) + " M " + s.substr(4, 2) + " S";
            }

            function GetColumnsFormatter(columns, unit) {

                if (columns != null) {

                    columns.forEach(function (elem) {
                        if (elem.key == "PERIOD" || elem.key == "PERIOD_COMP") {
                            if (unit == "duration")
                                elem.formatter = DurationFormatter;
                            else if (unit == "pages")
                                elem.formatter = PageFormatter;
                            else
                                elem.formatter = UnitFormatter;
                        }
                        else if (elem.key == "EVOL") {
                            elem.formatter = EvolFormatter;
                        }
                    });

                    return columns;
                }

                return columns;
            }

            function CallMediaScheduleResult(zoomDateParam) {

                $("#gridMessage").addClass("hide");

                zoomDate = zoomDateParam;
                var params = {
                    zoomDate: zoomDateParam
                };
                $.ajax({
                    url: '@Url.Action("MediaScheduleResult", "MediaSchedule")',
                    contentType: "application/x-www-form-urlencoded",
                    type: "POST",
                    datatype: "json",
                    data: params,
                    error: function (xmlHttpRequest, errorText, thrownError) {
                    },
                    success: function (data) {
                        if (data != null && data != "") {
                            dataTreeGrid = data.datagrid;
                            cols = GetColumnsFormatter(data.columns,  data.unit);
                            colsFixed = data.columnsfixed;
                            needFixedColumns = data.needfixedcolumns;
                            hasMSCreatives = data.hasMSCreatives;

                            if (hasMSCreatives)
                                CallMSCreativesResult();
                            else
                                $('#msCreativesResult').addClass("hide");

                            var schema = new $.ig.DataSchema("array", {
                                fields: data.schema
                            });

                            ds = new $.ig.DataSource({
                                type: "json",
                                schema: schema,
                                dataSource: dataTreeGrid,
                                callback: renderGrid
                            });

                            ds.dataBind();
                        }
                        else {
                            $("#gridLoader").addClass("hide");
                            $("#gridMessage").removeClass("hide");
                            $("#gridMessage").html("@GestionWeb.GetWebWord(2106, Model.Presentation.SiteLanguage)");
                        }
                    }
                });
            }

            function CallMSCreativesResult(zoomDateParam) {

                zoomDate = zoomDateParam;
                var params = {
                    zoomDate: zoomDateParam
                };

                $.ajax({
                    url: '@Url.Action("MSCreativesResult", "MediaSchedule")',
                    contentType: "application/x-www-form-urlencoded",
                    type: "POST",
                    datatype: "json",
                    data: params,
                    error: function (xmlHttpRequest, errorText, thrownError) {
                    },
                    success: function (data) {
                        $('#msCreativesResult').removeClass("hide");
                        $('#msCreativesResult').html(data);

                        creatives = [];
                        $("#creative-btn").prop('disabled', true);

                        AutoPlayCreativeModal();
                        AutoPlayCreativeMP4Modal();
                        AutoPlayCreativeFlashModal();
                        AutoPlayCreativeFlvModal();

                        $("#creative-btn").on('click', function (e) {
                            $('#msCreativesResult').addClass("hide");
                            var params = {
                                slogans: creatives
                            };
                            $.ajax({
                                url: '@Url.Action("SetMSCreatives", "MediaSchedule")',
                                contentType: "application/x-www-form-urlencoded",
                                type: "POST",
                                datatype: "json",
                                data: params,
                                error: function (xmlHttpRequest, errorText, thrownError) {
                                },
                                success: function (data) {
                                    creatives = [];
                                    $("#grid").addClass("hide");
                                    $("#gridLoader").removeClass("hide");
                                    $("#creative-btn").prop('disabled', true);
                                    CallMediaScheduleResult(zoomDate);
                                }
                            });
                        });

                        $("#undo-btn").on('click', function (e) {
                            $('#msCreativesResult').addClass("hide");
                            var params = {
                                slogans: []
                            };
                            $.ajax({
                                url: '@Url.Action("SetMSCreatives", "MediaSchedule")',
                                contentType: "application/x-www-form-urlencoded",
                                type: "POST",
                                datatype: "json",
                                data: params,
                                error: function (xmlHttpRequest, errorText, thrownError) {
                                },
                                success: function (data) {
                                    creatives = [];
                                    $("#grid").addClass("hide");
                                    $("#gridLoader").removeClass("hide");
                                    $("#creative-btn").prop('disabled', true);
                                    CallMediaScheduleResult(zoomDate);
                                }
                            });
                        });

                        $(".with-font").on('click', function (e) {
                            if ($(this).is(":checked")) {
                                creatives.push($(this).attr("value"));
                                $("#creativeNb").html(creatives.length);
                                $("#creativeNbLabel").html(" élément(s) sélectionné(s) &nbsp;");
                                $("#creative-btn").prop('disabled', false);
                            }
                            else {
                                creatives.remove($(this).attr("value"));

                                if (creatives.length == 0) {
                                    $("#creativeNb").html("");
                                    $("#creativeNbLabel").html(" Aucun élément sélectionné &nbsp;");
                                    $("#creative-btn").prop('disabled', true);
                                }
                                else {
                                    $("#creativeNb").html(creatives.length);
                                    $("#creativeNbLabel").html(" élément(s) sélectionné(s) &nbsp;");
                                }
                            }
                        });
                    }
                });
            }

            function CallSetOptions() {
                $.ajax({
                    url: '@Url.Action("SetResultOptions", "MediaSchedule")',
                    contentType: "application/x-www-form-urlencoded",
                    type: "POST",
                    datatype: "json",
                    data: userFilter,
                    error: function (xmlHttpRequest, errorText, thrownError) {
                    },
                    success: function (data) {
                        CallMediaScheduleResult(zoomDate);
                    }
                });
            }

            @*CallMediaScheduleResult(zoomDate);

            function GetSubPeriodSelection(zoomDateParam) {
                var params = {
                    zoomDate: zoomDateParam
                };
                $.ajax({
                    url: '@Url.Action("SubPeriodSelection", "MediaSchedule")',
                    contentType: "application/x-www-form-urlencoded",
                    type: "POST",
                    data: params,
                    error: function (xmlHttpRequest, errorText, thrownError) {
                    },
                    success: function (data) {
                        if (data != null) {
                            $('#subPeriodSelection').html(data);
                            $('#leave-zoom').on('click', function (e) {
                                $("#perioddetailTypeContainer").removeClass("hide").addClass("show");
                                $("#leave-zoom").addClass("hide");
                                $("#sub-period-container").addClass("hide");
                                $("#grid").addClass("hide");
                                $("#gridLoader").removeClass("hide");
                                zoomDate = '';
                                CallMediaScheduleResult(zoomDate);
                            });
                            $(".sub-period-btn").on('click', function (e) {
                                $(".btn-default-sub-period").prop('disabled', false);
                                $(".btn-default-sub-period").attr('class', 'btn btn-default sub-period-btn');
                                $(this).attr('class', 'btn btn-default-sub-period sub-period-btn');
                                $(this).prop('disabled', true);
                                $("#grid").addClass("hide");
                                $("#gridLoader").removeClass("hide");
                                CallMediaScheduleResult($(this).attr("period"));
                            });
                            $(".sub-period-btn").on('mouseenter', function (e) {
                                previousSubPeriodLabel = $(".btn-default-sub-period").attr("periodlabel");
                                $("#subPeriodLabel").text($(this).attr("periodlabel"));
                            });
                            $(".sub-period-btn").on('mouseleave', function (e) {
                                $("#subPeriodLabel").text(previousSubPeriodLabel);
                            });
                        }
                    }
                });
            }*@

            function AutoPlayCreativeModal() {

                $("#creativeStream").attr('src', '');

                $("#creativeModal").on('shown.bs.modal', function (event) {
                    var button = $(event.relatedTarget);// Button that triggered the modal
                    var datas = button.data('creative').toString(); // Extract info from data-* attributes
                    datas = datas.replace(/\[|\]/g, '');
                    datas = datas.split(",");

                    if (datas[0] === null || datas[0] == "" || datas[0] == 0 || datas[0] == "0") {
                        alert("Les fichiers média ne sont pas disponibles.");
                    }
                    else {
                        var parameters = {
                            idVersion: datas[0],
                            idVehicle: datas[2]
                        };
                        $.ajax({
                            url: '@Url.Action("GetCreativePath", "Insertions")',
                            contentType: "application/x-www-form-urlencoded",
                            type: 'POST',
                            datatype: 'JSON',
                            data: parameters,
                            error: function (xmlHttpRequest, errorText, thrownError) {
                                alert("Erreur lors de la recuperation de url de la version");
                            },
                            success: function (response) {
                                if (response != null) {
                                    var url = response.PathReadingFile;
                                    var urlDowload = response.PathDownloadingFile;
                                    if (url) {
                                        $("#creativeStream").attr('src', url);
                                        $('#creativeModal h4').text("Spot");
                                        $("#mediaLoader").addClass("hide");
                                    }
                                }
                            }
                        });
                    }
                });

                $("#creativeModal").on('hide.bs.modal', function () {
                    $("#creativeStream").attr('src', '');
                    $("#mediaLoader").removeClass("hide");
                });
            }

            function AutoPlayCreativeMP4Modal() {

                $("#creativeStream").attr('src', '');

                $("#creativeMP4Modal").on('shown.bs.modal', function (event) {
                    var button = $(event.relatedTarget);// Button that triggered the modal
                    var datas = button.data('creative').toString(); // Extract info from data-* attributes
                    datas = datas.replace(/\[|\]/g, '');
                    datas = datas.split(",");

                    if (datas[0] === null || datas[0] == "" || datas[0] == 0 || datas[0] == "0") {
                        alert("Les fichiers média ne sont pas disponibles.");
                    }
                    else {
                        var url = datas[0];
                        if (url) {
                            $("#creativeStream").attr('src', url);
                            $('#creativeModal h4').text("Spot");
                            $("#mediaLoader").addClass("hide");
                        }
                    }
                });

                $("#creativeMP4Modal").on('hide.bs.modal', function () {
                    $("#creativeStream").attr('src', '');
                    $("#mediaLoader").removeClass("hide");
                });
            }

            function AutoPlayCreativeFlashModal() {

                $("#creativeFlashModal").on('shown.bs.modal', function (event) {
                    var button = $(event.relatedTarget);// Button that triggered the modal
                    var datas = button.data('creative').toString(); // Extract info from data-* attributes
                    datas = datas.replace(/\[|\]/g, '');
                    datas = datas.split(",");

                    if (datas[0] === null || datas[0] == "" || datas[0] == 0 || datas[0] == "0") {
                        alert("Les fichiers média ne sont pas disponibles.");
                    }
                    else {
                        var url = datas[0];
                        var width;
                        var height;
                        if (datas[1].length > 0) {
                            var dimensionValue = datas[1].split('*');
                            width = dimensionValue[0];
                            height = dimensionValue[1];
                            if (url) {
                                $("#flashEmbedContainer").html(' <embed id="flashEmbed" src="' + url + '" play="true" swliveconnect="true" quality="high" width="' + width + '" height="' + height + '">');
                            }
                        }
                    }
                });

                $("#creativeFlashModal").on('hide.bs.modal', function () {
                    $("#flashEmbedContainer").html('');
                });
            }

            function AutoPlayCreativeFlvModal() {

                $("#creativeFlvModal").on('shown.bs.modal', function (event) {
                    var button = $(event.relatedTarget);// Button that triggered the modal
                    var datas = button.data('creative').toString(); // Extract info from data-* attributes
                    datas = datas.replace(/\[|\]/g, '');
                    datas = datas.split(",");

                    if (datas[0] === null || datas[0] == "" || datas[0] == 0 || datas[0] == "0") {
                        alert("Les fichiers média ne sont pas disponibles.");
                    }
                    else {
                        var url = datas[0];
                        var versionId = datas[1];
                        var format = datas[3];
                        var width;
                        var height;
                        var embededType;

                        if (format == "FLV")
                            embededType = "application/x-shockwave-flash";
                        else if (format == "MOV")
                            embededType = "video/quicktime";

                        if (datas[2].length > 0) {
                            var dimensionValue = datas[2].split('*');
                            width = dimensionValue[0];
                            height = dimensionValue[1];
                            if (url) {
                                var content = '<object id="video_' + versionId + '" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://active.macromedia.com/flash5/cabs/swflash.cab#version=5,0,0,0" width="' + width + '" height="' + height + '>';
                                content += '<param name="movie" value="/Player/playerflv.swf" />';
                                content += '<param name="allowfullscreen" value="true" />"';
                                content += '<param name="allowscriptaccess" value="always" />';
                                content += '<param name="flashvars" value="file=' + url + '" />';
                                content += '<embed type="' + embededType + '"';
                                content += 'src="/Player/playerflv.swf"';
                                content += 'width="' + width + '"';
                                content += 'height="' + height + '"';
                                content += 'allowscriptaccess="always"';
                                content += 'allowfullscreen="false"';
                                content += 'flashvars="file=' + url + '"';
                                content += '/>';
                                content += '</object>';
                                $("#flvContainer").html(content);
                            }
                        }
                    }
                });

                $("#creativeFlvModal").on('hide.bs.modal', function () {
                    $("#flvContainer").html('');
                });
            }

            $("#btn-save-result").click(function () {
                $("#resultModal").modal("show");
            });

            $("#resultModal").on('shown.bs.modal', function (event) {
                var params = {
                    id: 0
                };
                CallUserResult(params);
            });

            $("#resultModal").on('hide.bs.modal', function () {
                $("#resultModal").html('<div class="modal-dialog"><div class="modal-content"></div></div>)');
            });

            CallMediaScheduleResult(zoomDate);
            
            if ($("#comparative-study").prop('checked') == true) {
                userFilter.ComparativeStudy = true;
            }
            else {
                userFilter.ComparativeStudy = false;
            }

            $("#comparative-study").click(function () {
                if ($(this).prop('checked') == true) {
                    userFilter.ComparativeStudy = true;
                    $("#comparative-period-type").removeClass("hide");
                }
                else {
                    userFilter.ComparativeStudy = false;
                    $("#comparative-period-type").addClass("hide");
                }
            });

            function GetSubPeriodSelection(zoomDateParam) {
                var params = {
                    zoomDate: zoomDateParam
                };
                $.ajax({
                    url: '@Url.Action("SubPeriodSelection", "MediaSchedule")',
                    contentType: "application/x-www-form-urlencoded",
                    type: "POST",
                    data: params,
                    error: function (xmlHttpRequest, errorText, thrownError) {
                    },
                    success: function (data) {
                        $("#subPeriodSelection").show();
                        if (data != null) {
                            $('#subPeriodSelection').html(data);
                            $('#leave-zoom').on('click', function (e) {
                                $("#perioddetailTypeContainer").removeClass("hide").addClass("show");
                                $("#leave-zoom").addClass("hide");
                                $("#sub-period-container").addClass("hide");
                                $("#grid").addClass("hide");
                                $("#gridLoader").removeClass("hide");
                                $("#subPeriodSelection").hide();
                                zoomDate = '';
                                CallMediaScheduleResult(zoomDate);
                            });
                            $(".sub-period-btn").on('click', function (e) {
                                $(".btn-default-sub-period").prop('disabled', false);
                                $(".btn-default-sub-period").attr('class', 'btn btn-default sub-period-btn');
                                $(this).attr('class', 'btn btn-default-sub-period sub-period-btn');
                                $(this).prop('disabled', true);
                                $("#grid").addClass("hide");
                                $("#gridLoader").removeClass("hide");
                                CallMediaScheduleResult($(this).attr("period"));
                            });
                            $(".sub-period-btn").on('mouseenter', function (e) {
                                previousSubPeriodLabel = $(".btn-default-sub-period").attr("periodlabel");
                                $("#subPeriodLabel").text($(this).attr("periodlabel"));
                            });
                            $(".sub-period-btn").on('mouseleave', function (e) {
                                $("#subPeriodLabel").text(previousSubPeriodLabel);
                            });
                        }
                    }
                });
            }

            function SaveResultEvents() {
                $("#folders").on('change', function (event) {
                    var idFolder = $("#folders").val();
                    var idResult = $('#results').val();
                    var params = {
                        id: idFolder
                    };
                    CallUserResult(params);
                });
            }

            function CallUserResult(params) {
                $.ajax({
                    url: '@Url.Action("UserResult", "Universe")',
                    contentType: "application/x-www-form-urlencoded",
                    type: "GET",
                    datatype: "json",
                    data: params,
                    error: function (xmlHttpRequest, errorText, thrownError) {
                    },
                    success: function (data) {
                        $('#resultModal').html(data);
                        SaveResultEvents();
                        CallSaveResult();
                    }
                });
            }

            function CallSaveResult() {
                $('#btnSaveResult').on('click', function (e) {
                    var idFolder = $("#folders").val();
                    var idResult = $('#results').val();
                    var resultName = $('#resultName').val();
                    var params = {
                        folderId: idFolder,
                        saveAsResultId: idResult,
                        saveResult: resultName
                    };
                    $.ajax({
                        url: '@Url.Action("SaveUserResult", "Universe")',
                        contentType: "application/x-www-form-urlencoded",
                        type: "POST",
                        datatype: "json",
                        data: params,
                        error: function (xmlHttpRequest, errorText, thrownError) {
                        },
                        success: function (data) {
                            if (data != null && data != "") {
                                bootbox.alert(data.Message);
                            }
                        }
                    });
                });
            }

            $('#periodDetailType').selectpicker();

            $('#periodDetailType').on('change', function (e) {
                userFilter.PeriodDetailFilter.PeriodDetailType = $('#periodDetailType').val();
            });

            $('#export-type').removeClass("hide");
            $('#export-type').selectpicker();

            $('#save-custom-detail-levels').on('click', function (e) {
                var levels = $('#l1Detail').val() + ',' + $('#l2Detail').val() + ',' + $('#l3Detail').val() + ',' + $('#l4Detail').val();
                var type = 1;

                var params = {
                    levels: levels,
                    type: type
                };
                $.ajax({
                    url: '@Url.Action("SaveCustomDetailLevels", "MediaSchedule")',
                contentType: "application/x-www-form-urlencoded",
                type: "POST",
                datatype: "json",
                data: params,
                error: function (xmlHttpRequest, errorText, thrownError) {
                },
                success: function (data) {
                    if (data != null && data != "") {
                        $("#customDetail")
                        .append('<option value="' + data.Id + '">' + data.Label + '</option>')
                        .selectpicker('refresh');
                        bootbox.alert(data.Message);
                    }
                }
            });
        });

        $('#remove-custom-detail-levels').on('click', function (e) {
            var detailLevel = $('#customDetail').val();

            var params = {
                detailLevel: detailLevel
            };
            $.ajax({
                url: '@Url.Action("RemoveCustomDetailLevels", "MediaSchedule")',
                contentType: "application/x-www-form-urlencoded",
                type: "POST",
                datatype: "json",
                data: params,
                error: function (xmlHttpRequest, errorText, thrownError) {
                },
                success: function (data) {
                    if (data != null && data != "") {
                        if (!(data.Message.indexOf("Impossible") > -1)) {
                            $('#customDetail').find('[value=' + detailLevel + ']').remove();
                            $('#customDetail').selectpicker('refresh');
                        }
                        bootbox.alert(data.Message);
                    }
                }
            });
        });

        $('#validate-options').on('click', function (e) {
            $("#grid").addClass("hide");
            $("#gridLoader").removeClass("hide");
            $("#collapseContainerOne").collapse('hide');

            if ($("#initializeMedia").prop('checked') == true) {
                $("#initializeMediaContainer").hide();
            }

            CallSetOptions();

            if ($("#initializeMedia").prop('checked') == true) {
                $('#initializeMedia').attr('checked', false);
                userFilter.InitializeMedia = false;
            }
        });

        $('#date-to-date').on('click', function (e) {
            $('#comparative-week-date').prop('checked', false);
            userFilter.ComparativePeriodType = 1;
        });

        $('#comparative-week-date').on('click', function (e) {
            $('#date-to-date').prop('checked', false);
            userFilter.ComparativePeriodType = 0;
        });

        $('#unit').selectpicker();

        $('#unit').on('change', function (e) {
            userFilter.UnitFilter.Unit = $('#unit').val();
        });

        $('#insertion').selectpicker();

        $('#insertion').on('change', function (e) {
            userFilter.InsertionFilter.Insertion = $('#insertion').val();
        });

        $('#autoPromo').selectpicker();

        $('#autoPromo').on('change', function (e) {
            userFilter.AutoPromoFilter.AutoPromo = $('#autoPromo').val();
        });

        $('#format').selectpicker();

        $('#format').on('change', function (e) {
            userFilter.FormatFilter.Formats = GetItems($('#format').val());
        });

        $('#purchaseMode').selectpicker();

        $('#purchaseMode').on('change', function (e) {
            userFilter.PurchaseModeFilter.PurchaseModes = GetItems($('#purchaseMode').val());
        });

        $('#initializeMedia').selectpicker();

        $("#initializeMedia").click(function () {
            if ($(this).prop('checked') == true) {
                userFilter.InitializeMedia = true;
            }
            else {
                userFilter.InitializeMedia = false;
            }
        });

        $('#defaultDetail').selectpicker();
        $('#customDetail').selectpicker();
        $('#l1Detail').selectpicker();
        $('#l2Detail').selectpicker();
        $('#l3Detail').selectpicker();
        $('#l4Detail').selectpicker();

        $('#defaultDetail').on('change', function (e) {
            $('#customDetail').selectpicker('val', '-1');
            $('#l1Detail').selectpicker('val', '-1');
            $('#l2Detail').selectpicker('val', '-1');
            $('#l3Detail').selectpicker('val', '-1');
            $('#l4Detail').selectpicker('val', '-1');
            InitGenericDetailLevelFilter();
            userFilter.GenericDetailLevelFilter.DefaultDetailValue = $('#defaultDetail').val();
        });

        $('#customDetail').on('change', function (e) {
            $('#defaultDetail').selectpicker('val', '-1');
            $('#l1Detail').selectpicker('val', '-1');
            $('#l2Detail').selectpicker('val', '-1');
            $('#l3Detail').selectpicker('val', '-1');
            $('#l4Detail').selectpicker('val', '-1');
            InitGenericDetailLevelFilter();
            userFilter.GenericDetailLevelFilter.CustomDetailValue = $('#customDetail').val();
        });

        function ResetLnLevel(lx, ly) {
            if ($(lx).val() == $(ly).val())
                $(ly).selectpicker('val', '-1');
        }

        $('#l1Detail').on('change', function (e) {
            $('#customDetail').selectpicker('val', '-1');
            $('#defaultDetail').selectpicker('val', '-1');
            userFilter.GenericDetailLevelFilter.DefaultDetailValue = -1;
            userFilter.GenericDetailLevelFilter.CustomDetailValue = -1;
            userFilter.GenericDetailLevelFilter.L1DetailValue = $('#l1Detail').val();
            ResetLnLevel("#l1Detail", "#l2Detail");
            ResetLnLevel("#l1Detail", "#l3Detail");
            ResetLnLevel("#l1Detail", "#l4Detail");
        });

        $('#l2Detail').on('change', function (e) {
            $('#customDetail').selectpicker('val', '-1');
            $('#defaultDetail').selectpicker('val', '-1');
            userFilter.GenericDetailLevelFilter.DefaultDetailValue = -1;
            userFilter.GenericDetailLevelFilter.CustomDetailValue = -1;
            userFilter.GenericDetailLevelFilter.L2DetailValue = $('#l2Detail').val();
            ResetLnLevel("#l2Detail", "#l1Detail");
            ResetLnLevel("#l2Detail", "#l3Detail");
            ResetLnLevel("#l2Detail", "#l4Detail");
        });

        $('#l3Detail').on('change', function (e) {
            $('#customDetail').selectpicker('val', '-1');
            $('#defaultDetail').selectpicker('val', '-1');
            userFilter.GenericDetailLevelFilter.DefaultDetailValue = -1;
            userFilter.GenericDetailLevelFilter.CustomDetailValue = -1;
            userFilter.GenericDetailLevelFilter.L3DetailValue = $('#l3Detail').val();
            ResetLnLevel("#l3Detail", "#l1Detail");
            ResetLnLevel("#l3Detail", "#l2Detail");
            ResetLnLevel("#l3Detail", "#l4Detail");
        });

        $('#l4Detail').on('change', function (e) {
            $('#customDetail').selectpicker('val', '-1');
            $('#defaultDetail').selectpicker('val', '-1');
            userFilter.GenericDetailLevelFilter.DefaultDetailValue = -1;
            userFilter.GenericDetailLevelFilter.CustomDetailValue = -1;
            userFilter.GenericDetailLevelFilter.L4DetailValue = $('#l4Detail').val();
            ResetLnLevel("#l4Detail", "#l1Detail");
            ResetLnLevel("#l4Detail", "#l2Detail");
            ResetLnLevel("#l4Detail", "#l3Detail");
        });

        function InitGenericDetailLevelFilter() {
            userFilter.GenericDetailLevelFilter.DefaultDetailValue = -1;
            userFilter.GenericDetailLevelFilter.CustomDetailValue = -1;
            userFilter.GenericDetailLevelFilter.L1DetailValue = -1;
            userFilter.GenericDetailLevelFilter.L2DetailValue = -1;
            userFilter.GenericDetailLevelFilter.L3DetailValue = -1;
            userFilter.GenericDetailLevelFilter.L4DetailValue = -1;
        }

        Array.prototype.remove = function (value) {
            if (this.indexOf(value) !== -1) {
                this.splice(this.indexOf(value), 1);
                return true;
            } else {
                return false;
            };
        }

        if (!Array.indexOf) {
            Array.prototype.indexOf = function (obj) {
                for (var i = 0; i < this.length; i++) {
                    if (this[i] == obj) {
                        return i;
                    }
                }
                return -1;
            };
        }

    });
        

  
</script>
@Scripts.Render("~/bundles/detail-selection")
}