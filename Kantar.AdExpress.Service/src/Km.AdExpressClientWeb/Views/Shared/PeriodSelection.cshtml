@model Km.AdExpressClientWeb.Models.PeriodSelectionViewModel
@using TNS.AdExpress.Domain.Translation;

@{
    ViewBag.Title = "PeriodSelection";
    var _controller = Model.NavigationBar.NavigationNodes.First().Controller;
}

<div class="row">
    @Html.Partial("Presentation", Model.Presentation)
    @Html.Partial("DetailSelection")
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 margin-top-10">
        <div class="row row-sm">
            <div class="row center-block">
                @Html.Partial("NavigationBar", Model.NavigationBar)
            </div>

            <div class="clearfix"></div>

            <div class="col-lg-8 col-md-8 col-sm-8 col-xs-12">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <h4 class=""><i class="fa fa-eye"></i> @GestionWeb.GetWebWord(776, Model.PeriodViewModel.SiteLanguage)</h4>
                    <div class="clearfix"></div>
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 bg-period">
                        <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                            <div id="datetimepicker-begin">
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                            <div id="datetimepicker-end">
                            </div>
                        </div>

                    </div>
                    <form class="form-inline">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 bg-period margin-b-20">
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 ">
                                <div class="form-group">
                                    <label>@GestionWeb.GetWebWord(124, Model.PeriodViewModel.SiteLanguage)</label>
                                    <input id="begin-date-value" type="text" class="form-control input-datepicker" />
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 ">
                                <div class="form-group">
                                    <label>@GestionWeb.GetWebWord(125, Model.PeriodViewModel.SiteLanguage)</label>
                                    <input id="end-date-value" type="text" class="form-control input-datepicker" />
                                </div>
                            </div>
                        </div>
                    </form>

                    @if (Model.CurrentModule == TNS.AdExpress.Constantes.Web.Module.Name.INDICATEUR || Model.CurrentModule == TNS.AdExpress.Constantes.Web.Module.Name.TABLEAU_DYNAMIQUE)
                    {
                        <div class="pull-left">
                            <span>
                                <label class="i-switch" id="switch">
                                    <input type="checkbox" for="switch" id="isComparativeStudy">
                                    <i></i>
                                </label>
                                @GestionWeb.GetWebWord(1118, Model.PeriodViewModel.SiteLanguage)

                            </span>
                        </div>
                    }
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <h4 class=""><i class="fa fa-eye"></i> @GestionWeb.GetWebWord(777, Model.PeriodViewModel.SiteLanguage)</h4>
                    <div class="clearfix"></div>
                    <form class="form-horizontal">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 bg-period margin-b-20">
                            <h4>@GestionWeb.GetWebWord(785, Model.PeriodViewModel.SiteLanguage)</h4>
                            @if (Model.PeriodViewModel.IsSlidingYearsNbVisible && Model.CurrentModule != TNS.AdExpress.Constantes.Web.Module.Name.INDICATEUR
                                    && Model.CurrentModule != TNS.AdExpress.Constantes.Web.Module.Name.TABLEAU_DYNAMIQUE
                                    && Model.CurrentModule != TNS.AdExpress.Constantes.Web.Module.Name.ANALYSE_DES_DISPOSITIFS
                                     && Model.CurrentModule != TNS.AdExpress.Constantes.Web.Module.Name.HEALTH)
                            {
                                <div class="selectdatecontainer">
                                    <select id="year-sliding" class="selectdatepicker" selectedperiod="0">
                                        <option>--</option>
                                        @for (int i = 1; i <= Model.PeriodViewModel.SlidingYearsNb; i++)
                                        {
                                            <option>@i</option>
                                        }
                                    </select>
                                    <label class="col-sm-8">@GestionWeb.GetWebWord(781, Model.PeriodViewModel.SiteLanguage)</label>
                                </div>
                            }
                            <div class="selectdatecontainer">
                                <select id="month-sliding" class="selectdatepicker" selectedperiod="1">
                                    <option>--</option>
                                    @for (int i = 1; i <= Model.PeriodViewModel.SlidingMonthsNb; i++)
                                    {
                                        <option>@i</option>
                                    }
                                </select>
                                <label class="col-sm-8">@GestionWeb.GetWebWord(783, Model.PeriodViewModel.SiteLanguage)</label>
                            </div>
                            @if (Model.CurrentModule != TNS.AdExpress.Constantes.Web.Module.Name.INDICATEUR 
                                && Model.CurrentModule != TNS.AdExpress.Constantes.Web.Module.Name.TABLEAU_DYNAMIQUE 
                                && Model.CurrentModule != TNS.AdExpress.Constantes.Web.Module.Name.FACEBOOK
                                && Model.CurrentModule != TNS.AdExpress.Constantes.Web.Module.Name.HEALTH)
                            {
                                <div class="selectdatecontainer">
                                    <select id="week-sliding" class="selectdatepicker" selectedperiod="2">
                                        <option>--</option>
                                        @for (int i = 1; i <= Model.PeriodViewModel.SlidingWeeksNb; i++)
                                        {
                                            <option>@i</option>
                                        }
                                    </select>
                                    <label class="col-sm-8">@GestionWeb.GetWebWord(784, Model.PeriodViewModel.SiteLanguage)</label>
                                </div>
                                <div class="selectdatecontainer">
                                    @if (Model.CurrentModule != TNS.AdExpress.Constantes.Web.Module.Name.ANALYSE_DES_DISPOSITIFS)
                                    {
                                        <select id="day-sliding" class="selectdatepicker" selectedperiod="3">
                                            <option>--</option>
                                            @for (int i = 1; i <= Model.PeriodViewModel.SlidingDaysNb; i++)
                                            {
                                                <option>@i</option>
                                            }
                                        </select>
                                        <label class="col-sm-8">@GestionWeb.GetWebWord(3125, Model.PeriodViewModel.SiteLanguage)</label>
                                    }
                                </div>
                            }
                            <div class="sep-div "></div>
                            <h4>@GestionWeb.GetWebWord(786, Model.PeriodViewModel.SiteLanguage)</h4>
                            <div class=".container">
                                <div>
                                    <input id="current-year" name="single-date" type="radio" class="with-font" value="1" selectedperiod="8" />
                                    <label for="current-year">@GestionWeb.GetWebWord(1119, Model.PeriodViewModel.SiteLanguage)</label>
                                </div>
                                <div>
                                    <input id="previous-year" name="single-date" type="radio" class="with-font" value="2" selectedperiod="4" />
                                    <label for="previous-year">@GestionWeb.GetWebWord(787, Model.PeriodViewModel.SiteLanguage)</label>
                                </div>
                                @if (Model.CurrentModule != TNS.AdExpress.Constantes.Web.Module.Name.INDICATEUR 
                                    && Model.CurrentModule != TNS.AdExpress.Constantes.Web.Module.Name.TABLEAU_DYNAMIQUE 
                                    && Model.CurrentModule != TNS.AdExpress.Constantes.Web.Module.Name.FACEBOOK
                                    && Model.CurrentModule != TNS.AdExpress.Constantes.Web.Module.Name.HEALTH)
                                {
                                    <div>
                                        <input id="previous-month" name="single-date" type="radio" class="with-font" value="3" selectedperiod="5" />
                                        <label for="previous-month">@GestionWeb.GetWebWord(788, Model.PeriodViewModel.SiteLanguage)</label>
                                    </div>
                                    <div>
                                        <input id="next-week" name="single-date" type="radio" class="with-font" value="4" selectedperiod="6" />
                                        <label for="next-week">@GestionWeb.GetWebWord(789, Model.PeriodViewModel.SiteLanguage)</label>
                                    </div>
                                    if (Model.CurrentModule != TNS.AdExpress.Constantes.Web.Module.Name.ANALYSE_DES_DISPOSITIFS)
                                    {
                                        <div>
                                            <input id="previous-day" name="single-date" type="radio" class="with-font" value="5" selectedperiod="7" />
                                            <label for="previous-day">@GestionWeb.GetWebWord(1975, Model.PeriodViewModel.SiteLanguage)</label>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div>
                                        <input id="penultimate-year" name="single-date" type="radio" class="with-font" value="6" selectedperiod="9" />
                                        <label for="penultimate-year">@GestionWeb.GetWebWord(1120, Model.PeriodViewModel.SiteLanguage)</label>
                                    </div>
                                }
                            </div>
                        </div>
                    </form>

                </div>
            </div>
        </div>
    </div>

    <div id="selectionComparativeModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header header-kantar-popup">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">x</span></button>
                    <h4 class="modal-title" id="myModalLabel">@GestionWeb.GetWebWord(2370, Model.PeriodViewModel.SiteLanguage)</h4>
                </div>
                <div class="modal-body">
                    <div>
                        <input id="dateWeekComparative" name="dateWeekComparative" type="radio" checked="checked" />
                        <label style="color:black" for="dateWeekComparative">@GestionWeb.GetWebWord(2295, Model.PeriodViewModel.SiteLanguage)</label>
                    </div>
                    <div>
                        <input id="dateToDate" name="dateToDate" type="radio" />
                        <label style="color:black" for="dateToDate">@GestionWeb.GetWebWord(2294, Model.PeriodViewModel.SiteLanguage)</label>
                    </div>
                    <div class="row">
                        <div class="padder-btn btn-options pull-right">
                            <button id="validateSelectionComparative" class="btn btn-valider">@GestionWeb.GetWebWord(3040, Model.PeriodViewModel.SiteLanguage)&nbsp;<i class="fa fa-check"></i></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<input type="hidden" id="current-url" value="/@_controller/PeriodSelection" />
@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var selectedValue = -1;
            var selectedPeriod = -1;
            var minDate = new Date('@Model.PeriodViewModel.StartYear');
            var maxDate = new Date('@Model.PeriodViewModel.EndYear');
            minDate.setHours(0, 0, 0);
            maxDate.setHours(0, 0, 0);
            var passSelectionComparative = false;
            var comparativePeriodCalendarType = 1; //dateToDate
            var nextStep = "index";

            $('#datetimepicker-begin').datetimepicker({
                inline: true,
                locale: '@Model.PeriodViewModel.LanguageName',
                format: '@Model.PeriodViewModel.CalendarFormat',
                useCurrent: false,
                minDate: minDate,
                maxDate: maxDate
            }).on('dp.change', function (e) {
                $('#begin-date-value').val($('#datetimepicker-begin').data('date'));
            });

            $(".datepicker-years .picker-switch").removeAttr('title')
                .on('click', function (e) {
                    e.stopPropagation();
                });

            $('#datetimepicker-end').datetimepicker({
                inline: true,
                locale: '@Model.PeriodViewModel.LanguageName',
                format: '@Model.PeriodViewModel.CalendarFormat',
                useCurrent: false,
                minDate: minDate,
                maxDate: maxDate
            }).on('dp.change', function (e) {
                $('#end-date-value').val($('#datetimepicker-end').data('date'));
            });

            $(".datepicker-years .picker-switch").removeAttr('title')
                .on('click', function (e) {
                    e.stopPropagation();
                });

            $('#year-sliding').selectpicker();
            $('#month-sliding').selectpicker();
            $('#week-sliding').selectpicker();
            $('#day-sliding').selectpicker();

            $('#year-sliding').on('change', function (e) {
                selectedValue = $('#year-sliding').val();
                selectedPeriod = $('#year-sliding').attr("selectedperiod");
                $('#month-sliding').selectpicker('val', '--');
                $('#week-sliding').selectpicker('val', '--');
                $('#day-sliding').selectpicker('val', '--');
                DisableSingleDates();
            });

            $('#month-sliding').on('change', function (e) {
                selectedValue = $('#month-sliding').val();
                selectedPeriod = $('#month-sliding').attr("selectedperiod");
                $('#year-sliding').selectpicker('val', '--');
                $('#week-sliding').selectpicker('val', '--');
                $('#day-sliding').selectpicker('val', '--');
                passSelectionComparative = true;
                comparativePeriodCalendarType = 1; //datetodate
                DisableSingleDates();
            });

            $('#week-sliding').on('change', function (e) {
                selectedValue = $('#week-sliding').val();
                selectedPeriod = $('#week-sliding').attr("selectedperiod");
                $('#year-sliding').selectpicker('val', '--');
                $('#month-sliding').selectpicker('val', '--');
                $('#day-sliding').selectpicker('val', '--');
                DisableSingleDates();
            });

            $('#day-sliding').on('change', function (e) {
                selectedValue = $('#day-sliding').val();
                selectedPeriod = $('#day-sliding').attr("selectedperiod");
                $('#year-sliding').selectpicker('val', '--');
                $('#month-sliding').selectpicker('val', '--');
                $('#week-sliding').selectpicker('val', '--');
                DisableSingleDates();
            });

            $('#current-year').on('click', function (e) {
                selectedPeriod = $('#current-year').attr("selectedperiod");
                DisableSlidingDates();
                EnableComparativeStudy();
                passSelectionComparative = true;
                comparativePeriodCalendarType = 1; //datetodate
            });

            $('#previous-year').on('click', function (e) {
                selectedPeriod = $('#previous-year').attr("selectedperiod");
                DisableSlidingDates();
                EnableComparativeStudy();
                passSelectionComparative = true;
                comparativePeriodCalendarType = 1; //datetodate
            });

            $('#previous-month').on('click', function (e) {
                selectedPeriod = $('#previous-month').attr("selectedperiod");
                DisableSlidingDates();
                passSelectionComparative = true;
                comparativePeriodCalendarType = 1; //datetodate
            });

            $('#next-week').on('click', function (e) {
                selectedPeriod = $('#next-week').attr("selectedperiod");
                DisableSlidingDates();
            });

            $('#previous-day').on('click', function (e) {
                selectedPeriod = $('#previous-day').attr("selectedperiod");
                DisableSlidingDates();
            });

            $('#penultimate-year').on('click', function (e) {
                selectedPeriod = $('#penultimate-year').attr("selectedperiod");
                DisableSlidingDates();
                DisableComparativeStudy();
            });

            function DisableSlidingDates() {
                selectedValue = -1;
                $('#month-sliding').selectpicker('val', '--');
            }

            function DisableSingleDates() {
                $('#current-year').prop('checked', false);
                $('#previous-year').prop('checked', false);
                $('#previous-month').prop('checked', false);
                $('#next-week').prop('checked', false);
                $('#previous-day').prop('checked', false);
            }

            function DisableComparativeStudy()
            {
                $('#isComparativeStudy').attr('checked', false);
                $('#isComparativeStudy').attr('disabled', true);
            }
            function EnableComparativeStudy()
            {
                $('#isComparativeStudy').removeAttr('disabled');
            }
            $('#Market').on('click', function (e) {
                e.preventDefault();
                
                nextStep = "Index";
                var verif = SlidingDateValidation("Index", true);

                if (!verif){
                    CalendarValidation("Index");
                }

            });

            $('#Media').on('click', function (e) {
                e.preventDefault();
        
                nextStep = "MediaSelection";
                var verif = SlidingDateValidation("MediaSelection", true);

                if (!verif){
                    CalendarValidation("MediaSelection");
                }

            });

            $('#Results').on('click', function (e) {
                e.preventDefault();
        
                nextStep = "Results";
                var verifNavig = CheckNavigation($(this));
                if (verifNavig) {
                    var verif = SlidingDateValidation("Results", true);

                    if (!verif){
                        CalendarValidation("Results");
                    }

                }
            });

            //$('#calendarSubmit').off("click");
            //$('#calendarSubmit').on("click", function (event) {
            //    PreventDefault(event);

            //    CalendarValidation("Results");
            //});

            function CalendarValidation(nextStepParam) {

                var module = @Model.CurrentModule;
                var portfModul = @TNS.AdExpress.Constantes.Web.Module.Name.ANALYSE_DYNAMIQUE;
                if (module == portfModul && !passSelectionComparative){
                    $('#selectionComparativeModal').modal('show');
                }else{
                    passSelectionComparative = true;
                }

                if(passSelectionComparative)
                {
                    $('#selectionComparativeModal').modal('hide');
                    var startDate = $('#begin-date-value').val();
                    var endDate = $('#end-date-value').val();
                    var isComparativeStudy = $('#isComparativeStudy').is(":checked");
                    if (startDate == '' || endDate == '') {
                        bootbox.alert(@Html.Raw(Json.Encode(Model.ErrorMessage.EmptySelection)));
                        return false;
                    }

                    var startD = new Date(parseInt(startDate.substr(6, 4)), parseInt(startDate.substr(3, 2)) - 1, parseInt(startDate.substr(0, 2)));
                    var endD = new Date(parseInt(endDate.substr(6, 4)), parseInt(endDate.substr(3, 2)) - 1, parseInt(endDate.substr(0, 2)));

                    if (startD > endD) {
                        bootbox.alert(@Html.Raw(Json.Encode(Model.ErrorMessage.PeriodErrorMessage)));
                        return false;
                    }

                    var params = {
                        selectedStartDate: startDate,
                        selectedEndDate: endDate,
                        nextStep: nextStepParam,
                        isComparativeStudy: isComparativeStudy
                    };

                    if (module == portfModul){
                        params.comparativePeriodType = comparativePeriodCalendarType;
                    }

                    $.ajax({
                        url: '@Url.Action("CalendarValidation", _controller)',
                        contentType: "application/x-www-form-urlencoded",
                        type: "POST",
                        datatype: "json",
                        data: params,
                        error: function (xmlHttpRequest, errorText, thrownError) {
                        },
                        success: function (data) {
                            if (data.Success == true) {
                                document.location = data.RedirectUrl;
                            }
                            else {
                                bootbox.alert(data.ErrorMessage);
                            }
                        }
                    });
                }

                return true;
            }

            //$('#slidingDateSubmit').off("click");
            //$('#slidingDateSubmit').on("click", function (event) {
            //    PreventDefault(event);

            //    SlidingDateValidation("Results", false);
            //});

            function SlidingDateValidation(nextStepParam, isBreadcrumb) {

                if (selectedPeriod == -1) {
                    if (!isBreadcrumb)
                        bootbox.alert(@Html.Raw(Json.Encode(Model.ErrorMessage.EmptySelection)));
                    return false;
                }

                var module = @Model.CurrentModule;
                var portfModul = @TNS.AdExpress.Constantes.Web.Module.Name.ANALYSE_DYNAMIQUE;
                if (module == portfModul && !passSelectionComparative){
                    $('#selectionComparativeModal').modal('show');
                }else{
                    passSelectionComparative = true;
                }

                if(passSelectionComparative)
                {
                    var isComparativeStudy = $('#isComparativeStudy').is(":checked");
                    var params = {
                        selectedPeriod: selectedPeriod,
                        selectedValue: selectedValue,
                        nextStep: nextStepParam,
                        isComparativeStudy: isComparativeStudy
                    };

                    if (module == portfModul){
                        params.comparativePeriodType = comparativePeriodCalendarType;
                    }

                    $.ajax({
                        url: '@Url.Action("SlidingDateValidation", _controller)',
                        contentType: "application/x-www-form-urlencoded",
                        type: "POST",
                        datatype: "json",
                        data: params,
                        error: function (xmlHttpRequest, errorText, thrownError) {
                        },
                        success: function (data) {
                            if (data.Success == true) {
                                document.location = data.RedirectUrl;
                            }
                            else
                            {
                                bootbox.alert(data.ErrorMessage);
                            }
                        }
                    });
                }

                return true;
            }

            function PreventDefault(event) {
                if (event.preventDefault) {
                    event.preventDefault();
                }
                else {
                    event.returnValue = false;
                }
            }

            //FIL D ARRIANE
            //TODO : A Metrre autre part
            function CheckNavigation(elmt) {

                var gotoResult = true;
                strHtml = "";
                var items = elmt.parent().parent().find('.btn.btn-warning.btn-circle.btn-empty');
                $.each(items, function (index, value) {
                    var page = $(value).attr('id');
                    if (page == "Media") {
                        strHtml += "<li>" + $('#Node_' + page).val() + "</li>";
                        gotoResult = false;
                    }
                });
                if (!gotoResult) {
                    strHtml = $('#Labels_NavigationNodeRequired').val() + "<ul>" + strHtml + "</ul>";
                    bootbox.alert(strHtml);
                    return false;
                }
                return true;
            }

            $("#selectionComparativeModal").on('shown.bs.modal', function (event) {
                var link = $(event.relatedTarget);// Button that triggered the modal
                var datas = link.data('gad').toString(); // Extract info from data-* attributes
                datas = datas.replace(/\[|\]/g, '');
                datas = datas.split(",");

                if (datas[0] === null || datas[0] == "" || datas[0] == 0 || datas[0] == "0") {
                    alert("Les infos Gad ne sont pas disponibles.");
                }
                else {
                    var params = {
                        idAddress: datas[2],
                        advertiser: datas[1]
                    };
                    CallGadInfos(params);
                }
            });


            $('#dateWeekComparative').on('click', function (e) {
                $('#dateToDate').prop('checked', false);
            });
            $('#dateToDate').on('click', function (e) {
                $('#dateWeekComparative').prop('checked', false);
            });

            $('#validateSelectionComparative').on('click', function (e) {
                $('#selectionComparativeModal').modal('hide');

                if($('#dateWeekComparative').is(':checked'))
                    comparativePeriodCalendarType = 0; //comparativeWeekDate
                else if($('#dateToDate').is(':checked'))
                    comparativePeriodCalendarType = 1; //datetodate

                passSelectionComparative = true;

                if (selectedPeriod != -1){
                    SlidingDateValidation(nextStep, true);
                }else{
                    CalendarValidation(nextStep)
                }
                
            });

        });
    </script>
    @Scripts.Render("~/bundles/detail-selection")
}
