@model Km.AdExpressClientWeb.Models.Contact.ContactViewModel
@{
    ViewBag.Title = Model.PresentationModel.ModuleTitle;
    Layout = "~/Views/Shared/_LayoutPublicContact.cshtml";


    string learnMoreAboutUsCancelLabel = string.Format(Model.Labels.LearnMoreAboutUsCancelLabel, Model.Labels.CompanyNameLabel);

}

<!----Start New DESGIN-->


<div class="ui-widget">
    @Html.ValidationSummary(true, "", new { @class = "ui-state-error ui-corner-all", style = "padding: 0 .7em" })
</div>

<div id="login_component">
    <div id="loginwidget">
        @if (TempData["Success"] != null)
        {
            using (Html.BeginForm("Index", "Home",  FormMethod.Get,new { role = "form", id = "formContact", enctype = "multipart/form-data" }))
            {
                 <div class="pg-loginDescription">
                     <div class="forgotcontact">
                         <span>@Model.Labels.ContactInformationsRegisterLabel – @Model.Labels.PhoneNumberDescription : @Model.ClientServicePhoneNumber – @Model.Labels.Email : @Model.ClientServiceEmail</span><br><br>

                         <span>@learnMoreAboutUsCancelLabel  </span>
                         <a href="@Model.Labels.KantarUrl" class="link">@Model.Labels.FindOutMoreLabel</a>

                     </div>
                     <br>
                 </div>
                <div class="loginbox_container">
                   
                    <input id="signin" type="submit" value="@Model.Labels.ReturToLogin" class="ui-button ui-widget ui-state-default ui-corner-all" role="button" aria-disabled="false" tabindex="9">
                </div>
                <input type="hidden" name="siteLanguage" id="siteLanguage" value="@(ViewBag.SiteLanguage)" />
            }         
        }
        else
        {
            using (Html.BeginForm("ContactUs", "Contact", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form", id = "formLogin", enctype = "multipart/form-data" }))
            {
                <div class="pg-loginDescription">@Model.PresentationModel.ModuleDescription</div>

                <div class="loginbox_container">
                    <div id="usrcpn" class="borderContainer">
                        <div>
                            @Html.TextBoxFor(m => m.Company, new { @class = "input", placeholder = string.Format("*{0}", Model.Labels.CompanyDescription), id = "company", autocomplete = "off", tabindex = "1" })
                         
                            @Html.ValidationMessageFor(m => m.Company, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="loginbox_container">
                    <div id="usrn">
                        <div>
                            @Html.TextBoxFor(m => m.Name, new { @class = "input", placeholder = string.Format("*{0}", Model.Labels.NameDescription), id = "username", autocomplete = "off", tabindex = "2" })
                            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="loginbox_container">
                    <div id="usrjob"  class="borderContainer">
                        <div>
                            @Html.TextBoxFor(m => m.JobTitle, new { @class = "input", placeholder = string.Format("*{0}", Model.Labels.TitleLabel), id = "userjob", autocomplete = "off", tabindex = "3" })
                            @Html.ValidationMessageFor(m => m.JobTitle, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="loginbox_container">
                    <div id="usrphone"  class="borderContainer">
                        <div>
                            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "input", placeholder = string.Format("*{0}", Model.Labels.PhoneNumberDescription), id = "userphone", autocomplete = "off", tabindex = "4" })
                            @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="loginbox_container">
                    <div id="usrmail"  class="borderContainer">
                        <div>
                            @Html.TextBoxFor(m => m.Mail, new { @class = "input", placeholder = string.Format("*{0}", Model.Labels.MailDescription), id = "usermail", autocomplete = "off", tabindex = "5" })
                            @Html.ValidationMessageFor(m => m.Mail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="loginbox_container">
                    <div id="usrcountry"  class="borderContainer">
                        <div>
                            @Html.TextBoxFor(m => m.Country, new { @class = "input", placeholder = string.Format("*{0}", Model.Labels.CountryDescription), id = "usercountry", autocomplete = "off", tabindex = "6" })
                            @Html.ValidationMessageFor(m => m.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="loginbox_container">
                    <div id="usrquestion"  class="borderContainer">
                        <div>
                            @Html.DropDownListFor(m => m.QuestionTag, Model.QuestionsTagItem, Model.Labels.QuestionTagDefault, new { @class = "input",  id = "userquestion", autocomplete = "off", tabindex = "7" })                           
                        </div>
                    </div>
                </div>
                <div class="loginbox_container">
                    <div id="usrcomment"  >
                        <div>
                            @Html.TextAreaFor(m => m.Comment, new { @class = "input", placeholder = string.Format("*{0}", Model.Labels.CommentDescription), rows = "1", cols="50", id = "usercomment", autocomplete = "off", tabindex = "8" })
                            @Html.ValidationMessageFor(m => m.Comment, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
               
              

                <div class="pg-required-text" >*@Model.Labels.RequiredFields</div>
              
                <div>
                    <br />
                    <span style="font-style: italic; text-align: left;">
                        @Model.Labels.ContactPrivacyDesc
                    </span>
                </div>

                <div class="loginbox_container">
                    <input id="signin" type="submit" value="@Model.Labels.Submit" class="ui-button ui-widget ui-state-default ui-corner-all" role="button" aria-disabled="false" tabindex="9">
                </div>

                <div class="loginbox_container">
                    <a id="contact_cancel" href="@Url.Action("Login", "Account", new {siteLanguage = ViewBag.SiteLanguage})" class="ui-button ui-widget ui-state-default ui-corner-all" role="button" aria-disabled="false" tabindex="9">
                        @Model.Labels.CancelLabel
                    </a>                   
                </div>
                <div class="loginbox_container">
                    <div style="padding-top:.2rem;padding-bottom:.2rem;" >@Model.Labels.ClientService.<br>@Model.Labels.PhoneNumberDescription : @Model.ClientServicePhoneNumber – @Model.Labels.Email : @Model.ClientServiceEmail</div>
                </div>
                <input type="hidden" name="siteLang" id="siteLang" value="@(ViewBag.SiteLanguage)" />

            }
        }

                </div>
</div>

<!----End New DESGIN-->


<input type="hidden" id="current-url" value="/Contact/Index" />

@section scripts {
    @Scripts.Render("~/bundles/cookies")
    @Scripts.Render("~/bundles/account")

    <script>
        createCookie("sortKey", "", 1);
        createCookie("sortOrder", "", 1);
    </script>
}