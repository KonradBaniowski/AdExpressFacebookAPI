<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:MultiSelectionTreeView">

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="19"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="19" Height="20" Background="Transparent">
                        <Border Width="9" Height="9" SnapsToDevicePixels="true" BorderBrush="#FF7898B5" BorderThickness="1" CornerRadius="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                    <GradientStop Color="White" Offset=".2"/>
                                    <GradientStop Color="#FFC0B7A6" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path x:Name="ExpandPath" Fill="Black" Margin="1,1,1,1" Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MultipleSelectionTreeViewItem}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding"
                Value="1,0,0,0" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MultipleSelectionTreeViewItem}">

                    <ControlTemplate.Resources>

                        <local:LeftMarginMultiplierConverter Length="19" x:Key="lengthConverter" />

                        <SolidColorBrush x:Key="SelectedItemBackgroundBrush"
                                         Color="#FFB3D0E5" />
                        <SolidColorBrush x:Key="SelectedItemBackgroundOnFocusLostBrush"
                                         Color="#FFB3D0E5"/>
                        <SolidColorBrush x:Key="SelectedItemForegroundBrush"
                                         Color="Black" />

                        <SolidColorBrush x:Key="GlyphBrush"
                                         Color="#FF9DA3A5" />
                        <SolidColorBrush x:Key="SelectedGlyphBrush"
                                         Color="#FFFFFFFF" />

                    </ControlTemplate.Resources>

                    <StackPanel Orientation="Vertical">

                        <Border x:Name="Selection_Border"
                                Height="20"
            				    Background="{TemplateBinding Background}"
            				    BorderBrush="{TemplateBinding BorderBrush}"
            				    BorderThickness="{TemplateBinding BorderThickness}"
            				    Padding="{TemplateBinding Padding}">

                            <Grid Margin="{Binding Converter={StaticResource lengthConverter},  RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="19" Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <ToggleButton x:Name="Expander"
	            					          Style="{StaticResource ExpandCollapseToggleStyle}"
	            					          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
	            					          ClickMode="Press" />

                                <ContentPresenter x:Name="PART_Header"
                                                  Grid.Column="1"
                                                  Content="{TemplateBinding HeaderedContentControl.Header}"
                                                  ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                  ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                  ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsExpanded"
            				Value="false">
                            <Setter Property="Visibility"
            					Value="Collapsed"
            					TargetName="ItemsHost" />
                        </Trigger>

                        <Trigger Property="HasItems"
            				Value="false">
                            <Setter Property="Visibility"
            					Value="Hidden"
            					TargetName="Expander" />
                        </Trigger>

                        <Trigger Property="IsSelected"
            					 Value="true">

                            <Setter Property="Foreground"
            						Value="{DynamicResource SelectedItemForegroundBrush}" />

                            <Setter Property="Background" 	
            						TargetName="Selection_Border" 
            						Value="{DynamicResource SelectedItemBackgroundBrush}"/>

                            <Setter Property="Background"
            						TargetName="Expander"
            						Value="{DynamicResource SelectedGlyphBrush}" />

                        </Trigger>

                        <MultiTrigger>

                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true" />
                                <Condition Property="IsSelectionActive"
                                           Value="false" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Background"
                                    Value="{DynamicResource SelectedItemBackgroundOnFocusLostBrush}"
                                    TargetName="Selection_Border" />

                            <Setter Property="Foreground"
                                    Value="{DynamicResource SelectedItemForegroundBrush}" />

                            <Setter Property="Background"
            						TargetName="Expander"
            						Value="{DynamicResource SelectedGlyphBrush}" />

                        </MultiTrigger>

                        <Trigger Property="IsEnabled"
            				     Value="false">

                            <Setter Property="Foreground"
            					    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MultipleSelectionTreeView}" >
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MultipleSelectionTreeView}">

                    <Border SnapsToDevicePixels="true" 
						        x:Name="Border" 
						        BorderBrush="{TemplateBinding BorderBrush}" 
						        BorderThickness="{TemplateBinding BorderThickness}">

                        <ScrollViewer Focusable="false" 
							              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							              Background="{TemplateBinding Background}" 
							              Padding="{TemplateBinding Padding}" 
							              CanContentScroll="false"
							              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
							              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">

                            <ItemsPresenter />

                        </ScrollViewer>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
