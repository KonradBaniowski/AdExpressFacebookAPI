#region Informations
///////////////////////////////////////////////////////////
//  Vehicle.cs
//  Implementation of the Class Vehicle
//  Generated by Enterprise Architect
//  Created on:      10/03/2006
//  Original author: D.V. Mussuma
///////////////////////////////////////////////////////////
#endregion

using System;
using System.Collections;
using System.Data;
using System.Text;
using BastetDataAccess=TNS.AdExpress.Anubis.Bastet.DataAccess;
using BastetCommon=TNS.AdExpress.Bastet.Common;
using TNS.FrameWork.DB.Common;

namespace TNS.AdExpress.Anubis.Bastet.Rules
{
	/// <summary>
	/// Traite les données des statistiques médias.
	/// </summary>
	public class Vehicle
	{
		#region Top des clients par module
		/// <summary>
		/// Obtient le top des médias par module.
		/// </summary>
		/// <param name="parameters">paramètres client.</param>
		/// <returns>données top connections médias par module.</returns>
        public static DataTable TopByModule(BastetCommon.Parameters parameters, int language, IDataSource dataSourceClassification) {
			
			DataTable dt=null, dtResult=null;
			ArrayList idModuleArr=null;
			ArrayList idVehicleArr = null;
			DataRow resultRow=null;
            dt = BastetDataAccess.Vehicle.TopByModule(parameters, language, dataSourceClassification);
			object tempValue=null;
			string columnName="";
			if(dt!=null && dt.Rows.Count>0){				

				//Table de résultats
				
				dtResult = new DataTable();
				idModuleArr = new ArrayList();
				dtResult.Columns.Add("id_vehicle",System.Type.GetType("System.Int64"));
				dtResult.Columns.Add("vehicle",System.Type.GetType("System.String"));
				dtResult.Columns.Add("connection_number",System.Type.GetType("System.Double"));		
				foreach(DataRow dr in dt.Rows){
					if(!idModuleArr.Contains(dr["id_module"].ToString())){
						columnName = dr["module"].ToString().Trim();
						dtResult.Columns.Add(columnName,System.Type.GetType("System.Double"));
						idModuleArr.Add(dr["id_module"].ToString());
					}										
				}				
				
				idVehicleArr = new ArrayList();			
				int j=0;
				foreach(DataRow row in dt.Rows){
					if(!idVehicleArr.Contains(row["id_vehicle"].ToString())){
						resultRow=dtResult.NewRow();							
						resultRow["id_vehicle"] = Int64.Parse(row["id_vehicle"].ToString());
						resultRow["vehicle"] = row["vehicle"].ToString();
						resultRow["connection_number"] = double.Parse(dt.Compute("sum(connection_number)","id_vehicle="+row["id_vehicle"].ToString()).ToString()); 
						for(int i=3;i<dtResult.Columns.Count;i++){								
							tempValue = dt.Compute("sum(connection_number)","id_vehicle="+row["id_vehicle"].ToString()+" and id_module="+idModuleArr[j].ToString()); 						
							if(tempValue!=System.DBNull.Value && !tempValue.Equals(""))
								resultRow[i] = double.Parse(tempValue.ToString());
							else resultRow[i] =(double)0;
							j++;
						}
						dtResult.Rows.Add(resultRow);	
						idVehicleArr.Add(row["id_vehicle"].ToString());
						j=0;
					}
				}
				
				//Trie tableau
				DataSet ds2=new DataSet();				
				ds2.Merge(dtResult.Select("","connection_number DESC"));
				dtResult = ds2.Tables[0];
				
			}
			
			return dtResult;
		}
		#endregion
	}
}
