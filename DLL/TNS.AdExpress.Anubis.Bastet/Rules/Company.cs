#region Informations
///////////////////////////////////////////////////////////
//  Client.cs
//  Implementation of the Class BastetDataAccess
//  Generated by Enterprise Architect
//  Created on:      07/03/2006
//  Original author: D.V. Mussuma
///////////////////////////////////////////////////////////
#endregion

using System;
using System.Collections;
using System.Data;
using System.Text;
using BastetDataAccess=TNS.AdExpress.Anubis.Bastet.DataAccess;
using BastetCommon=TNS.AdExpress.Bastet.Common;
namespace TNS.AdExpress.Anubis.Bastet.Rules
{
	/// <summary>
	/// Traite les données clients pour la génération du fichier excel
	/// </summary>
	public class Company
	{
		#region Top des sociétés par mois
		/// <summary>
		/// Obtient le top des sociétés par mois.
		/// </summary>
		/// <param name="parameters">paramètres client.</param>
		/// <returns>données top connections sociétés par mois.</returns>
		public static DataTable  TopConnectedByMonth(BastetCommon.Parameters parameters){
			
			DataTable dt=null, dtResult=null;
			Int64 oldDateConnection=0;
			ArrayList idCompaniesArr = null;
			DataRow resultRow=null;
			dt = BastetDataAccess.Company.TopConnectedByMonth(parameters);
			object tempValue=null;
			string columnName="";
			if(dt!=null && dt.Rows.Count>0){				

				//Table de résultats
				
				dtResult = new DataTable();

				dtResult.Columns.Add("company",System.Type.GetType("System.String"));
				dtResult.Columns.Add("group_contact",System.Type.GetType("System.String"));
				dtResult.Columns.Add("connection_number",System.Type.GetType("System.Double"));		
				foreach(DataRow dr in dt.Rows){
					if(oldDateConnection!=Int64.Parse(dr["date_connection"].ToString())){
						columnName = "month_"+dr["date_connection"].ToString();
						dtResult.Columns.Add(columnName,System.Type.GetType("System.Double"));						
					}
					
					oldDateConnection=Int64.Parse(dr["date_connection"].ToString());
				}
				

				idCompaniesArr = new ArrayList();
				columnName="";
				foreach(DataRow row in dt.Rows){
					if(!idCompaniesArr.Contains(row["id_company"].ToString())){
						resultRow=dtResult.NewRow();							
						resultRow["company"] = row["company"].ToString();
						resultRow["group_contact"] = row["group_contact"].ToString();
						resultRow["connection_number"] = double.Parse(dt.Compute("sum(connection_number)","id_company="+row["id_company"].ToString()).ToString()); 
						for(int i=3;i<dtResult.Columns.Count;i++){	
							columnName=dtResult.Columns[i].ColumnName;
							columnName = columnName.Substring(6,6);
							tempValue = dt.Compute("sum(connection_number)","id_company="+row["id_company"].ToString()+" and date_connection="+columnName); 						
							if(tempValue!=System.DBNull.Value && !tempValue.Equals(""))
								resultRow[i] = double.Parse(tempValue.ToString());
							else resultRow[i] =(double)0;
						}
						dtResult.Rows.Add(resultRow);	
						idCompaniesArr.Add(row["id_company"].ToString());
					}
				}
				
				//Trie tableau
				DataSet ds2=new DataSet();				
				ds2.Merge(dtResult.Select("","connection_number DESC"));
				dtResult = ds2.Tables[0];
				
			}
			
			return dtResult;
		}
		#endregion

		#region Top des sociétés par jour nommé
		/// <summary>
		/// Obtient le top des sociétés par jour nommé.
		/// </summary>
		/// <param name="parameters">paramètres client.</param>
		/// <returns>données top connections sociétés par jour nommé</returns>
		public static DataTable  TopConnectedByDay(BastetCommon.Parameters parameters){
			
			DataTable dt=null, dtResult=null;
			Int64 oldDateConnection=0;
			ArrayList idCompaniesArr = null;
			DataRow resultRow=null;
			dt = BastetDataAccess.Company.TopConnectedByDay(parameters);
			object tempValue=null;
			string columnName="";
			if(dt!=null && dt.Rows.Count>0){				

				//Table de résultats
				
				dtResult = new DataTable();

				dtResult.Columns.Add("company",System.Type.GetType("System.String"));
				dtResult.Columns.Add("group_contact",System.Type.GetType("System.String"));
				dtResult.Columns.Add("connection_number",System.Type.GetType("System.Double"));		
				foreach(DataRow dr in dt.Rows){
					if(oldDateConnection!=Int64.Parse(dr["date_connection"].ToString())){
						columnName = "day_"+dr["date_connection"].ToString();
						dtResult.Columns.Add(columnName,System.Type.GetType("System.Double"));						
					}
					
					oldDateConnection=Int64.Parse(dr["date_connection"].ToString());
				}
				

				idCompaniesArr = new ArrayList();
				columnName="";
				foreach(DataRow row in dt.Rows){
					if(!idCompaniesArr.Contains(row["id_company"].ToString())){
						resultRow=dtResult.NewRow();							
						resultRow["company"] = row["company"].ToString();
						resultRow["group_contact"] = row["group_contact"].ToString();
						resultRow["connection_number"] = double.Parse(dt.Compute("sum(connection_number)","id_company="+row["id_company"].ToString()).ToString()); 
						for(int i=3;i<dtResult.Columns.Count;i++){	
							columnName=dtResult.Columns[i].ColumnName;
							columnName = columnName.Substring(4,1);
							tempValue = dt.Compute("sum(connection_number)","id_company="+row["id_company"].ToString()+" and date_connection="+columnName); 						
							if(tempValue!=System.DBNull.Value && !tempValue.Equals(""))
								resultRow[i] = double.Parse(tempValue.ToString());
							else resultRow[i] =(double)0;
						}
						dtResult.Rows.Add(resultRow);	
						idCompaniesArr.Add(row["id_company"].ToString());
					}
				}
				
				//Trie tableau
				DataSet ds2=new DataSet();				
				ds2.Merge(dtResult.Select("","connection_number DESC"));
				dtResult = ds2.Tables[0];
				
			}
			
			return dtResult;
		}
		#endregion

	}
}
