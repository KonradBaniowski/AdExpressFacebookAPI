#region Informations
///////////////////////////////////////////////////////////
//  BastetConfigDataAccess.cs
//  Implementation of the Class BastetDataAccess
//  Generated by Enterprise Architect
//  Created on:      17-nov.-2005 16:51:11
//  Original author: D.V. Mussuma
///////////////////////////////////////////////////////////
#endregion

using System;
using System.Xml;

using TNS.AdExpress.Anubis.Bastet.Common;
using TNS.FrameWork.DB.Common;
using System.Collections.Generic;

namespace TNS.AdExpress.Anubis.Bastet.DataAccess {
	/// <summary>
	/// Obtient les données pour la génération des configurations de Bastet
	/// </summary>
	public class BastetConfigDataAccess {
							
		/// <summary>
		/// Load Bastet configuration
		/// </summary>
        /// <param name="dataSrc">Data Source</param>
        /// <param name="cfg">configuration object</param>
		internal static void Load(IDataSource dataSrc, BastetConfig cfg){
			XmlTextReader Reader;
			string Value="60";
            var excelTabs = new List<Constantes.excelTabs>();
			try{
				Reader=(XmlTextReader)dataSrc.GetSource();
				// Parse XML file
				while(Reader.Read()){
					string name="Arial";
					string size="10";
					
					if(Reader.NodeType==XmlNodeType.Element){
						
						switch(Reader.LocalName){
							case "CustomerMail":
								Value=Reader.GetAttribute("server");
								if (Value!=null) cfg.CustomerMailServer = Value;
								Value=Reader.GetAttribute("port");
								if (Value!=null) cfg.CustomerMailPort = int.Parse(Value);
								Value=Reader.GetAttribute("from");
								if (Value!=null) cfg.CustomerMailFrom =Value;
								Value=Reader.GetAttribute("subject");
								if (Value!=null) cfg.CustomerMailSubject = Value;
								Value=Reader.GetAttribute("webServer");
								if (Value!=null) cfg.WebServer = Value;
								break;
							case "ExcelPath":
								Value=Reader.GetAttribute("path");
								if (Value!=null) cfg.ExcelPath = Value;
								break;
                            case "excelTab":
                                Value = Reader.GetAttribute("id");
                                if (Value != null) excelTabs.Add((Constantes.excelTabs)Enum.Parse(typeof(Constantes.excelTabs), Value, true));
                                break;	
						}
					}
				}
                cfg.ExcelTabs = excelTabs;
				Reader.Close();
			}
			catch(System.Exception err){
				throw (new Exceptions.BastetDataAccessException("Impossible de charger Bastet configuration",err));
			}
		}

			

	}

}
