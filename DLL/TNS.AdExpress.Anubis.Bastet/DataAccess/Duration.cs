#region Informations
///////////////////////////////////////////////////////////
//  Duration.cs
//  Implementation of the Class BastetDataAccess
//  Generated by Enterprise Architect
//  Created on:      7-dec.-2005 11:26:11
//  Original author: D.V. Mussuma
///////////////////////////////////////////////////////////
#endregion

using System;
using System.Data;
using System.Text;

using BastetCommon=TNS.AdExpress.Bastet.Common;
using DBSchema=TNS.AdExpress.Constantes.DB.Schema;
using DBTables=TNS.AdExpress.Constantes.DB.Tables;
using AnubisBastet=TNS.AdExpress.Anubis.Bastet;
using TNS.AdExpress.Bastet.Web;
using TNS.AdExpress.Domain.DataBaseDescription;


namespace TNS.AdExpress.Anubis.Bastet.DataAccess
{
	/// <summary>
	///  Obtient les données pour la durée moyenne des connections clients
	/// </summary>
	public class Duration
	{
		#region Top des clients qui se connectent		

		/// <summary>
		/// Durée moyenne des connections par client
		/// </summary>
		/// <param name="parameters">parametres</param>
		/// <returns>Durée moyenne des connections</returns>
		public static DataTable  ConnexionAverage(BastetCommon.Parameters parameters){
			try{
				#region Requête
				StringBuilder sql = new StringBuilder(3000);
				Table companyTable = WebApplicationParameters.DataBaseDescription.GetTable(TableIds.rightCompany);
				Table contactTable = WebApplicationParameters.DataBaseDescription.GetTable(TableIds.rightContact);
				Table addressTable = WebApplicationParameters.DataBaseDescription.GetTable(TableIds.rightAddress);
				Table loginTable = WebApplicationParameters.DataBaseDescription.GetTable(TableIds.rightLogin);
				Table connectionByLoginTable = WebApplicationParameters.DataBaseDescription.GetTable(TableIds.trackingConnectionByLogin);
				Table connectionTimeTable = WebApplicationParameters.DataBaseDescription.GetTable(TableIds.trackingConnectionTime);

				//select
				sql.Append(" select ");
				if(parameters!=null && parameters.Logins.Length==0){
                    sql.Append(" " + companyTable.Prefix + ".id_company ," + companyTable.Prefix + ".company," + connectionTimeTable.Prefix + ".id_login," + loginTable.Prefix + ".login, " + contactTable.Prefix + ".first_name, " + contactTable.Prefix + ".name, ");					
				}
				 sql.Append(" DECODE(sum("+connectionByLoginTable.Prefix+".CONNECTION_NUMBER),0,0,Round(sum("+connectionTimeTable.Prefix+".CONNECTION_TIME)/sum("+connectionByLoginTable.Prefix+".CONNECTION_NUMBER),0) ) as CONNEXION_AVERAGE ");			
				//From				
				sql.Append(" from " + connectionTimeTable.SqlWithPrefix +"," + connectionByLoginTable.SqlWithPrefix);
				if (parameters != null && parameters.Logins.Length == 0) {
					sql.Append(" ," + loginTable.SqlWithPrefix + "," + contactTable.SqlWithPrefix
						+ "," + addressTable.SqlWithPrefix + "," + companyTable.SqlWithPrefix);
				}
				//Where
                sql.Append(" where " + connectionTimeTable.Prefix + ".date_connection  between " + parameters.PeriodBeginningDate.ToString("yyyyMMdd") + " and " + parameters.PeriodEndDate.ToString("yyyyMMdd"));
				if(parameters!=null && parameters.Logins.Length>0)
					sql.Append(" and "+connectionTimeTable.Prefix+".id_login in ("+parameters.Logins+") ");
				sql.Append(" and "+connectionByLoginTable.Prefix+".id_login="+connectionTimeTable.Prefix+".id_login ");
				if(parameters!=null && parameters.Logins.Length==0){
					sql.Append(" and "+loginTable.Prefix+".id_login="+connectionTimeTable.Prefix+".id_login ");
					sql.Append(" and "+loginTable.Prefix+".id_contact="+contactTable.Prefix+".id_contact ");
					sql.Append(" and "+contactTable.Prefix+".id_address = "+addressTable.Prefix+".id_address ");
					sql.Append(" and "+addressTable.Prefix+".id_company="+companyTable.Prefix+".id_company ");
				}
				
				if(parameters!=null && parameters.Logins.Length==0){
					//Gourp by
                    sql.Append(" group by  " + companyTable.Prefix + ".id_company," + companyTable.Prefix + ".company," + connectionTimeTable.Prefix + ".id_login," + loginTable.Prefix + ".login, " + contactTable.Prefix + ".first_name, " + contactTable.Prefix + ".name ");
					//Order by
					sql.Append(" order by  CONNEXION_AVERAGE  desc,"+loginTable.Prefix+".login ");
				}
			
				#endregion
				
				#region Execution
		
				return(parameters.Source.Fill(sql.ToString()).Tables[0]);
				#endregion
			}
			catch(System.Exception err){
				throw (new AnubisBastet.Exceptions.BastetDataAccessException(" ConnexionAverage : Impossible to get average connection duration by client ", err));
			}
			
	
		}
		#endregion
	}
}
