#region Informations
///////////////////////////////////////////////////////////
//  Duration.cs
//  Implementation of the Class BastetDataAccess
//  Generated by Enterprise Architect
//  Created on:      7-dec.-2005 11:26:11
//  Original author: D.V. Mussuma
///////////////////////////////////////////////////////////
#endregion

using System;
using System.Data;
using System.Text;

using BastetCommon=TNS.AdExpress.Bastet.Common;
using DBSchema=TNS.AdExpress.Constantes.DB.Schema;
using DBTables=TNS.AdExpress.Constantes.DB.Tables;
using AnubisBastet=TNS.AdExpress.Anubis.Bastet;

namespace TNS.AdExpress.Anubis.Bastet.DataAccess
{
	/// <summary>
	///  Obtient les données pour la durée moyenne des connections clients
	/// </summary>
	public class Duration
	{
		#region Top des clients qui se connectent		

		/// <summary>
		/// Durée moyenne des connections par client
		/// </summary>
		/// <param name="parameters">parametres</param>
		/// <returns>Durée moyenne des connections</returns>
		public static DataTable  ConnexionAverage(BastetCommon.Parameters parameters){
			try{
				#region Requête
				StringBuilder sql = new StringBuilder(3000);
				//select
				sql.Append(" select ");
				if(parameters!=null && parameters.Logins.Length==0){
					sql.Append(" "+DBTables.COMPANY_PREFIXE+".id_company ,"+DBTables.COMPANY_PREFIXE+".company,"+DBTables.CONNECTION_TIME_PREFIXE+".id_login,"+DBTables.LOGIN_PREFIXE+".login ,");					
				}
				 sql.Append(" DECODE(sum("+DBTables.CONNECTION_BY_LOGIN_PREFIXE+".CONNECTION_NUMBER),0,0,Round(sum("+DBTables.CONNECTION_TIME_PREFIXE+".CONNECTION_TIME)/sum("+DBTables.CONNECTION_BY_LOGIN_PREFIXE+".CONNECTION_NUMBER),0) ) as CONNEXION_AVERAGE ");			
				//From
				sql.Append(" from "+DBSchema.UNIVERS_SCHEMA+".CONNECTION_TIME "+DBTables.CONNECTION_TIME_PREFIXE);
				sql.Append(" , "+DBSchema.UNIVERS_SCHEMA+".CONNECTION_BY_LOGIN "+DBTables.CONNECTION_BY_LOGIN_PREFIXE);
				if(parameters!=null && parameters.Logins.Length==0){
					sql.Append(" ,"+DBSchema.LOGIN_SCHEMA+".LOGIN "+DBTables.LOGIN_PREFIXE+","+DBSchema.LOGIN_SCHEMA+".CONTACT "+DBTables.CONTACT_PREFIXE
						+","+DBSchema.LOGIN_SCHEMA+".ADDRESS "+DBTables.ADDRESS_PREFIXE+","+DBSchema.LOGIN_SCHEMA+".COMPANY "+DBTables.COMPANY_PREFIXE);
				}
				//Where
				sql.Append(" where "+DBTables.CONNECTION_TIME_PREFIXE+".date_connection  between "+parameters.PeriodBeginningDate+" and "+parameters.PeriodEndDate);
				if(parameters!=null && parameters.Logins.Length>0)
					sql.Append(" and "+DBTables.CONNECTION_TIME_PREFIXE+".id_login in ("+parameters.Logins+") ");
				sql.Append(" and "+DBTables.CONNECTION_BY_LOGIN_PREFIXE+".id_login="+DBTables.CONNECTION_TIME_PREFIXE+".id_login ");
				if(parameters!=null && parameters.Logins.Length==0){
					sql.Append(" and "+DBTables.LOGIN_PREFIXE+".id_login="+DBTables.CONNECTION_TIME_PREFIXE+".id_login ");
					sql.Append(" and "+DBTables.LOGIN_PREFIXE+".id_contact="+DBTables.CONTACT_PREFIXE+".id_contact ");
					sql.Append(" and "+DBTables.CONTACT_PREFIXE+".id_address = "+DBTables.ADDRESS_PREFIXE+".id_address ");
					sql.Append(" and "+DBTables.ADDRESS_PREFIXE+".id_company="+DBTables.COMPANY_PREFIXE+".id_company ");
				}
				
				if(parameters!=null && parameters.Logins.Length==0){
					//Gourp by
					sql.Append(" group by  "+DBTables.COMPANY_PREFIXE+".id_company,"+DBTables.COMPANY_PREFIXE+".company,"+DBTables.CONNECTION_TIME_PREFIXE+".id_login,"+DBTables.LOGIN_PREFIXE+".login ");
					//Order by
					sql.Append(" order by  CONNEXION_AVERAGE  desc,"+DBTables.LOGIN_PREFIXE+".login ");
				}
//						else {
				//				//Order by
				//				sql.Append(" order by  CONNEXION_AVERAGE  desc  ");
				//			}
			
				#endregion
				
				#region Execution
		
				return(parameters.Source.Fill(sql.ToString()).Tables[0]);
				#endregion
			}
			catch(System.Exception err){
				throw (new AnubisBastet.Exceptions.BastetDataAccessException(" ConnexionAverage : Impossible d'obtenir Durée moyenne des connections par clients ", err));
			}
			
	
		}
		#endregion
	}
}
