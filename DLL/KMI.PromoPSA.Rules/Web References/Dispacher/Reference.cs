//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace KMI.PromoPSA.Rules.Dispacher {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DispacherSoap", Namespace="http://tempuri.org/")]
    public partial class Dispacher : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsAccessibleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdvertReloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdvertStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableIdFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseAdvertStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockAdvertStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseOneAdvertStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOneAdvertStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeAdvertStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateMonthOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Dispacher() {
            this.Url = global::KMI.PromoPSA.Rules.Properties.Settings.Default.KMI_PromoPSA_Rules_Dispacher_Dispacher;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsAccessibleCompletedEventHandler IsAccessibleCompleted;
        
        /// <remarks/>
        public event AdvertReloadCompletedEventHandler AdvertReloadCompleted;
        
        /// <remarks/>
        public event GetAdvertStatusCompletedEventHandler GetAdvertStatusCompleted;
        
        /// <remarks/>
        public event GetAvailableIdFormCompletedEventHandler GetAvailableIdFormCompleted;
        
        /// <remarks/>
        public event ReleaseAdvertStatusCompletedEventHandler ReleaseAdvertStatusCompleted;
        
        /// <remarks/>
        public event LockAdvertStatusCompletedEventHandler LockAdvertStatusCompleted;
        
        /// <remarks/>
        public event ReleaseOneAdvertStatusCompletedEventHandler ReleaseOneAdvertStatusCompleted;
        
        /// <remarks/>
        public event GetOneAdvertStatusCompletedEventHandler GetOneAdvertStatusCompleted;
        
        /// <remarks/>
        public event ChangeAdvertStatusCompletedEventHandler ChangeAdvertStatusCompleted;
        
        /// <remarks/>
        public event ValidateMonthCompletedEventHandler ValidateMonthCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsAccessible", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsAccessible() {
            object[] results = this.Invoke("IsAccessible", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsAccessibleAsync() {
            this.IsAccessibleAsync(null);
        }
        
        /// <remarks/>
        public void IsAccessibleAsync(object userState) {
            if ((this.IsAccessibleOperationCompleted == null)) {
                this.IsAccessibleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAccessibleOperationCompleted);
            }
            this.InvokeAsync("IsAccessible", new object[0], this.IsAccessibleOperationCompleted, userState);
        }
        
        private void OnIsAccessibleOperationCompleted(object arg) {
            if ((this.IsAccessibleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAccessibleCompleted(this, new IsAccessibleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdvertReload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AdvertReload() {
            this.Invoke("AdvertReload", new object[0]);
        }
        
        /// <remarks/>
        public void AdvertReloadAsync() {
            this.AdvertReloadAsync(null);
        }
        
        /// <remarks/>
        public void AdvertReloadAsync(object userState) {
            if ((this.AdvertReloadOperationCompleted == null)) {
                this.AdvertReloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdvertReloadOperationCompleted);
            }
            this.InvokeAsync("AdvertReload", new object[0], this.AdvertReloadOperationCompleted, userState);
        }
        
        private void OnAdvertReloadOperationCompleted(object arg) {
            if ((this.AdvertReloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdvertReloadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdvertStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AdvertStatus[] GetAdvertStatus(long loginId, int nbAdvert) {
            object[] results = this.Invoke("GetAdvertStatus", new object[] {
                        loginId,
                        nbAdvert});
            return ((AdvertStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAdvertStatusAsync(long loginId, int nbAdvert) {
            this.GetAdvertStatusAsync(loginId, nbAdvert, null);
        }
        
        /// <remarks/>
        public void GetAdvertStatusAsync(long loginId, int nbAdvert, object userState) {
            if ((this.GetAdvertStatusOperationCompleted == null)) {
                this.GetAdvertStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdvertStatusOperationCompleted);
            }
            this.InvokeAsync("GetAdvertStatus", new object[] {
                        loginId,
                        nbAdvert}, this.GetAdvertStatusOperationCompleted, userState);
        }
        
        private void OnGetAdvertStatusOperationCompleted(object arg) {
            if ((this.GetAdvertStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdvertStatusCompleted(this, new GetAdvertStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAvailableIdForm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetAvailableIdForm(long loginId) {
            object[] results = this.Invoke("GetAvailableIdForm", new object[] {
                        loginId});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableIdFormAsync(long loginId) {
            this.GetAvailableIdFormAsync(loginId, null);
        }
        
        /// <remarks/>
        public void GetAvailableIdFormAsync(long loginId, object userState) {
            if ((this.GetAvailableIdFormOperationCompleted == null)) {
                this.GetAvailableIdFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableIdFormOperationCompleted);
            }
            this.InvokeAsync("GetAvailableIdForm", new object[] {
                        loginId}, this.GetAvailableIdFormOperationCompleted, userState);
        }
        
        private void OnGetAvailableIdFormOperationCompleted(object arg) {
            if ((this.GetAvailableIdFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableIdFormCompleted(this, new GetAvailableIdFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReleaseAdvertStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReleaseAdvertStatus(long loginId) {
            this.Invoke("ReleaseAdvertStatus", new object[] {
                        loginId});
        }
        
        /// <remarks/>
        public void ReleaseAdvertStatusAsync(long loginId) {
            this.ReleaseAdvertStatusAsync(loginId, null);
        }
        
        /// <remarks/>
        public void ReleaseAdvertStatusAsync(long loginId, object userState) {
            if ((this.ReleaseAdvertStatusOperationCompleted == null)) {
                this.ReleaseAdvertStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseAdvertStatusOperationCompleted);
            }
            this.InvokeAsync("ReleaseAdvertStatus", new object[] {
                        loginId}, this.ReleaseAdvertStatusOperationCompleted, userState);
        }
        
        private void OnReleaseAdvertStatusOperationCompleted(object arg) {
            if ((this.ReleaseAdvertStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseAdvertStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LockAdvertStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LockAdvertStatus(long loginId, long idForm) {
            this.Invoke("LockAdvertStatus", new object[] {
                        loginId,
                        idForm});
        }
        
        /// <remarks/>
        public void LockAdvertStatusAsync(long loginId, long idForm) {
            this.LockAdvertStatusAsync(loginId, idForm, null);
        }
        
        /// <remarks/>
        public void LockAdvertStatusAsync(long loginId, long idForm, object userState) {
            if ((this.LockAdvertStatusOperationCompleted == null)) {
                this.LockAdvertStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockAdvertStatusOperationCompleted);
            }
            this.InvokeAsync("LockAdvertStatus", new object[] {
                        loginId,
                        idForm}, this.LockAdvertStatusOperationCompleted, userState);
        }
        
        private void OnLockAdvertStatusOperationCompleted(object arg) {
            if ((this.LockAdvertStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockAdvertStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReleaseOneAdvertStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReleaseOneAdvertStatus(long loginId, long idForm) {
            this.Invoke("ReleaseOneAdvertStatus", new object[] {
                        loginId,
                        idForm});
        }
        
        /// <remarks/>
        public void ReleaseOneAdvertStatusAsync(long loginId, long idForm) {
            this.ReleaseOneAdvertStatusAsync(loginId, idForm, null);
        }
        
        /// <remarks/>
        public void ReleaseOneAdvertStatusAsync(long loginId, long idForm, object userState) {
            if ((this.ReleaseOneAdvertStatusOperationCompleted == null)) {
                this.ReleaseOneAdvertStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseOneAdvertStatusOperationCompleted);
            }
            this.InvokeAsync("ReleaseOneAdvertStatus", new object[] {
                        loginId,
                        idForm}, this.ReleaseOneAdvertStatusOperationCompleted, userState);
        }
        
        private void OnReleaseOneAdvertStatusOperationCompleted(object arg) {
            if ((this.ReleaseOneAdvertStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseOneAdvertStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOneAdvertStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AdvertStatus GetOneAdvertStatus(long loginId, long idForm) {
            object[] results = this.Invoke("GetOneAdvertStatus", new object[] {
                        loginId,
                        idForm});
            return ((AdvertStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetOneAdvertStatusAsync(long loginId, long idForm) {
            this.GetOneAdvertStatusAsync(loginId, idForm, null);
        }
        
        /// <remarks/>
        public void GetOneAdvertStatusAsync(long loginId, long idForm, object userState) {
            if ((this.GetOneAdvertStatusOperationCompleted == null)) {
                this.GetOneAdvertStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOneAdvertStatusOperationCompleted);
            }
            this.InvokeAsync("GetOneAdvertStatus", new object[] {
                        loginId,
                        idForm}, this.GetOneAdvertStatusOperationCompleted, userState);
        }
        
        private void OnGetOneAdvertStatusOperationCompleted(object arg) {
            if ((this.GetOneAdvertStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOneAdvertStatusCompleted(this, new GetOneAdvertStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeAdvertStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeAdvertStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> idForm, long activationCode) {
            this.Invoke("ChangeAdvertStatus", new object[] {
                        idForm,
                        activationCode});
        }
        
        /// <remarks/>
        public void ChangeAdvertStatusAsync(System.Nullable<long> idForm, long activationCode) {
            this.ChangeAdvertStatusAsync(idForm, activationCode, null);
        }
        
        /// <remarks/>
        public void ChangeAdvertStatusAsync(System.Nullable<long> idForm, long activationCode, object userState) {
            if ((this.ChangeAdvertStatusOperationCompleted == null)) {
                this.ChangeAdvertStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeAdvertStatusOperationCompleted);
            }
            this.InvokeAsync("ChangeAdvertStatus", new object[] {
                        idForm,
                        activationCode}, this.ChangeAdvertStatusOperationCompleted, userState);
        }
        
        private void OnChangeAdvertStatusOperationCompleted(object arg) {
            if ((this.ChangeAdvertStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeAdvertStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateMonth(long loadDate) {
            this.Invoke("ValidateMonth", new object[] {
                        loadDate});
        }
        
        /// <remarks/>
        public void ValidateMonthAsync(long loadDate) {
            this.ValidateMonthAsync(loadDate, null);
        }
        
        /// <remarks/>
        public void ValidateMonthAsync(long loadDate, object userState) {
            if ((this.ValidateMonthOperationCompleted == null)) {
                this.ValidateMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateMonthOperationCompleted);
            }
            this.InvokeAsync("ValidateMonth", new object[] {
                        loadDate}, this.ValidateMonthOperationCompleted, userState);
        }
        
        private void OnValidateMonthOperationCompleted(object arg) {
            if ((this.ValidateMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateMonthCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AdvertStatus {
        
        private long idFormField;
        
        private long activationField;
        
        private long idLoginField;
        
        private long loadDateField;
        
        private long idDataPromotionField;
        
        /// <remarks/>
        public long IdForm {
            get {
                return this.idFormField;
            }
            set {
                this.idFormField = value;
            }
        }
        
        /// <remarks/>
        public long Activation {
            get {
                return this.activationField;
            }
            set {
                this.activationField = value;
            }
        }
        
        /// <remarks/>
        public long IdLogin {
            get {
                return this.idLoginField;
            }
            set {
                this.idLoginField = value;
            }
        }
        
        /// <remarks/>
        public long LoadDate {
            get {
                return this.loadDateField;
            }
            set {
                this.loadDateField = value;
            }
        }
        
        /// <remarks/>
        public long IdDataPromotion {
            get {
                return this.idDataPromotionField;
            }
            set {
                this.idDataPromotionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsAccessibleCompletedEventHandler(object sender, IsAccessibleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAccessibleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAccessibleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AdvertReloadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAdvertStatusCompletedEventHandler(object sender, GetAdvertStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdvertStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdvertStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdvertStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdvertStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAvailableIdFormCompletedEventHandler(object sender, GetAvailableIdFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableIdFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableIdFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReleaseAdvertStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LockAdvertStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReleaseOneAdvertStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOneAdvertStatusCompletedEventHandler(object sender, GetOneAdvertStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOneAdvertStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOneAdvertStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdvertStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdvertStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeAdvertStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateMonthCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591