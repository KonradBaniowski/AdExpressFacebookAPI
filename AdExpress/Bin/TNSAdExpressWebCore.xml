<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TNS.AdExpress.Web.Core</name>
    </assembly>
    <members>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.BannersFormatException">
            <summary>
            Exception lors de la Gestion des vehicle
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.BannersFormatException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.BannersFormatException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.BannersFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.VehicleException">
            <summary>
            Exception lors de la Gestion des vehicle
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.VehicleException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.VehicleException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.VehicleException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Utilities.Converters">
            <summary>
            Converters class
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Converters.ConvertUniverseToString(System.Collections.Generic.Dictionary{System.Int32,TNS.AdExpress.Classification.AdExpressUniverse})">
            <summary>
            Convert Universe To String
            The string format will be :
            Universe Dictionary Key : Nomenclature group key : Accestype type key : Classification level key :  classification items ID list|
            </summary>
            <param name="universes">universes</param>
            <returns>universes string</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Converters.ConvertToUniverseDictionary(TNS.Classification.Universe.Dimension,System.String)">
            <summary>
            Convert string to universe
            </summary>
            <param name="dimension">universe dimension</param>
            <param name="str">unverse string</param>
            <returns>AdExpressUniverse dictionary</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Utilities.ExtensionMethods">
            <summary>
            Extension Methods
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Utilities.QueryStringEncryption">
            <summary>
            Query String Helper
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Utilities.SessionExtensionMethods">
            <summary>
            Web session Extension Methods
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.VehicleFormatList">
            <summary>
            Class used to load the active banners format presented in the database tabels correponding to Internet Evaliant and Mobile Evaliant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.VehicleFormatList._vehicleId">
            <summary>
            Vehicle Identifier
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.VehicleFormatList._formatList">
            <summary>
            List of banner format items
            Key: Format Id
            Value: Format List 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.VehicleFormatList.#ctor(System.Int64,System.Collections.Generic.Dictionary{System.Int64,TNS.AdExpress.Web.Core.Selection.FilterItem})">
            <summary>
            Constructor
            </summary>
            <param name="vehicleId">Vehicle Identifier</param>
            <param name="formatList">
            List of banner format items
            Key: Format Id
            Value: Format List 
            </param>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.VehicleFormatList.VehicleId">
            <summary>
            Get Vehicle Identifier
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.VehicleFormatList.FormatList">
            <summary>
            Get List of banner format items
            Key: Format Id
            Value: Format List 
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.VehiclesFormatList">
            <summary>
            Class used to load the active banners format presented in the database tabels correponding to Internet Evaliant and Mobile Evaliant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.VehiclesFormatList._list">
            <summary>
            List of the active banners format
            the key corresponds to the vehicle id
            the value corresponds to the list of banner format items
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.VehiclesFormatList.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.VehiclesFormatList.Init(System.Collections.Generic.Dictionary{System.Int64,TNS.AdExpress.Domain.Classification.VehicleFormatInformation},System.Int32)">
            <summary>
            Init the active banners format list
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.VehiclesFormatList.GetList(System.Int64)">
            <summary>
            Method used to get the list of banners format
            </summary>
            <param name="vehicleId">Vehicle identifier</param>
            <returns>The list of banners format</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.VehiclesFormatList.GetList(System.Collections.Generic.List{System.Int64})">
            <summary>
            Method used to get the list of banners format
            </summary>
            <param name="vehicleIdList">Vehicle identifier List</param>
            <returns>The list of banners format</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.VehiclesFormatList.GetFormatBannerList(TNS.AdExpress.Domain.DataBaseDescription.TableIds,TNS.AdExpress.Domain.DataBaseDescription.TableIds,System.Int32)">
            <summary>
            Get Format Banner List
            </summary>
            <param name="formatTable">Format Table</param>
            <param name="dataLanguageId">Data Language Identifier</param>
            <param name="dataTable">Data Table</param>
            <returns>Format Banner List</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.ActiveMediaList">
            <summary>
            Classe utilisée pour la création des listes des supports actifs
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.ActiveMediaList._htActiveMedia">
            <summary>
            Hashtable contenat pour chaque vehicle la liste des supports actifs qui lui correspond
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.ActiveMediaList._vehicleList">
            <summary>
            Liste des vehicles
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.ActiveMediaList.#cctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.ActiveMediaList.Init(System.Int32)">
            <summary>
            Méthode utilisée pour l'initialisation des listes des supports actifs
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.ActiveMediaList.GetActiveMediaList(System.Int64)">
            <summary>
            Méthode utilisée pour generer la liste des supports actifs qui peut être utilisée dans une requête SQL
            </summary>
            <returns>La liste des supports actifs</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.AdNetTrackDetailLevelsDescription">
            <summary>
            AdNetTrack detail levels Description
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.AdNetTrackDetailLevelsDescription._defaultAdNetTrackDetailLevels">
            <summary>
             Default AdNetTrack Levels
             </summary>
              <link>aggregation</link>
              <supplierCardinality>0..*</supplierCardinality>
              <associates>TNS.AdExpress.Web.Core.DetailLevelItemInformation</associates>
              <label>_defaultMediaDetailLevels</label>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.AdNetTrackDetailLevelsDescription._allowedAdNetTrackLevelItems">
            <summary>
             Allowed AdNetTrack Level items
             </summary>
              <link>aggregation</link>
              <supplierCardinality>0..*</supplierCardinality>
              <associates>TNS.AdExpress.Web.Core.DetailLevelItemInformation</associates>
              <label>_allowedProductDetailLevelItems</label>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.AdNetTrackDetailLevelsDescription.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.AdNetTrackDetailLevelsDescription.Init(TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Initialization
            </summary>
            <param name="source">Data Source</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.AdNetTrackDetailLevelsDescription.DefaultAdNetTrackDetailLevels">
            <author>G. Facon</author>
              <since>21/03/2007</since>
            <summary>Get default AdNetTrack levels</summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.AdNetTrackDetailLevelsDescription.AllowedAdNetTrackLevelItems">
            <author>G. Facon</author>
              <since>21/03/2007</since>
            <summary>Get Allowed AdNetTrack Level items</summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.CustomerDataFilters">
            <summary>
            This class provides all properties to filter AdExpress queries :
            - Filter with classification rights items (products and media classification brand)
            - Filter with classification selected items (products and media classification brand)
            - Filter with customer period selected
            - Filter with inset types
            - Filter with unit selected
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerDataFilters._customerSession">
            <summary>
            Customer session
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerDataFilters._currentModule">
            <summary>
            Current module Descritpion
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerDataFilters._mediaRights">
            <summary>
            Customer's Media rights
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerDataFilters._productsRights">
            <summary>
             Customer's Products rights
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerDataFilters._insets">
            <summary>
            Get Identifier list inset type
            </summary>
            <returns>ID list of insets</returns>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerDataFilters._selectedProducts">
            <summary>
            Universe products selected by the customer
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerDataFilters._selectedMediaCategory">
            <summary>
            selected media category
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerDataFilters._selectedVehicles">
            <summary>
            Vehicles selected by the customer
            </summary>
        </member>
        <!-- Commentaire XML incorrect ignoré pour le membre "M:TNS.AdExpress.Web.Core.CustomerDataFilters.GetPrincipalProductUniverses(System.Int32)" -->
        <member name="M:TNS.AdExpress.Web.Core.CustomerDataFilters.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Default constructor
            </summary>
            <param name="customerSession">Customer web session</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerDataFilters.GetSelectedVehicles">
            <summary>
            Get the vehicles selected by the customer from current module.
            Return a dictionary which key corresponds to classification level type and value the identifiers list
            of classification level.
            <example>
            To ge the list (separated by comma)of vehicles in access , selected by the customer :
            <code>
            Dictionary[TNS.AdExpress.Constantes.Customer.Right.type,string] dic = GetSelectedVehicles(); 
            string idVehicles Selected = dic[TNS.AdExpress.Constantes.Customer.Right.type.mediaAccess];    
            </code>
            
            So in a SQL query it can be use as follows :
            <code>
            string sql="";
            sql +=" select id_media,media "
            sql +=" from media "
            sql +=" where id_media in ("+idVehicles+") ";
            </code>
            </example>
            </summary>
            <returns>Dictionary of  vehicle classification items selected by the customer</returns>
            <exception cref="T:TNS.AdExpress.Web.Core.Exceptions.CustomerDataFiltersException">Impossible to identify the current module</exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerDataFilters.GetCompetingMediaUniverses">
            <summary>
            Get competing media universe.
            </summary>
            <returns>dictionary with competing universe</returns>
        </member>
        <!-- Commentaire XML incorrect ignoré pour le membre "M:TNS.AdExpress.Web.Core.CustomerDataFilters.GetMediaRights" -->
        <member name="M:TNS.AdExpress.Web.Core.CustomerDataFilters.GetSelectedProducts(System.Int32)">
            <summary>
            Get the product classification items selected by the customer from current module.            
            </summary>
            <returns>TNS.AdExpress.Classification.AdExpressUniverse of  product classification items selected by the customer</returns>
            <exception cref="T:TNS.AdExpress.Web.Core.Exceptions.CustomerDataFiltersException">Impossible to identify the current module</exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerDataFilters.GetSelectedMedias">
            <summary>
            Get the media classification items selected by the customer from current module.            
            </summary>
            <returns>TNS.AdExpress.Classification.AdExpressUniverse of  media classification items selected by the customer</returns>
            <exception cref="T:TNS.AdExpress.Web.Core.Exceptions.CustomerDataFiltersException">Impossible to identify the current module</exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerDataFilters.GetLevelProduct">
            <summary>
            Get product detail level selected
            </summary>      
            <returns>Dictionary with product classification items </returns>
        </member>
        <!-- Commentaire XML incorrect ignoré pour le membre "M:TNS.AdExpress.Web.Core.CustomerDataFilters.GetProductsRights" -->
        <member name="M:TNS.AdExpress.Web.Core.CustomerDataFilters.GetAllowedMediaUniverse">
            <summary>
            Get allowed media universe via properties :
            - VehicleList :  Get the list of medias type (ex. 1,2,3 =>PRESS,RADIO,TV)
            - CategoryList :  Get the list of sum medias (ex. 45,562,32) 
            - MediaList : Get the list of vehicles (ex. 489,8,563) 
            </summary>
            <returns>Media items List</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerDataFilters.GetClassificationSelection(System.Collections.Generic.List{TNS.Classification.Universe.NomenclatureElementsGroup},System.Collections.Generic.Dictionary{TNS.AdExpress.Constantes.Customer.Right.type,System.String},TNS.Classification.Universe.AccessType)">
            <summary>
            Get selected Classification items 
            </summary>
            <param name="listGroup">List of classifications items groups</param>
            <param name="selection">Customer selection</param>
            <param name="accessType">Items Acces type (includes or  excludes)</param>
            <returns>Dictionary of selected Classification items </returns>
            <exception cref="T:TNS.AdExpress.Web.Core.Exceptions.CustomerDataFiltersException">Impossible to identify the level of the universe.</exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerDataFilters.GetClassificationSelection(TNS.Classification.Universe.NomenclatureElementsGroup,TNS.Classification.Universe.AccessType)">
            <summary>
            Get selected Classification items 
            </summary>
            <param name="listGroup">List of classifications items groups</param>
            <param name="selection">Customer selection</param>
            <param name="accessType">Items Acces type (includes or  excludes)</param>
            <returns>Dictionary of selected Classification items </returns>
            <exception cref="T:TNS.AdExpress.Web.Core.Exceptions.CustomerDataFiltersException">Impossible to identify the level of the universe.</exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerDataFilters.AddLevelListId(System.Collections.Generic.Dictionary{TNS.AdExpress.Constantes.Customer.Right.type,System.String},TNS.AdExpress.Constantes.Customer.Right.type,System.String)">
            <summary>
            Add level list
            </summary>
            <param name="selection">Customer selection</param>
            <param name="levelType">classification level type</param>
            <param name="listIds">Identifier list of classification itmes</param>
        </member>
        <!-- Commentaire XML incorrect ignoré pour le membre "P:TNS.AdExpress.Web.Core.CustomerDataFilters.MediaRights" -->
        <!-- Commentaire XML incorrect ignoré pour le membre "P:TNS.AdExpress.Web.Core.CustomerDataFilters.ProductsRights" -->
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.AllowedMediaUniverse">
            <summary>
            Get allowed media universe according to the Module restrictions. The property return then object
            "MediaItemsList" which contains the following properties :
            - VehicleList :  Get the list of medias type (ex. 1,2,3 =>PRESS,RADIO,TV)
            - CategoryList :  Get the list of media category (ex. 45,562,32) 
            - MediaList : Get the list of vehicles (ex. 489,8,563) 
            </summary>
            <returns>Media items List</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.BeginningDate">
            <summary>
            Get beginning date selected by the customer 
            </summary>
            <returns>Date string</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.EndDate">
            <summary>
            Get end date selected by the customer 
            </summary>
            <returns>Date string</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.InsetTypesAsString">
            <summary>
            Get Identifier list inset type
            </summary>
            <returns>ID list of insets</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.InsetTypes">
            <summary>
            Get Identifier  list of inset type
            </summary>
            <returns>Dictionary  of insets</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.SelectedMediaType">
            <summary>
            Get  Media type selected by the customer from current module. 
            <remarks>For module Media schedule the user can select multiple media type, then the property could return a string list of media type identifier. 
            Example if the media types PRESS and RADIO GENERAL are selected the property will retun value 300,200</remarks>
            </summary>
            <returns>MEDIA type identifier (ex. 3 for TV in France)</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.SelectedMediaCategory">
            <summary>
            Get media category  selected by the customer from current module. 
            </summary>
            <returns>media category identifier </returns>*
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.SelectedVehicles">
            <summary>
            Get the vehicles selected by the customer from current module.
            Return a dictionary which key corresponds to classification level type and value the identifiers list
            of classification level.
            <example>
            To ge the list (separated by comma)of vehicles in access , selected by the customer :
            <code>
            Dictionary[TNS.AdExpress.Constantes.Customer.Right.type,string] dic = GetSelectedVehicles(); 
            string idVehicles Selected = dic[TNS.AdExpress.Constantes.Customer.Right.type.mediaAccess];    
            </code>
            
            So in a SQL query it can be use as follows :
            <code>
            string sql="";
            sql +=" select id_media,media "
            sql +=" from media "
            sql +=" where id_media in ("+idVehicles+") ";
            </code>
            </example>
            </summary>
            <returns>Dictionary of  vehicle classification items selected by the customer</returns>
            <exception cref="T:TNS.AdExpress.Web.Core.Exceptions.CustomerDataFiltersException">Impossible to identify the current module</exception>
        </member>
        <!-- Commentaire XML incorrect ignoré pour le membre "P:TNS.AdExpress.Web.Core.CustomerDataFilters.CompetingMediaUniverses" -->
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.LevelProduct">
            <summary>
            Get product detail level selected.
            Returns a dictionary with product classification items
            </summary>             
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.SelectedProducts">
            <summary>
            Get the product classification items selected by the customer from current module.            
            </summary>
            <returns>TNS.AdExpress.Classification.AdExpressUniverse of  product classification items selected by the customer</returns>
            <exception cref="T:TNS.AdExpress.Web.Core.Exceptions.CustomerDataFiltersException">Impossible to identify the current module</exception>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.SelectedUnit">
            <summary>
            Get informations about selected unit
            </summary>
            <returns>informations about selected unit</returns>
        </member>
        <!-- Commentaire XML incorrect ignoré pour le membre "P:TNS.AdExpress.Web.Core.CustomerDataFilters.PrincipalProductUniverses" -->
        <!-- Commentaire XML incorrect ignoré pour le membre "P:TNS.AdExpress.Web.Core.CustomerDataFilters.AdvertisementTypeUniverses" -->
        <!-- Commentaire XML incorrect ignoré pour le membre "P:TNS.AdExpress.Web.Core.CustomerDataFilters.RegionUniverses" -->
        <!-- Commentaire XML incorrect ignoré pour le membre "P:TNS.AdExpress.Web.Core.CustomerDataFilters.SecondaryMediaUniverses" -->
        <!-- Commentaire XML incorrect ignoré pour le membre "P:TNS.AdExpress.Web.Core.CustomerDataFilters.PrincipalProfessionUniverses" -->
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.DataSource">
            <summary>
            Get Data Source
            </summary>
            <returns>Data source</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.CampaignType">
            <summary>
            Get  Campaign Type 
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.ReferencesAdvertisers">
            <summary>
            Get Reference advertisers list.
            <example>eg. 12,45,46</example>
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerDataFilters.CompetingAdvertisers">
            <summary>
            Get Competing advertisers list.
            <example>eg. 12,45,46</example>
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.CustomerPeriod">
            <summary>
            Classe pour la gestion de la période sélectionnée par le client (Composant GlobalDateSelection)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._startDate">
            <summary>
            Date de début de la période sélectionnée
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._endDate">
            <summary>
            Date de fin de la période sélectionnée
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._comparativePeriodType">
            <summary>
            Type de la période comparative
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._periodDisponibilityType">
            <summary>
            Type de la disponibilité des données
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._withComparativePeriodPersonnalized">
            <summary>
            Indique s'il s'agit d'une étude comparative
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._withComparativePeriod">
            <summary>
            Indique s'il s'agit d'une étude comparative
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._periodDayBegin">
            <summary>
            Liste des dates de début pour les périodes en jours
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._periodDayEnd">
            <summary>
            Liste des dates de fin pour les périodes en jours
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._periodMonthBegin">
            <summary>
            Liste des dates de début pour les périodes en mois
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._periodMonthEnd">
            <summary>
            Liste des dates de fin pour les périodes en mois
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._is4M">
            <summary>
            Indique si on doit utiliser la table 4M ou non
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._comparativeStartDate">
            <summary>
            Date de début de la période comparative
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._comparativeEndDate">
            <summary>
            Date de fin de la période comparative
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._comparativePeriodDayBegin">
            <summary>
            Liste des dates de début pour les périodes en jours (période comparative)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._comparativePeriodDayEnd">
            <summary>
            Liste des dates de fin pour les périodes en jours (période comparative)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._comparativePeriodMonthBegin">
            <summary>
            Liste des dates de début pour les périodes en mois (période comparative)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CustomerPeriod._comparativePeriodMonthEnd">
            <summary>
            Liste des dates de fin pour les périodes en mois (période comparative)
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerPeriod.#ctor(System.String,System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="startDate">La date de début</param>
            <param name="endDate">La date de fin</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerPeriod.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="startDate">La date de début</param>
            <param name="endDate">La date de fin</param>
            <param name="comparativeEndDate"></param>
            <param name="comparativeStartDate"></param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerPeriod.#ctor(System.String,System.String,System.Boolean,TNS.AdExpress.Constantes.Web.globalCalendar.comparativePeriodType,TNS.AdExpress.Constantes.Web.globalCalendar.periodDisponibilityType)">
            <summary>
            Constructeur
            </summary>
            <param name="startDate">La date de début</param>
            <param name="endDate">La date de fin</param>
            <param name="withComparativePeriod">Indique s'il s'agit d'une étude comparative</param>
            <param name="comparativePeriodType">Type de la période comparative</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerPeriod.#ctor(System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Boolean,System.String,System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="periodDayBegin">Liste des dates de début pour les périodes en jours</param>
            <param name="periodDayEnd">Liste des dates de fin pour les périodes en jours</param>
            <param name="periodMonthBegin">Liste des dates de début pour les périodes en mois</param>
            <param name="periodMonthEnd">Liste des dates de fin pour les périodes en mois</param>
            <param name="is4M">Indique si on doit utiliser la table 4M ou non</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerPeriod.PeriodSplit(System.String,System.String,System.Collections.ArrayList@,System.Collections.ArrayList@,System.Collections.ArrayList@,System.Collections.ArrayList@)">
            <summary>
            Permet la décomposition de la période sélectionnée en plusieur sous périodes
            </summary>
            <param name="startDate">La date de début</param>
            <param name="endDate">La date de fin</param>
            <param name="periodDayBegin">Liste des dates de début pour les périodes en jours</param>
            <param name="periodDayEnd">Liste des dates de fin pour les périodes en jours</param>
            <param name="periodMonthBegin">Liste des dates de début pour les périodes en mois</param>
            <param name="periodMonthEnd">Liste des dates de fin pour les périodes en mois</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerPeriod.PeriodTreatment(System.Collections.ArrayList@,System.Collections.ArrayList@,System.Collections.ArrayList@,System.Collections.ArrayList@)">
            <summary>
            Pemret de déterminer quelle table il faut utiliser pour le dernier mois complet
            </summary>
            <param name="periodDayBegin">Liste des dates de début pour les périodes en jours</param>
            <param name="periodDayEnd">Liste des dates de fin pour les périodes en jours</param>
            <param name="periodMonthBegin">Liste des dates de début pour les périodes en mois</param>
            <param name="periodMonthEnd">Liste des dates de fin pour les périodes en mois</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerPeriod.SetComparativePeriod">
            <summary>
            Initialise la période comparative
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerPeriod.GetLastDayOfMonth(System.String)">
            <summary>
            Renvoie le dernier jour du mois passer en paramètre
            </summary>
            <returns>le dernier jour du mois</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerPeriod.getNextMonth(System.String)">
            <summary>
            Renvoie le mois prochain
            </summary>
            <param name="yearMonth">Année + Mois</param>
            <returns>Mois prochain</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerPeriod.getPreviousMonth(System.String)">
            <summary>
            Renvoie le mois précédent
            </summary>
            <param name="yearMonth">Année + Mois</param>
            <returns>Mois précédent</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CustomerPeriod.GetPreviousYearDate(System.String,TNS.AdExpress.Constantes.Web.globalCalendar.comparativePeriodType)">
            <summary>
            Obtient la date de l'année précédente  sous forme YYYYMMDD
            </summary>
            <param name="period">date de l'année en cours sous forme YYYYMMDD</param>
            <param name="comparativePeriodType">Type de la période comparative</param>
            <returns>date de l'année précédente  sous forme YYYYMMDD</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.StartDate">
            <summary>
            La date de début
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.EndDate">
            <summary>
            La date de fin
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.WithComparativePeriod">
            <summary>
            Indique s'il s'agit d'une étude comparative
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.WithComparativePeriodPersonnalized">
            <summary>
            Indique s'il s'agit d'une étude comparative personalized
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.ComparativePeriodType">
            <summary>
            Get le type de la période comparative
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.PeriodDisponibilityType">
            <summary>
            Get le type de la disponibilité des données
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.PeriodDayBegin">
            <summary>
            GET la liste des dates de début pour les périodes en jours
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.PeriodDayEnd">
            <summary>
            GET la liste des dates de fin pour les périodes en jours
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.PeriodMonthBegin">
            <summary>
            GET la liste des dates de début pour les périodes en mois
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.PeriodMonthEnd">
            <summary>
            GET la liste des dates de fin pour les périodes en mois
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.Is4M">
            <summary>
            Indique si on doit utiliser la table 4M ou non
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.IsSliding4M">
            <summary>
            Indique si on doit utiliser la table 4M ou non pour les quatre derniers mois glissants
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.IsDataVehicle">
            <summary>
            Indique si on doit utiliser la table DATA_VEHICLE ou non
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.IsWebPlan">
            <summary>
            Indique si on doit utiliser la table WEB_PLAN ou non
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.ComparativeStartDate">
            <summary>
            La date de début (période comparative)
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.ComparativeEndDate">
            <summary>
            La date de fin (période comparative)
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.ComparativePeriodDayBegin">
            <summary>
            GET la liste des dates de début pour les périodes en jours (période comparative)
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.ComparativePeriodDayEnd">
            <summary>
            GET la liste des dates de fin pour les périodes en jours (période comparative)
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.ComparativePeriodMonthBegin">
            <summary>
            GET la liste des dates de début pour les périodes en mois (période comparative)
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.CustomerPeriod.ComparativePeriodMonthEnd">
            <summary>
            GET la liste des dates de fin pour les périodes en mois (période comparative)
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.DataAccess.VehicleFormatListDataAccess">
            <summary>
            Class used to extract the list of active banners format according to the specified vehicle
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.VehicleFormatListDataAccess.GetActiveData(TNS.AdExpress.Domain.DataBaseDescription.TableIds,TNS.AdExpress.Domain.DataBaseDescription.TableIds,System.Int32)">
            <summary>
            Method used to extract the list of active banners format according to the specified vehicle
            </summary>
            <param name="formatTable">Format Table</param>
            <param name="dataLanguage">Data language</param>
            <param name="dataTable">Data Table</param>
            <returns>Format List</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL">
            <summary>
            Insertion customised levels DAL
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
            Get list fo insertions customised levels saved 
             </summary>
             <param name="webSession">Session</param>
             <returns>inseertion customised levels list</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64)">
             <summary>
            Get list fo insertions customised levels saved 
             </summary>
             <param name="webSession">Session</param>
             <param name="idVehicle">ID media type</param>
             <returns>inseertion customised levels list</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.GetInsertionSaveData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
             <summary>
            Get data for saved customised levels  
             </summary>
             <param name="webSession">Session</param>
             <param name="idVehicle">ID media type</param>
             <returns>inseertion customised levels list</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.DropInsertionSave(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Delete insertion save
            </summary>
            <param name="idInsertionsave">id Insertion save</param>
            <param name="webSession">Session</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.RenameInsertionSave(System.String,System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
             Renommer Insertion Save
            </summary>
            <param name="newName">New label</param>
            <param name="idInsertionSave">id Insertion Save</param>
            <param name="webSession">Session</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.MoveInsertionSave(System.Int64,System.Int64,System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Move insertion save to another directory
            </summary>
            <remarks>Testée</remarks>
            <param name="idOldDirectory">Identifiant old directory</param>
            <param name="idNewDirectory">Identifiant new directory</param>
            <param name="idInsertionSave">Id insertion save</param>
            <param name="webSession">Session</param>	
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.GetGroupInsertionLevels(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Donne la liste des Groupes des niveaux insertions
            </summary>
            <remarks>Testée</remarks>
            <param name="webSession">Session du client</param>
            <returns>Liste des Groupes des niveaux insertions</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.IsGroupInsertionSaveExist(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Chekc if group insertion save exists
            </summary>  
            <param name="webSession">Session</param>
            <param name="groupInsertionSaveName">Group Insertion Save Name</param>
            <returns>True if exists, false if not</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.CreateGroupInsertionSave(System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Create Group Insertion Save
            </summary>
            <remarks>testée</remarks>
            <param name="nameGroupInsertionSave">name Group Insertion Save</param>
            <param name="webSession">Session</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.RenameGroupInsertionSave(System.String,System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
             Rename group insertion save
            </summary>
            <param name="newName">new label</param>
            <param name="idGroupUniverse">Id Group Insertion Save</param>
            <param name="webSession">Session</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.DropGroupInsertionSave(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Delete insertion saved levels directory
            </summary>
            <param name="idGroupInsertionSave">id Group Insertion Save</param>
            <param name="webSession">Session</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.IsInsertionInGroupInsertionExist(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64)">
            <summary>
            Check if insertion save belong to a group
            </summary>
            <remarks>testée</remarks>
            <param name="webSession">Session du client</param>
            <param name="idGroupInsertionSave">Id insertion directoy</param>
            <returns>True s'il existe, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.UpdateInsertionLevels(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.String,System.String)">
            <summary>
             Update Insertion customised Levels
            </summary>
            <param name="idInsertionSave">id Insertion Save </param>
            <param name="webSession">Session client</param>
            <param name="IdVehicle">id media type</param>
            <param name="idLevelList">id Level List</param>
            <param name="idColumnList">Id Column list</param>
            <returns>True if upadte is right</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.IsInsertionLevelsExist(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Check if an insertion levels group already exist with the same label
            </summary>
            <remarks>Testée</remarks>
            <param name="webSession">Sessiont</param>
            <param name="InsertionLevelsName">Insertion Levels Name</param>
            <returns>True if exists else false</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.InsertionLevelDAL.SaveInsertionLeves(System.Int64,System.String,System.Int64,System.String,System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Save Insertion customised Levels
            </summary>
            <param name="idGroupInsertionSave">id Group Insertion levels</param>
            <param name="insertionSave">Insertion levels to save label</param>
            <param name="idVehicle">ID media type</param>
            <param name="idLevelList">id Level List</param>
            <param name="idColumList">id Column List</param>
            <param name="webSession">Session utilisateur</param>
            <returns>True if success</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess">
            <summary>
            Description résumée de SearchLevelDataAccess
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.GetItems(System.String,System.String,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,TNS.Classification.Universe.Dimension)">
            <summary>
            Obtient la liste d'éléments contenant le terme contenu dans wordToSearch dans le niveau de nomenclature table
            </summary>
            <param name="table">Table de la nomenclature</param>
            <param name="wordToSearch">Terme recherché</param>
            <param name="webSession">Session du client</param>
            <param name="dBSchema"> DB Schema</param>
            <returns>Le nombre d'élément de la nomenclature trouvé</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.GetOneLevelItems(System.String,System.String,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,TNS.Classification.Universe.Dimension)">
            <summary>
            Obtient la liste d'éléments contenant les identifiants contenu dans idList dans le niveau de nomenclature table
            </summary>
            <param name="table">Table de la nomenclature</param>
            <param name="idList">Liste d'identifiant d'éléments</param>
            <param name="webSession">Session du client</param>
            <param name="dimension">dimension</param>
            <param name="dBSchema"> DB Schema</param>
            <returns>Le nombre d'élément de la nomenclature trouvé</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.GetSelectedItems(System.String,System.String,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,TNS.Classification.Universe.Dimension)">
            <summary>
            Obtient la liste d'éléments contenant les identifiants contenu dans idList dans le niveau de nomenclature table
            </summary>
            <param name="table">Table de la nomenclature</param>
            <param name="idList">Liste d'identifiant d'éléments</param>
            <param name="webSession">Session du client</param>
            <param name="dBSchema"> DB Schema</param>
            <returns>Le nombre d'élément de la nomenclature trouvé</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.GetItems(System.String,System.String,System.String,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,TNS.Classification.Universe.Dimension)">
            <summary>
            Obtient la liste d'éléments associés à ID de l'élément sélectionné dans le Niveau de la nomenclature
            </summary>
            <param name="table">Table de la nomenclature</param>
            <param name="selectedItemIds">ID des éléments sélectionnés dans le Niveau de la nomenclature en cours</param>
            <param name="webSession">Session client</param>
            <param name="dBSchema"> DB Schema</param>
            <param name="selectedItemTableName">selected Item TableName</param>
            <returns>listes d'éléments </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.GetRecapItems(System.String,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Int32,TNS.Classification.Universe.Dimension)">
            <summary>
            Obtient la liste d'éléments contenant le terme contenu dans wordToSearch dans le niveau de nomenclature table
            </summary>
            <param name="table">Table de la nomenclature</param>
            <param name="wordToSearch">Terme recherché</param>
            <param name="webSession">Session du client</param>
            <param name="dBSchema"> DB Schema</param>
            <returns>Le nombre d'élément de la nomenclature trouvé</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.getCustomerMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Media.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature support.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.getClassificationCustomerMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Génère les droits media clients .
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehiclePrefixe">Préfixe de la table vehicle (media)</param>
            <param name="categoryPrefixe">Préfixe de la table category</param>
            <param name="mediaPrefixe">Préfixe de la table media (support)</param>		
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>  
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.getCustomerProductRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Produit.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature produit.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.GetView(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.Classification.Universe.Dimension)">
            <summary>
            Get classification View 
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="oView">View</param>
            <param name="classificationRight">Sql rights</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.GetRights(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.Classification.Universe.Dimension)">
            <summary>
            Get classification rights
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="oView">View</param>
            <param name="classificationRight">Sql rights</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.GetAccessRights(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.String,System.Boolean)">
            <summary>
            Get classification access rights
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="universeLevelId">universe levekl Id</param>
            <param name="label">Field</param>
            <param name="include">True if elements are included (in), false either (not in)</param>
            <returns>ID list of nomenclature items </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.GetSource(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Get data source
            </summary>
            <param name="webSession">Customer Session</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.GetFromClause(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.DataBaseDescription.View,System.String,System.String,System.Boolean)">
            <summary>
            Get sql from clause
            </summary>
            <param name="webSession">User session</param>
            <param name="oView">View</param>
            <param name="table">Table</param>
            <param name="useView">determine if must use View</param>
            <returns>sql from clause string</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.GetJointClause(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.DataBaseDescription.View,System.String,TNS.Classification.Universe.Dimension,System.String,System.Boolean)">
            <summary>
            Get sql Joint clause
            </summary>
            <param name="webSession">User session</param>
            <param name="oView">View</param>
            <param name="table">Table</param>
            <param name="classificationRight">Classification rights</param>
            <param name="dimension">dimension media or product</param>
            <param name="useView">determine if must use View</param>
            <returns>sql from clause string</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.SearchLevelDataAccess.CanUseView(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.Classification.Universe.Dimension,System.String)">
            <summary>
            Determine if View table must be used in query
            </summary>
            <param name="webSession">User Session</param>
            <param name="dimension">dimension media or product</param>
            <param name="classificationRight">classification rights</param>
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.DataAccess.DetailMediaDataAccess">
            <summary>
            Class used to get the detail media list for one vehicle
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.DetailMediaDataAccess.DetailMediaListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.DetailLevelItemInformation)">
            <summary>
            Retourne la liste d'un detail Media avec les supports d'un utilisateur
            </summary>
            <param name="webSession">Session</param>
            <param name="detailLevel">Detail Media</param>
            <returns>Dataset avec 4 colonnes : idDetailMedia, detailMedia, id_media, media</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.DetailMediaDataAccess.DetailMediaListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Retourne la liste d'un detail Media avec les supports d'un utilisateur
            </summary>
            <param name="webSession">Session</param>
            <param name="detailLevel">Detail Media</param>
            <returns>Dataset avec 4 colonnes : idDetailMedia, detailMedia, id_media, media</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.DetailMediaDataAccess.DetailMediaListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel,System.String)">
            <summary>
            Retourne la liste d'un detail Media avec les supports d'un utilisateur
            </summary>
            <param name="webSession">Session</param>
            <param name="detailLevel">Detail Media</param>
            <param name="listMedia">Liste de supports</param>
            <returns>Dataset avec 4 colonnes : idDetailMedia, detailMedia, id_media, media</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.DetailMediaDataAccess.keyWordDetailMediaListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,TNS.AdExpress.Domain.Level.DetailLevelItemInformation)">
            <summary>
            Retourne la liste des detailMedia avec les supports d'un utilisateur ayant une partie du mot keyWord 
            </summary>
            <param name="webSession">Session</param>
            <param name="keyWord">Mot clef</param>
            <param name="listMedia">Liste des supports (media) déjà sélectionnés</param>
            <param name="detailLevel">DetailMedia</param>
            <returns>Données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.DetailMediaDataAccess.keyWordDetailMediaListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Retourne la liste des detailMedia avec les supports d'un utilisateur ayant une partie du mot keyWord 
            </summary>
            <param name="webSession">Session</param>
            <param name="keyWord">Mot clef</param>
            <param name="listMedia">Liste des supports (media) déjà sélectionnés</param>
            <param name="genericDetailLevel">genericDetailLevel</param>
            <returns>Données</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.DataAccess.Session.GenericDetailLevelDataAccess">
            <summary>
             Saved Detail Level management in DB
             </summary>
              <stereotype>utility</stereotype>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.Session.GenericDetailLevelDataAccess.Load(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Save a detail level
            </summary>
            <param name="webSession">Customer Session</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.Session.GenericDetailLevelDataAccess.Remove(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64)">
            <summary>
            Remove a saved detail level
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="genericDetailLevelSavedID">Level Id to remove</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.Session.GenericDetailLevelDataAccess.Save(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Save a detail level
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="genericDetailLevel">Level to save</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.Session.GenericDetailLevelDataAccess.GetNewListId(TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Get a new detail level Id
            </summary>
            <param name="source">Data Source</param>
            <returns>New detail level Id</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.VehicleFormatListDataAccessException">
            <summary>
            Vehicle Format List DataAccess Exception
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.VehicleFormatListDataAccessException.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.VehicleFormatListDataAccessException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.VehicleFormatListDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.InsertionLevelDALException">
            <summary>
            Erreur lors de l'utilisation des listes
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.InsertionLevelDALException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.InsertionLevelDALException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.InsertionLevelDALException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.CustomerDataFiltersException">
            <summary>
            Exception class for Customer data filters
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.CustomerDataFiltersException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.CustomerDataFiltersException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.CustomerDataFiltersException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">inner exception</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.DetailMediaDataAccessException">
            <summary>
            Detail Media DataAccess Exception
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.DetailMediaDataAccessException.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.DetailMediaDataAccessException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.DetailMediaDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.ExtendedHashTableException">
            <summary>
            Error managment in ExtendedHashtable class
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.ExtendedHashTableException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.ExtendedHashTableException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.ExtendedHashTableException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.SQLGeneratorException">
            <summary>
            Exception SQLGenerator
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.SQLGeneratorException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.SQLGeneratorException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.SQLGeneratorException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.WebThemesDataAccessException">
            <summary>
            Web themes data access Excpetion
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebThemesDataAccessException.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebThemesDataAccessException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebThemesDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.WebLanguagesDataAccessException">
            <summary>
            Web language data access Excpetion
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebLanguagesDataAccessException.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebLanguagesDataAccessException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebLanguagesDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.SearchLevelDataAccessException.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.SearchLevelDataAccessException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.SearchLevelDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.ISourceProvider">
            <summary>
            Provides data source object to execute SQL queries
            
            The mehod <code>GetSource()</code> return  a object of type IDataSource which allow to execute SQL query
            on database of website's current country. For example in France the source will be an Oracle database, but an SQL database in Russia.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.ISourceProvider.GetSource">
            <summary>
            Get data source for AdExpress website's current country
            </summary>
            <returns>Data source</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellInsertionMediaScheduleLink">
            <summary>
            Cellule créant un lien vers le plan media à partir du détail insertion du portefeuille
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellAdExpressImageLink">
            <summary>
            Cellule contenant une image avec un lien pour AdExpress
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellAdExpressImageLink._link">
            <summary>
            Adresse d'appelle à la création
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellAdExpressImageLink._imagePath">
            <summary>
            Chemin de l'image servant au lien
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellAdExpressImageLink._webSession">
            <summary>
            Session du client
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellAdExpressImageLink._creatives">
            <summary>
            Liste des chemins vers les créations
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellAdExpressImageLink.GetImagePath">
            <summary>
            Obtient le chemin de l'image contenant le lien
            </summary>
            <returns>Chemin de l'image contenant le lien</returns>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellInsertionMediaScheduleLink._productId">
            <summary>
            Identifiant du produit
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellInsertionMediaScheduleLink._vehicleId">
            <summary>
            Identifiant du media
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellInsertionMediaScheduleLink.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="webSession">Identifiant du produit</param>
            <param name="productId">Identifiant du produit</param>
            <param name="vehicleId">Identifiant du media</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellInsertionMediaScheduleLink.GetLink">
            <summary>
            Obtient le lien de l'image
            </summary>
            <returns>Lien de l'image</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellInternetCreativeLink">
            <summary>
            Cell with link to Internet creatives
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellInternetCreativeLink.#ctor(System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellInternetCreativeLink.GetLink">
            <summary>
            Obtient l'adresse du lien
            </summary>
            <returns>Adresse du lien</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellAdExpressDetailLink">
            <summary>
            Cellule AdExpress pour les liens vers le détail des créations ou inertions
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellAdExpressDetailLink._genericDetailLevel">
            <summary>
            Niveau de détail générique
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellAdExpressDetailLink._cellLevel">
            <summary>
            Cellule du niveau qui a été cliqué
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellAdExpressDetailLink._universId">
            <summary>
            Identifiant de l'univers
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellAdExpressDetailLink._zoomDate">
            <summary>
            Date du zoom
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellAdExpressDetailLink.#ctor">
            <summary>
            Constructeur par défaut
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellAdExpressDetailLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel,System.String,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Niveau de détail</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellAdExpressDetailLink.ShowLink">
            <summary>
            Indique s'il faut afficher le lien vers les créations
            </summary>
            <returns>True s'il faut afficher le lien vers les créations</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellAdExpressDetailLink.GetLink">
            <summary>
            Obtient l'adresse du lien
            </summary>
            <returns>Adresse du lien</returns>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellAdExpressCreativesLink._moduleId">
            <summary>
            Module a utiliser
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellAdExpressCreativesLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel,System.String,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Niveau de détail</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
            <param name="zoomDate">Date du zoom, vide si pas de zoom</param>
            <param name="universId">Identifiant de l'univers, -1 s'il n'y en a pas</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellAdExpressCreativesLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel,System.String,System.Int32,System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Niveau de détail</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
            <param name="zoomDate">Date du zoom, vide si pas de zoom</param>
            <param name="universId">Identifiant de l'univers, -1 s'il n'y en a pas</param>
            <param name="moduleId">Module à utiliser</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellAdExpressCreativesLink.GetLink">
            <summary>
            Obtient l'adresse du lien
            </summary>
            <returns>Adresse du lien</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellOneLevelCreativesLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel,System.String,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Cellule du niveau qui a été cliqué</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
            <param name="zoomDate">Date du zoom, vide si pas de zoom</param>
            <param name="universId">Identifiant de l'univers, -1 s'il n'y en a pas</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellOneLevelCreativesLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Cellule du niveau qui a été cliqué</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
            <param name="zoomDate">Date du zoom, vide si pas de zoom</param>
            <param name="universId">Identifiant de l'univers, -1 s'il n'y en a pas</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellOneLevelInsertionsLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Cellule du niveau qui a été cliqué</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellOneLevelInsertionsLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel,System.String,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Cellule du niveau qui a été cliqué</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
            /// <param name="zoomDate">Date du zoom, vide si pas de zoom</param>
            <param name="universId">Identifiant de l'univers, -1 s'il n'y en a pas</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellAdExpressInsertionsLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Niveau de détail</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellAdExpressInsertionsLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel,System.String,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Niveau de détail</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
            <param name="zoomDate">Date du zoom, vide si pas de zoom</param>
            <param name="universId">Identifiant de l'univers, -1 s'il n'y en a pas</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellRussiaCreativeLink">
            <summary>
            Cell with link to russia creatives
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaCreativeLink.#ctor(System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaCreativeLink.#ctor(System.String,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaCreativeLink.GetLink">
            <summary>
            Obtient l'adresse du lien
            </summary>
            <returns>Adresse du lien</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellRussiaEvol">
            <summary>
             Cell evolution for Russia
             </summary>
              <author>D. Mussuma</author>
              <since>13/04/2011</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaEvol.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaEvol.#ctor(System.Double)">
            <summary>
            Constructeur
            </summary>
            <param name="unitValue">Valeur de la cellule</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaEvol.#ctor(System.Nullable{System.Double})">
            <summary>
            Constructeur
            </summary>
            <param name="unitValue">Valeur de la cellule (Elle peut être null)</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaEvol.#ctor(TNS.FrameWork.WebResultUI.ICell,TNS.FrameWork.WebResultUI.ICell)">
            <summary>
            Constructeur
            </summary>
            <param name="cellValue">Cellule de la valeur servant à calculer l'évolution</param>
            <param name="cellReference">Cellule de référence servant à calculer l'évolution</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaEvol.TreatZeroCellReference">
            <summary>
            Manage Cell Reference if is zero 
            </summary>
            <returns>value</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellRussiaKCurrency">
            <summary>
            Cellule contenant des KRubles ou KUSD (Pour AdExpress Russia)
            </summary> 
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaKCurrency.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaKCurrency.#ctor(System.Double)">
            <summary>
            Constructeur
            </summary>
            <param name="unitValue">Valeur de la cellule</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaKCurrency.#ctor(System.Nullable{System.Double})">
            <summary>
            Constructeur
            </summary>
            <param name="unitValue">Valeur de la cellule (Elle peut être null)</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaKCurrency.GetInstance">
            <summary>
            Obtient un Objet par défaut à partir du type
            </summary>
            <returns>Cell</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaKCurrency.Clone(System.Double)">
            <summary>
            Création d'une nouvelle instance de l'objet, initialisée par le paramètre
            </summary>
            <param name="unitValue">Valeur d'initialisation</param>
            <returns>Nouvelle instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaKCurrency.Clone(System.Nullable{System.Double})">
            <summary>
            Création d'une nouvelle instance de l'objet, initialisée par le paramètre
            </summary>
            <param name="unitValue">Valeur d'initialisation (Elle peut être null)</param>
            <returns>Nouvelle instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaKCurrency.GetValueRender">
            <summary>
            Value Render : nbsp; or Value
            </summary>
            <returns>Value to show</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellRussiaPage">
            <summary>
            Cellule contenant des pages russes
            </summary> 
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPage.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPage.#ctor(System.Double)">
            <summary>
            Constructeur
            </summary>
            <param name="unitValue">Valeur de la cellule</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPage.#ctor(System.Nullable{System.Double})">
            <summary>
            Constructeur
            </summary>
            <param name="unitValue">Valeur de la cellule (Elle peut être null)</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPage.GetInstance">
            <summary>
            Obtient un Objet par défaut à partir du type
            </summary>
            <returns>Cell</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPage.Clone(System.Double)">
            <summary>
            Création d'une nouvelle instance de l'objet, initialisée par le paramètre
            </summary>
            <param name="unitValue">Valeur d'initialisation</param>
            <returns>Nouvelle instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPage.Clone(System.Nullable{System.Double})">
            <summary>
            Création d'une nouvelle instance de l'objet, initialisée par le paramètre
            </summary>
            <param name="unitValue">Valeur d'initialisation (Elle peut être null)</param>
            <returns>Nouvelle instance</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellRussiaPDM">
            <summary>
            Cellule contenant des pdm (Pour AdExpress Russia)
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPDM.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPDM.#ctor(System.Double)">
            <summary>
            Constructeur
            </summary>
            <param name="unitValue">Valeur de la cellule</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPDM.#ctor(System.Double,TNS.FrameWork.WebResultUI.CellUnit)">
            <summary>
            Constructeur
            </summary>
            <param name="unitValue">Valeur de la cellule</param>
            <param name="reference">Cellule de référence</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPDM.#ctor(System.Nullable{System.Double})">
            <summary>
            Constructeur
            </summary>
            <param name="unitValue">Valeur de la cellule (Elle peut être null)</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPDM.#ctor(System.Nullable{System.Double},TNS.FrameWork.WebResultUI.CellUnit)">
            <summary>
            Constructeur
            </summary>
            <param name="unitValue">Valeur de la cellule (Elle peut être null)</param>
            <param name="reference">Cellule de référence</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPDM.GetInstance">
            <summary>
            Obtient un Objet par défaut à partir du type
            </summary>
            <returns>Cell</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPDM.Clone(System.Double)">
            <summary>
            Création d'une nouvelle instance de l'objet, initialisée par le paramètre
            </summary>
            <param name="unitValue">Valeur d'initialisation</param>
            <returns>Nouvelle instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPDM.Clone(System.Nullable{System.Double})">
            <summary>
            Création d'une nouvelle instance de l'objet, initialisée par le paramètre
            </summary>
            <param name="unitValue">Valeur d'initialisation (Elle peut être null)</param>
            <returns>Nouvelle instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPDM.GetValueRender">
            <summary>
            Value Render : nbsp; or Value
            </summary>
            <returns>Value to show</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellRussiaPercent">
            <summary>
            Cellule contenant des pourcentages (pour AdExpress Russia)
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPercent.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPercent.#ctor(System.Double)">
            <summary>
            Constructeur
            </summary>
            <param name="unitValue">Valeur de la cellule</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPercent.#ctor(System.Double,TNS.FrameWork.WebResultUI.CellUnit)">
            <summary>
            Constructeur
            </summary>
            <param name="unitValue">Valeur de la cellule</param>
            <param name="reference">Cellule de référence</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPercent.#ctor(System.Nullable{System.Double})">
            <summary>
            Constructeur
            </summary>
            <param name="unitValue">Valeur de la cellule (Elle peut être null)</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPercent.#ctor(System.Nullable{System.Double},TNS.FrameWork.WebResultUI.CellUnit)">
            <summary>
            Constructeur
            </summary>
            <param name="unitValue">Valeur de la cellule (Elle peut être null)</param>
            <param name="reference">Cellule de référence</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPercent.GetInstance">
            <summary>
            Obtient un Objet par défaut à partir du type
            </summary>
            <returns>Cell</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPercent.Clone(System.Double)">
            <summary>
            Création d'une nouvelle instance de l'objet, initialisée par le paramètre
            </summary>
            <param name="unitValue">Valeur d'initialisation</param>
            <returns>Nouvelle instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPercent.Clone(System.Nullable{System.Double})">
            <summary>
            Création d'une nouvelle instance de l'objet, initialisée par le paramètre
            </summary>
            <param name="unitValue">Valeur d'initialisation (Elle peut être null)</param>
            <returns>Nouvelle instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRussiaPercent.GetValueRender">
            <summary>
            Value Render : nbsp; or Value
            </summary>
            <returns>Value to show</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellVersionNbPDM">
            <summary>
            Cell for version numbers PDM
            </summary> 
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellVersionNbPDM._reference">
            <summary>
             Calcul base
             </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellVersionNbPDM._isTotal">
            <summary>
            Specify if cell is total ==> 100%
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellVersionNbPDM.#ctor(TNS.FrameWork.WebResultUI.CellIdsNumber)">
            <summary>
            Constructeur
            </summary>
            <param name="reference">Cellule de référence</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellVersionNbPDM.#ctor(System.String[],TNS.FrameWork.WebResultUI.CellIdsNumber)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellVersionNbPDM.#ctor(System.Int64[],TNS.FrameWork.WebResultUI.CellIdsNumber)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellVersionNbPDM.#ctor(System.Collections.Generic.List{System.Int64},TNS.FrameWork.WebResultUI.CellIdsNumber)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellVersionNbPDM.GetInstance">
            <summary>
            Obtient un Objet par défaut à partir du type
            </summary>
            <returns>Cell</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellVersionNbPDM.Clone(System.Double)">
            <summary>
            Création d'une nouvelle instance de l'objet, initialisée par le paramètre
            </summary>
            <param name="value">Valeur d'initialisation</param>
            <returns>Nouvelle instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellVersionNbPDM.Render">
            <summary>
            Rendu de code HTML
            </summary>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellVersionNbPDM.Render(System.String)">
            <summary>
            Rendu de code HTML avec un style css spécifique
            </summary>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellVersionNbPDM.RenderExcel(System.String)">
            <summary>
            Rendu de code HTML pour Excel
            </summary>
            <returns>Code HTML pour Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellVersionNbPDM.RenderRowExcel">
            <summary>
            Rendu de code HTML pour Excel brut
            </summary>
            <returns>Code HTML pour Excel brut</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Result.CellVersionNbPDM.Value">
            <summary>
            Obtient ou définit la valeur de la cellule
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellOneLevelRussiaCreativesLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel,System.String,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Cellule du niveau qui a été cliqué</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
            <param name="zoomDate">Date du zoom, vide si pas de zoom</param>
            <param name="universId">Identifiant de l'univers, -1 s'il n'y en a pas</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellOneLevelRussiaCreativesLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Cellule du niveau qui a été cliqué</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
            <param name="zoomDate">Date du zoom, vide si pas de zoom</param>
            <param name="universId">Identifiant de l'univers, -1 s'il n'y en a pas</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellOneLevelRussiaInsertionsLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Cellule du niveau qui a été cliqué</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellOneLevelRussiaInsertionsLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel,System.String,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Cellule du niveau qui a été cliqué</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
            /// <param name="zoomDate">Date du zoom, vide si pas de zoom</param>
            <param name="universId">Identifiant de l'univers, -1 s'il n'y en a pas</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.DefaultShowLinkRules">
            <summary>
            Règle de base à appliquer à un cellule pointant vers les créations ou le détail des insertions
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.ILinkRules.ShowLink">
            <summary>
            Indique si le lien doit être montrée dans la Cellule
            </summary>
            <returns>True s'il doit être montré, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.ILinkRules.GetHierarchy">
            <summary>
            Obtient la hierarchie de la nomenclature sur 4 niveaux
            </summary>
            <remarks>
            La valeur -1 correspond à un niveau dont il ne faut pas tenir compte
            </remarks>
            <example>
            hierarchie: "1,235,366665,-1" ou "-1,-1,3336,-1"
            </example>
            <returns>Chaîne représentant la hierarchie</returns>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.DefaultShowLinkRules._cellLevel">
            <summary>
            Cellule de niveau
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.DefaultShowLinkRules._genericDetailLevel">
            <summary>
            Niveau de détail générique
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.DefaultShowLinkRules.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Cellule de niveau cliqué</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.DefaultShowLinkRules.GetHierarchy">
            <summary>
            Obtient la hierarchie de la nomenclature sur 4 niveaux
            </summary>
            <remarks>
            La valeur long.MinValue correspond à un niveau dont il ne faut pas tenir compte
            </remarks>
            <example>
            hierarchie: "1,235,366665,long.MinValue.ToString()"
            </example>
            <returns>Chaîne représentant la hierarchie</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.DefaultShowLinkRules.ShowLink">
            <summary>
            Indique si le lien doit être montrée dans la Cellule
            </summary>
            <returns>True s'il doit être montré, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.OneLevelShowLinkRules.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Constructor
            </summary>
            <param name="cellLevel">Cellule du niveau qui a été cliqué</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.OneLevelShowLinkRules.GetHierarchy">
            <summary>
            Obtient la hierarchie de la nomenclature sur 4 niveaux
            </summary>
            <remarks>
            La valeur long.MinValue correspond à un niveau dont il ne faut pas tenir compte
            </remarks>
            <example>
            hierarchie: "1,235,366665,long.MinValue" ou "long.MinValue,long.MinValue,3336,long.MinValue"
            </example>
            <returns>Chaîne représentant la hierarchie</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.OneLevelRussiaShowLinkRules.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Constructor
            </summary>
            <param name="cellLevel">Cellule du niveau qui a été cliqué</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.OneLevelRussiaShowLinkRules.ShowLink">
            <summary>
            Indique si le lien doit être montrée dans la Cellule
            </summary>
            <returns>True s'il doit être montré, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellCreativesLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel,System.String,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Niveau de détail</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
            <param name="zoomDate">Date du zoom, vide si pas de zoom</param>
            <param name="universId">Identifiant de l'univers, -1 s'il n'y en a pas</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellCreativesLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Niveau de détail</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
            <param name="zoomDate">Date du zoom, vide si pas de zoom</param>
            <param name="universId">Identifiant de l'univers, -1 s'il n'y en a pas</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellSponsorshipCreativesLink">
            <summary>
            Cellule image ayant un lien vers les créations du parrainage
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellSponsorshipCreativesLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Niveau de détail</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellSponsorshipInsertionsLink">
            <summary>
            Cellule image ayant un lien vers le détail des insertions du parrainage
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellSponsorshipInsertionsLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Niveau de détail</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellSponsorshipInsertionsLink.GetLink">
            <summary>
            Obtient l'adresse du lien
            </summary>
            <returns>Adresse du lien</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.CssStylesList">
            <summary>
            Description résumée de CssStylesList.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.CssStylesList._cssList">
            <summary>
             HashTable contenant la liste des styles CSS
             </summary>	
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CssStylesList.#cctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CssStylesList.Init(TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
             Initialise la classe
             </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.CssStylesList.GetCssStyles(System.String)">
            <summary>
            Retourne des styles css
            </summary>
            <param name="cssKey">Identifiant du style css</param>
            <returns>styles css</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.DataAccess.ActiveMediaListDataAccess">
            <summary>
            DataAccess utilisé pour renvoyer la liste des supports actifs pour un vehicle
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ActiveMediaListDataAccess.GetActiveMediaData(System.Int64,System.Int32)">
            <summary>
            Méthode utilisée pour renvoyer la liste des supports actifs pour un vehicle
            </summary>
            <param name="vehicleId">Id du vehicle</param>
            <param name="siteLanguage">Site language</param>
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.DataAccess.AdNetTrackDetailLevelsDescriptionDataAccess">
            <summary>
            Load AdNetTrack detail levels description for AdNetTrack
            </summary>
        </member>
        <!-- Commentaire XML incorrect ignoré pour le membre "M:TNS.AdExpress.Web.Core.DataAccess.AdNetTrackDetailLevelsDescriptionDataAccess.Load(TNS.FrameWork.DB.Common.IDataSource)" -->
        <member name="T:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess">
            <summary>
            Class used for connections with the datebase in management of the universes
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess._idLogin">
            <summary>
            Login Id
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess._idRep">
            <summary>
            Directory id (known from its name)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess._idUniv">
            <summary>
            Univers Id (known from its name and id_group_universe_client
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess._idObject">
            <summary>
            Object Id known from:
            idUnivers, idType, tableType, Exception, list
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess._cnx">
            <summary>
            DataBase connection
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess._dt">
            <summary>
            table With 4 columns :
            idGroupUniverse, GroupUniverse, idUnivers, Univers
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess._dr">
            <summary>
            Line of dt
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess._dv">
            <summary>
            Dataview of dt
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess._allItem">
            <summary>
            Directory item objects list
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.#ctor(System.Int64,Oracle.DataAccess.Client.OracleConnection)">
            <summary>
            Constructors
            </summary>
            <param name="idLogin">Login If</param>
            <param name="cnx">Connection</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Get the customer universes list which are recorded
            </summary>
            <param name="webSession">Customer session</param>
            <param name="branch">Branch used (media, product)</param>
            <param name="ListUniverseClientDescription">ID_UNIVERSE_CLIENT_DESCRIPTION</param>
            <returns>Universes list</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,TNS.AdExpress.Web.Core.Sessions.LevelInformation)">
            <summary>
            Get the customer universes list which are recorded according to a filter
            </summary>
            <param name="webSession">Customer session</param>
            <param name="branch">Branch used (media, product)</param>
            <param name="ListUniverseClientDescription">ID_UNIVERSE_CLIENT_DESCRIPTION</param>
            <param name="filter">Filter</param>
            <returns>Universes list</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.Collections.Generic.List{System.Int64})">
            <summary>
            Get the customer universes list which are recorded dependind on allowed universe levels
            </summary>
            <param name="webSession">Customer session</param>
            <param name="branch">Branch used (media, product)</param>
            <param name="ListUniverseClientDescription">ID_UNIVERSE_CLIENT_DESCRIPTION</param>
            <param name="allowedLevels">allowed universe levels</param>
            <returns>Universes list</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.Collections.Generic.List{System.Int64},TNS.AdExpress.Web.Core.Sessions.LevelInformation)">
            <summary>
            Get the customer universes list which are recorded dependind on allowed universe levels
            </summary>
            <param name="webSession">Customer session</param>
            <param name="branch">Branch used (media, product)</param>
            <param name="ListUniverseClientDescription">ID_UNIVERSE_CLIENT_DESCRIPTION</param>
            <param name="allowedLevels">allowed universe levels</param>
            <param name="filter">Filter</param>
            <returns>Universes list</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.GetGroupUniverses(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Donne la liste des Groupes d'univers
            </summary>
            <remarks>Testée</remarks>
            <param name="webSession">Session du client</param>
            <returns>Liste des Groupes d'univers</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.IsUniverseExist(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Vérifie si un univers est déjà enregistré dans la base de données
            </summary>
            <remarks>Testée</remarks>
            <param name="webSession">Session du client</param>
            <param name="universeName">Nom de l'univers</param>
            <returns>True s'il existe, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.IsUniverseBelongToClientDescription(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64)">
            <summary>
            Vérifie si un univers appartient à une descrition client
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idUniverse">id Universe</param>
            <param name="idUniverseClientDescription">id Univers Client Description</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.GetObjectUniverses(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Méthode pour la récupération et la "deserialization" d'un objet Universe d'adexpress
            </summary>
            <param name="idUniverse">Identifiant de l'univers</param>
            <param name="webSession">Session du client</param>
            <returns>Retourne l'objet récupéré ou null si il y a eu un problème non géré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.GetTreeNodeUniverse(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Méthode pour la récupération et la "deserialization" d'un objet WebSession à partir de la table Universe Client
            </summary>
            <param name="idUniverse">Identifiant de l'univers</param>
            <param name="webSession">Session du client</param>
            <returns>Retourne l'objet récupéré ou null si il y a eu un problème non géré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.SaveUniverse(System.Int64,System.String,System.Collections.ArrayList,TNS.AdExpress.Constantes.Classification.Branch.type,System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Sauvegarde d'un nouvel univers
            </summary>
            <remarks>A Tester</remarks>
            <param name="idGroupUniverse">Identifiant du groupe d'univers</param>
            <param name="universe">Non de l'univers</param>
            <param name="alUniverseTreeNode"> Liste contenant les 2 arbres utilisés pour la sauvegarde des univers</param>
            <param name="type">Branche de l'univers</param>
            <param name="webSession">Session utilisateur</param>
            <param name="idUniverseClientDescription">idUniverseClientDescription</param>
            <returns>Retourne true si l'univers a été crée</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.SaveUniverse(System.Int64,System.String,System.Collections.ArrayList,TNS.AdExpress.Constantes.Classification.Branch.type,System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32)">
            <summary>
            Sauvegarde d'un nouvel univers
            </summary>
            <remarks>A Tester</remarks>
            <param name="idGroupUniverse">Identifiant du groupe d'univers</param>
            <param name="universe">Non de l'univers</param>
            <param name="alUniverseTreeNode"> Liste contenant les 2 arbres utilisés pour la sauvegarde des univers</param>
            <param name="type">Branche de l'univers</param>
            <param name="webSession">Session utilisateur</param>
            <param name="idUniverseClientDescription">idUniverseClientDescription</param>
            <param name="filter">filter</param>
            <returns>Retourne true si l'univers a été crée</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.SaveUniverse(System.Int64,System.String,System.Collections.Generic.Dictionary{System.Int32,TNS.AdExpress.Classification.AdExpressUniverse},TNS.AdExpress.Constantes.Classification.Branch.type,System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Sauvegarde d'un nouvel univers
            </summary>
            <remarks>A Tester</remarks>
            <param name="idGroupUniverse">Identifiant du groupe d'univers</param>
            <param name="universe">Non de l'univers</param>
            <param name="universesToSave"> Liste contenant les univers à sauvegarde</param>
            <param name="type">Branche de l'univers</param>
            <param name="webSession">Session utilisateur</param>
            <param name="idUniverseClientDescription">idUniverseClientDescription</param>
            <returns>Retourne true si l'univers a été crée</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.IsGroupUniverseExist(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Vérifie l'existance d'un groupe d'univers
            </summary>
            <remarks>Testée</remarks>
            <param name="webSession">Session du client</param>
            <param name="GroupUniverseName">Non du groupe d'univers</param>
            <returns>True s'il existe, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.CreateGroupUniverse(System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Création d'un groupe d'univers
            </summary>
            <remarks>testée</remarks>
            <param name="nameGroupUniverse">Nom du groupe d'univers</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.IsUniversInGroupUniverseExist(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64)">
            <summary>
            Vérifie s'il existe des univers dans un groupe d'univers
            </summary>
            <remarks>testée</remarks>
            <param name="webSession">Session du client</param>
            <param name="idGroupUniverse">Identifiant du groupe d'univers</param>
            <returns>True s'il existe, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.DropGroupUniverse(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Supprime un groupe d'univers de la table GROUP_UNIVERSE_CLIENT
            </summary>
            <remarks>testée</remarks>
            <param name="idGroupUniverse">Identifiant du Groupe d'univers</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.DropUniverse(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Supprime un univers dans la table UNIVERSE_CLIENT
            </summary>
            <remarks>testée</remarks>
            <param name="idUniverse">Identifiant du répertoire</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.RenameGroupUniverse(System.String,System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
             Renommer un groupe d'univers
            </summary>
            <remarks>testée</remarks>
            <param name="newName">Nouveau nom</param>
            <param name="idGroupUniverse">Identifiant du groupe d'univers</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.RenameUniverse(System.String,System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
             Renommer un univers
            </summary>
            <remarks>Testée</remarks>
            <param name="newName">Nouveau nom</param>
            <param name="idUniverse">Identifiant de l'univers</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.MoveUniverse(System.Int64,System.Int64,System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Déplace un univers d'un Groupe d'univers vers un autre
            </summary>
            <remarks>Testée</remarks>
            <param name="idOldGroupUniverse">Identifiant du répertoire source</param>
            <param name="idNewGroupUniverse">Identifiant du répertoire de destination</param>
            <param name="idUniverse">Identifiant Univers</param>
            <param name="webSession">Session du client</param>	
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.GetUniverse(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Retourne le nom d'une session à partir de son identifiant
            </summary>
            <remarks>A Tester</remarks>
            <param name="idUnivers">Identifiant de l'univers à charger</param>
            <param name="webSession">Session du client</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.UpdateUniverse(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int32,System.Collections.ArrayList)">
            <summary>
             Renommer un univers
            </summary>
            <remarks>Testée</remarks>
            <param name="idUniverse">Identifiant de l'univers</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.UpdateUniverse(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int32,System.Collections.ArrayList,System.Int32)">
            <summary>
             Renommer un univers
            </summary>
            <remarks>Testée</remarks>
            <param name="idUniverse">Identifiant de l'univers</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.ClassificationList.UniversListDataAccess.UpdateUniverse(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int32,System.Collections.Generic.Dictionary{System.Int32,TNS.AdExpress.Classification.AdExpressUniverse})">
            <summary>
             Update Universe
            </summary>
            <remarks>Testée</remarks>
            <param name="idUniverse">id Universe </param>
            <param name="webSession">Session client</param>
            <param name="idTypeUniverseClient">id Type universe client</param>
            <param name="idUniverseClientDescription">Id universe client description</param>
            <param name="universesToSave">Universes to save</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.DataAccess.CssStylesListDataAccess">
            <summary>
            This class is used to load AdExpress styles list
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.CssStylesListDataAccess.Load(TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Load AdExpress styles list
            </summary>
            <param name="source">Data Source</param>
            <returns>Hashtable contains AdExpress styles</returns>
            <example> This example shows the contents of the XML file
            	<cssStyles>
            		<cssStyle key="AdExpress" path="Css\AdExpress.css"/>
            		<cssStyle key="MediaSchedule" path="Css\MediaSchedule.css"/>
            		<cssStyle key="GenericUI" path="Css\GenericUI.css"/>	
            	</cssStyles>
            </example>
            <exception cref="T:System.Exception">Thrown when is impossible to load the CssConfiguration XML file</exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.CssStylesListDataAccess.LoadCssStyles(System.String)">
            <summary>
            This method returns the css style of the page
            </summary>
            <param name="cssPath">Css file path</param>
            <returns>Css style of the page</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.DataAccess.GenericClassificationSearchDataAccess">
            <summary>
            This class is used to search data by using detail levels
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.GenericClassificationSearchDataAccess.GetSearchResultListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,TNS.AdExpress.Domain.Level.DetailLevelItemInformation.Levels,TNS.AdExpress.Domain.Level.DetailLevelItemInformation.Levels)">
            <summary>
            Search result by using two detail levels
            </summary>
            <returns>DataSet</returns>
            <param name="webSession">WebSession</param>
            <param name="newText">Text used for research</param>
            <param name="listParentLevel">Parent detail level list</param>
            <param name="listLevel">Detail level list</param>
            <param name="level">Detail level N2</param>
            <param name="parentLevel">Detail level N1</param>
            <exception cref="T:System.Exception">Thrown when is impossible to get data in GetSearchResultListDataAccess method</exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.GenericClassificationSearchDataAccess.GetSearchResultListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,TNS.AdExpress.Domain.Level.DetailLevelItemInformation.Levels)">
            <summary>
            Search result by using one detail level
            </summary>
            <returns>DataSet contains detail level information</returns>
            <param name="webSession">WebSession</param>
            <param name="newText">Text used for research</param>
            <param name="listLevel">Detail level list</param>
            <param name="level">detail level N2</param>
            <exception cref="T:System.Exception">Thrown when is impossible to get data in GetSearchResultListDataAccess method</exception>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.DataAccess.Session.TrackingDataAccess">
            <summary>
             Tracking Event Log in the data base 
             </summary>
              <stereotype>utility</stereotype>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.Session.TrackingDataAccess.NewConnection(TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int64,System.String)">
            <summary>
            New connection event insertion
            </summary>
            <param name="source">Data Source</param>
            <param name="sessionId">Customer session Id</param>
            <param name="loginId">Customer login Id</param>
            <param name="IP">Customer Ip</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.Session.TrackingDataAccess.SetModule(TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int64,System.Int64)">
            <summary>
            New module selection event insertion
            </summary>
            <param name="source">Data Source</param>
            <param name="sessionId">Customer session Id</param>
            <param name="loginId">Customer login Id</param>
            <param name="ModuleId">Module Id</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.Session.TrackingDataAccess.SetPeriodType(TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int64,System.Int64,System.Int32)">
            <summary>
            New period selection event insertion
            </summary>
            <param name="source">Data Source</param>
            <param name="sessionId">Customer session Id</param>
            <param name="loginId">Customer login Id</param>
            <param name="ModuleId">Module Id</param>
            <param name="periodTypeId">Period type Id</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.Session.TrackingDataAccess.SetUnit(TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int64,System.Int64,System.Int32)">
            <summary>
            New unit selection event insertion
            </summary>
            <param name="source">Data Source</param>
            <param name="sessionId">Customer session Id</param>
            <param name="loginId">Customer login Id</param>
            <param name="ModuleId">Module Id</param>
            <param name="unitTypeId">identifiant du type de période</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.Session.TrackingDataAccess.SetResult(TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            New result event insertion
            </summary>
            <param name="source">Data Source</param>
            <param name="sessionId">Customer session Id</param>
            <param name="loginId">Customer login Id</param>
            <param name="ModuleId">Module Id</param>
            <param name="resultId">Result Id</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.Session.TrackingDataAccess.UseGad(TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Use gad event insertion
            </summary>
            <param name="source">Data Source</param>
            <param name="sessionId">Customer session Id</param>
            <param name="loginId">Customer login Id</param>
            <param name="ModuleId">Module Id</param>
            <param name="resultId">Result Id</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.Session.TrackingDataAccess.UseMyAdExpressSave(TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Use of a saved result
            </summary>
            <param name="source">Data Source</param>
            <param name="sessionId">Customer session Id</param>
            <param name="loginId">Customer login Id</param>
            <param name="ModuleId">Module Id</param>
            <param name="resultId">Result Id</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.Session.TrackingDataAccess.UseFileExport(TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Use export file event insertion
            </summary>
            <param name="source">Data Source</param>
            <param name="sessionId">Customer session Id</param>
            <param name="loginId">Customer login Id</param>
            <param name="ModuleId">Module Id</param>
            <param name="resultId">Result Id</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.Session.TrackingDataAccess.SetMediaAgency(TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Use Media Agency event insertion
            </summary>
            <param name="source">Data Source</param>
            <param name="sessionId">Customer session Id</param>
            <param name="loginId">Customer Login Id</param>
            <param name="ModuleId">Module Id</param>
            <param name="resultId">Result Id</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.DataAccess.Session.TrackingDataAccess.SetVehicle(TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Vehicle selection event insertion
            </summary>
            <param name="source">Data Source</param>
            <param name="sessionId">Customer session Id</param>
            <param name="loginId">Customer login Id</param>
            <param name="ModuleId">Module Id</param>
            <param name="vehicleId">Vehicle Id</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.ActiveMediaListDataAccessException">
            <summary>
            Active Media management
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.ActiveMediaListDataAccessException.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.ActiveMediaListDataAccessException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.ActiveMediaListDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.AdNetTrackDetailLevelsDescriptionDataAccessException">
            <summary>
            When AdExpress loads the AdNetTrack levels descriptions in (DB)
            </summary>
        </member>
        <!-- Commentaire XML incorrect ignoré pour le membre "M:TNS.AdExpress.Web.Core.Exceptions.AdNetTrackDetailLevelsDescriptionDataAccessException.#ctor" -->
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.AdNetTrackDetailLevelsDescriptionDataAccessException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error Message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.AdNetTrackDetailLevelsDescriptionDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error Message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.AdNetTrackDetailLevelsDescriptionException">
            <summary>
            When AdExpress loads the AdNetTrack levels descriptions
            </summary>
        </member>
        <!-- Commentaire XML incorrect ignoré pour le membre "M:TNS.AdExpress.Web.Core.Exceptions.AdNetTrackDetailLevelsDescriptionException.#ctor" -->
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.AdNetTrackDetailLevelsDescriptionException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error Message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.AdNetTrackDetailLevelsDescriptionException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error Message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.CssStylesListDataAccessException">
            <summary>
            When AdExpress loads CSS files list
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.CssStylesListDataAccessException.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.CssStylesListDataAccessException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.CssStylesListDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.DetailLevelItemsInformationDataAccessException">
            <summary>
            When AdExpress loads detail level items information
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.DetailLevelItemsInformationDataAccessException.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.DetailLevelItemsInformationDataAccessException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.DetailLevelItemsInformationDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.DetailLevelsInformationDataAccessException">
            <summary>
            When AdExpress loads detail levels information
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.DetailLevelsInformationDataAccessException.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.DetailLevelsInformationDataAccessException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.DetailLevelsInformationDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.GenericClassificationSearchDataAccessException">
            <summary>
            Thrown when is impossible to get data in generic classification search
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.GenericClassificationSearchDataAccessException.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.GenericClassificationSearchDataAccessException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.GenericClassificationSearchDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.GenericDetailLevelDataAccessExeption">
             <summary>
            DataAccess : Detail Level management
             </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.GenericDetailLevelDataAccessExeption.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.GenericDetailLevelDataAccessExeption.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.GenericDetailLevelDataAccessExeption.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.MySessionDataAccessException">
            <summary>
            Thrown when problem occurred during connections with the database in management of the universes
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.MySessionDataAccessException.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.MySessionDataAccessException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.MySessionDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.TrackingDataAccessExeption">
            <summary>
            Thrown when log Tracking Event in the data base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.TrackingDataAccessExeption.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.TrackingDataAccessExeption.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.TrackingDataAccessExeption.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.UnitException">
            <summary>
            Exception lors de la Gestion des unités
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.UnitException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.UnitException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.UnitException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.UniversListException">
            <summary>
            Erreur lors de l'utilisation des listes
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.UniversListException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.UniversListException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.UniversListException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.WebRightDataAccessException">
            <summary>
            Classe pour gérer les exceptions de la classe WebRightDataAccess
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebRightDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebRightDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebRightDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.WebRightRulesException">
            <summary>
            Classe pour gérer les exceptions de la classe WebRightDataAccess
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebRightRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebRightRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebRightRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Exceptions.WebSessionException">
            <summary>
            Classe gérant les exceptions du module de sessions
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebSessionException.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebSessionException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Exceptions.WebSessionException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel">
            <summary>
            Cellule contenant un niveau de détail pour AdExpress
            </summary> 
            <remarks>
            La Cellule est capable de gérer l'affichage du Gad spécifiquement à AdExpress
            </remarks>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel._webSession">
            <summary>
            Session du client
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel._link">
            <summary>
            Adresse d'appelle du plan media
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel._genericDetailLevel">
            <summary>
            Niveau de détail générique
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel.#ctor(System.Int64,System.String,System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">identifiant de l'élément du niveau</param>
            <param name="label">Libellé du niveau</param>
            <param name="level">Niveau de profondeur du niveau</param>
            <param name="lineIndexInResultTable">Index de la ligne du niveau dans le tableau de resultat</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel.#ctor(System.Int64,System.String,TNS.FrameWork.WebResultUI.CellLevel,System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">identifiant de l'élément du niveau</param>
            <param name="label">Libellé du niveau</param>
            <param name="parentLevel">Niveau supérieur</param>
            <param name="level">Niveau de profondeur du niveau</param>
            <param name="lineIndexInResultTable">Index de la ligne du niveau dans le tableau de resultat</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel.#ctor(System.Int64,System.String,System.Int32,System.Int32,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructeur
            </summary>
            <param name="id">identifiant de l'élément du niveau</param>
            <param name="label">Libellé du niveau</param>
            <param name="level">Niveau de profondeur du niveau</param>
            <param name="lineIndexInResultTable">Index de la ligne du niveau dans le tableau de resultat</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel.#ctor(System.Int64,System.String,TNS.FrameWork.WebResultUI.CellLevel,System.Int32,System.Int32,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructeur
            </summary>
            <param name="id">identifiant de l'élément du niveau</param>
            <param name="label">Libellé du niveau</param>
            <param name="parentLevel">Niveau supérieur</param>
            <param name="level">Niveau de profondeur du niveau</param>
            <param name="lineIndexInResultTable">Index de la ligne du niveau dans le tableau de resultat</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel.#ctor(System.Int64,System.String,TNS.FrameWork.WebResultUI.CellLevel,System.Int32,System.Int32,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Constructeur
            </summary>
            <param name="id">identifiant de l'élément du niveau</param>
            <param name="label">Libellé du niveau</param>
            <param name="parentLevel">Niveau supérieur</param>
            <param name="level">Niveau de profondeur du niveau</param>
            <param name="lineIndexInResultTable">Index de la ligne du niveau dans le tableau de resultat</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel.#ctor(System.Int64,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">identifiant de l'élément du niveau</param>
            <param name="label">Libellé du niveau</param>
            <param name="level">Niveau de profondeur du niveau</param>
            <param name="lineIndexInResultTable">Index de la ligne du niveau dans le tableau de resultat</param>
            <param name="nbChar">Nombre de caractère sur une ligne</param>
            <param name="tolerance">Tolérence du nombre de caratère sur une ligne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel.#ctor(System.Int64,System.String,TNS.FrameWork.WebResultUI.CellLevel,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">identifiant de l'élément du niveau</param>
            <param name="label">Libellé du niveau</param>
            <param name="parentLevel">Niveau supérieur</param>
            <param name="level">Niveau de profondeur du niveau</param>
            <param name="lineIndexInResultTable">Index de la ligne du niveau dans le tableau de resultat</param>
            <param name="nbChar">Nombre de caractère sur une ligne</param>
            <param name="tolerance">Tolérence du nombre de caratère sur une ligne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel.#ctor(System.Int64,System.String,System.Int32,System.Int32,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">identifiant de l'élément du niveau</param>
            <param name="label">Libellé du niveau</param>
            <param name="level">Niveau de profondeur du niveau</param>
            <param name="lineIndexInResultTable">Index de la ligne du niveau dans le tableau de resultat</param>
            <param name="webSession">Session du client</param>
            <param name="nbChar">Nombre de caractère sur une ligne</param>
            <param name="tolerance">Tolérence du nombre de caratère sur une ligne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel.#ctor(System.Int64,System.String,TNS.FrameWork.WebResultUI.CellLevel,System.Int32,System.Int32,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">identifiant de l'élément du niveau</param>
            <param name="label">Libellé du niveau</param>
            <param name="parentLevel">Niveau supérieur</param>
            <param name="level">Niveau de profondeur du niveau</param>
            <param name="lineIndexInResultTable">Index de la ligne du niveau dans le tableau de resultat</param>
            <param name="webSession">Session du client</param>
            <param name="nbChar">Nombre de caractère sur une ligne</param>
            <param name="tolerance">Tolérence du nombre de caratère sur une ligne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel.#ctor(System.Int64,System.String,TNS.FrameWork.WebResultUI.CellLevel,System.Int32,System.Int32,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel,System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">identifiant de l'élément du niveau</param>
            <param name="label">Libellé du niveau</param>
            <param name="parentLevel">Niveau supérieur</param>
            <param name="level">Niveau de profondeur du niveau</param>
            <param name="lineIndexInResultTable">Index de la ligne du niveau dans le tableau de resultat</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
            <param name="nbChar">Nombre de caractère sur une ligne</param>
            <param name="tolerance">Tolérence du nombre de caratère sur une ligne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel.Render">
            <summary>
            Rendu de code HTML
            </summary>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.AdExpressCellLevel.Render(System.String)">
            <summary>
            Rendu de code HTML
            </summary>
            <returns>Code HTML</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellInsertionsLink">
            <summary>
            Description résumée de CellCreative.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellInsertionsLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Niveau de détail</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellInsertionsLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel,System.String,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Niveau de détail</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
            <param name="zoomDate">Date du zoom, vide si pas de zoom</param>
            <param name="universId">Identifiant de l'univers, -1 s'il n'y en a pas</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellInsertionsLink.GetLink">
            <summary>
            Obtient l'adresse du lien
            </summary>
            <returns>Adresse du lien</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellPressCreativeLink">
            <summary>
            cellule contenant le lien vers les créations de la Presse
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellPressCreativeLink.#ctor(System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellPressCreativeLink.GetLink">
            <summary>
            Obtient l'adresse du lien
            </summary>
            <returns>Adresse du lien</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellRadioCreativeLink">
            <summary>
            cellule contenant le lien vers les créations Radio
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellRadioCreativeLink._creative">
            <summary>
            Id solgan
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellRadioCreativeLink._vehicleId">
            <summary>
            Media type ID
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRadioCreativeLink.#ctor(System.String,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellRadioCreativeLink.GetLink">
            <summary>
            Obtient l'adresse du lien
            </summary>
            <returns>Adresse du lien</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellTvCreativeLink">
            <summary>
            cellule contenant le lien vers les créations TV
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellTvCreativeLink._creative">
            <summary>
            Id solgan
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellTvCreativeLink._vehicleId">
            <summary>
            Id du vehicle (Tv ou others)
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellTvCreativeLink.#ctor(System.String,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellTvCreativeLink.GetLink">
            <summary>
            Obtient l'adresse du lien
            </summary>
            <returns>Adresse du lien</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellMediaScheduleLink">
            <summary>
            Cellule contenant un lien vers un plan media
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellMediaScheduleLink._webSession">
            <summary>
            Session du client
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellMediaScheduleLink._classificationId">
            <summary>
            Identifiant de la nomenclature sur lequel le plan media doit s'executer
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellMediaScheduleLink._level">
            <summary>
            Niveau
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellMediaScheduleLink._imagePath">
            <summary>
            Chemin de l'image servant au lien
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellMediaScheduleLink._link">
            <summary>
            Adresse d'appelle du plan media
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellMediaScheduleLink.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Niveau de détail</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellMediaScheduleLink.GetImagePath">
            <summary>
            Obtient le chemin de l'image contenant le lien
            </summary>
            <returns>Chemin de l'image contenant le lien</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellMediaScheduleLink.GetLink">
            <summary>
            Obtient l'adresse du lien
            </summary>
            <returns>Adresse du lien</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellMediaScheduleLink.ToString">
            <summary>
            Retourne une représentation string de l'objet
            </summary>
            <returns>Chaine de caractère</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellMediaScheduleLink.CompareTo(System.Object)">
            <summary>
            Comparaison les valeurs de deux cellules.
            </summary>
            <param name="cell">Cellule à comparer</param>
            <remarks>Au cas où cell n'est pas comparable, on utilise ToString pour comparer les objets.</remarks>
            <returns>1 si objet courant supérieur à cell, -1 si objet courant inférieur à cell et 0 si les deux objets sont égaux</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellMediaScheduleLink.Equals(System.Object)">
            <summary>
            Teste l'égalité de deux cellules.
            </summary>
            <param name="cell">Cellule à comparer</param>
            <returns>vrai si les deux cellules sont égales, faux sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellMediaScheduleLink.RenderExcel(System.String)">
            <summary>
            Rendu de code HTML pour Excel
            </summary>
            <returns>Code HTML pour Excel</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.CellProofLink">
            <summary>
            Cellule représentant un lien vers une fiche justifivcative.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellProofLink._webSession">
            <summary>
            Session du client
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellProofLink._imagePath">
            <summary>
            Chemin de l'image servant au lien
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellProofLink._link">
            <summary>
            Adresse d'appelle du justificatif
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellProofLink._idMedia">
            <summary>
            Identifiant du support
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellProofLink._idProduct">
            <summary>
            Identifiant du poduit
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellProofLink._mediaPaging">
            <summary>
            Numero de la page
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellProofLink._dateFacial">
            <summary>
            Date de couverture
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.CellProofLink._dateParution">
            <summary>
            Date de parution
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellProofLink.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="idMedia">Identifiant du support</param>
            <param name="idProduct">Identifiant du produit</param>
            <param name="mediaPaging">Numero de page</param>
            <param name="date">Date</param>	
            <param name="dateParution">Date de parution</param>	
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellProofLink.GetImagePath">
            <summary>
            Obtient le chemin de l'image contenant le lien
            </summary>
            <returns>Chemin de l'image contenant le lien</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellProofLink.GetLink">
            <summary>
            Obtient l'adresse du lien
            </summary>
            <returns>Adresse du lien</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellProofLink.ToString">
            <summary>
            Retourne une représentation string de l'objet
            </summary>
            <returns>Chaine de caractère</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellProofLink.CompareTo(System.Object)">
            <summary>
            Comparaison les valeurs de deux cellules.
            </summary>
            <param name="cell">Cellule à comparer</param>
            <remarks>Au cas où cell n'est pas comparable, on utilise ToString pour comparer les objets.</remarks>
            <returns>1 si objet courant supérieur à cell, -1 si objet courant inférieur à cell et 0 si les deux objets sont égaux</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellProofLink.Equals(System.Object)">
            <summary>
            Teste l'égalité de deux cellules.
            </summary>
            <param name="cell">Cellule à comparer</param>
            <returns>vrai si les deux cellules sont égales, faux sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.CellProofLink.RenderExcel(System.String)">
            <summary>
            Rendu de code HTML pour Excel
            </summary>
            <returns>Code HTML pour Excel</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.HeaderInsertions">
            <summary>
            Header de la colonne Détail des insertions
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderInsertions.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderInsertions.#ctor(System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderInsertions.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderInsertions.#ctor(System.String,System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderInsertions.#ctor(System.String,System.Boolean)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="newGroup">Spécifie si l'entête fait partie d'un nouveau groupe d'entêtes</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderInsertions.#ctor(System.String,System.Boolean,System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="newGroup">Spécifie si l'entête fait partie d'un nouveau groupe d'entêtes</param>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderInsertions.#ctor(System.Boolean,System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="sortable">Spécifie si la colonne peut être triée ou non</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderInsertions.#ctor(System.Boolean,System.String,System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="sortable">Spécifie si la colonne peut être triée ou non</param>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderInsertions.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="newGroup">Spécifie si l'entête fait partie d'un nouveau groupe d'entêtes</param>
            <param name="sortable">Spécifie si la colonne peut être triée ou non</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderInsertions.#ctor(System.String,System.Boolean,System.Boolean,System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="newGroup">Spécifie si l'entête fait partie d'un nouveau groupe d'entêtes</param>
            <param name="sortable">Spécifie si la colonne peut être triée ou non</param>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderInsertions.RenderExcel(System.Text.StringBuilder,System.Boolean@,System.Collections.Queue,System.Int32,TNS.FrameWork.WebResultUI.LineStart)">
            <summary>
            Rendu de la cellule
            </summary>
            <param name="output">Sortie HTML</param>
            <param name="first">Indique si la cellule est la première d'une ligne ou non</param>
            <param name="lineStart">LineStart de l'entête</param>
            <param name="nodes">Queue de nodes</param>
            <param name="rowSpan">Nombre de lignes que l'entête doit occuper</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderInsertions.RenderRowExcel(System.Text.StringBuilder,System.Boolean@,System.Collections.Queue,System.Int32,TNS.FrameWork.WebResultUI.LineStart,System.Int32,System.String[])">
            <summary>
            Rendu de la cellule
            </summary>
            <param name="output">Sortie HTML</param>
            <param name="first">Indique si la cellule est la première d'une ligne ou non</param>
            <param name="lineStart">LineStart de l'entête</param>
            <param name="nodes">Queue de nodes</param>
            <param name="rowSpan">Nombre de lignes que l'entête doit occuper</param>
            <param name="iLevelColumn">Index de la colonne contenant les description de niveau</param>
            <param name="tLevelLabels">Libellés des entêtes de niveaux dans leur ordre hiérarchique</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.HeaderCreative">
            <summary>
            Header de la colonne Création
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderCreative.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderCreative.#ctor(System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderCreative.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderCreative.#ctor(System.String,System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderCreative.#ctor(System.String,System.Boolean)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="newGroup">Spécifie si l'entête fait partie d'un nouveau groupe d'entêtes</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderCreative.#ctor(System.String,System.Boolean,System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="newGroup">Spécifie si l'entête fait partie d'un nouveau groupe d'entêtes</param>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderCreative.#ctor(System.Boolean,System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="sortable">Spécifie si la colonne peut être triée ou non</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderCreative.#ctor(System.Boolean,System.String,System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="sortable">Spécifie si la colonne peut être triée ou non</param>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderCreative.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="newGroup">Spécifie si l'entête fait partie d'un nouveau groupe d'entêtes</param>
            <param name="sortable">Spécifie si la colonne peut être triée ou non</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderCreative.#ctor(System.String,System.Boolean,System.Boolean,System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="newGroup">Spécifie si l'entête fait partie d'un nouveau groupe d'entêtes</param>
            <param name="sortable">Spécifie si la colonne peut être triée ou non</param>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderCreative.RenderExcel(System.Text.StringBuilder,System.Boolean@,System.Collections.Queue,System.Int32,TNS.FrameWork.WebResultUI.LineStart)">
            <summary>
            Rendu de la cellule
            </summary>
            <param name="output">Sortie HTML</param>
            <param name="first">Indique si la cellule est la première d'une ligne ou non</param>
            <param name="lineStart">LineStart de l'entête</param>
            <param name="nodes">Queue de nodes</param>
            <param name="rowSpan">Nombre de lignes que l'entête doit occuper</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderCreative.RenderRowExcel(System.Text.StringBuilder,System.Boolean@,System.Collections.Queue,System.Int32,TNS.FrameWork.WebResultUI.LineStart,System.Int32,System.String[])">
            <summary>
            Rendu de la cellule
            </summary>
            <param name="output">Sortie HTML</param>
            <param name="first">Indique si la cellule est la première d'une ligne ou non</param>
            <param name="lineStart">LineStart de l'entête</param>
            <param name="nodes">Queue de nodes</param>
            <param name="rowSpan">Nombre de lignes que l'entête doit occuper</param>
            <param name="iLevelColumn">Index de la colonne contenant les description de niveau</param>
            <param name="tLevelLabels">Libellés des entêtes de niveaux dans leur ordre hiérarchique</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.HeaderMediaSchedule">
            <summary>
            Header de la colonne d'accès au plan media
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderMediaSchedule.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderMediaSchedule.#ctor(System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderMediaSchedule.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderMediaSchedule.#ctor(System.String,System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderMediaSchedule.#ctor(System.String,System.Boolean)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="newGroup">Spécifie si l'entête fait partie d'un nouveau groupe d'entêtes</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderMediaSchedule.#ctor(System.String,System.Boolean,System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="newGroup">Spécifie si l'entête fait partie d'un nouveau groupe d'entêtes</param>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderMediaSchedule.#ctor(System.Boolean,System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="sortable">Spécifie si la colonne peut être triée ou non</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderMediaSchedule.#ctor(System.Boolean,System.String,System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="sortable">Spécifie si la colonne peut être triée ou non</param>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderMediaSchedule.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="newGroup">Spécifie si l'entête fait partie d'un nouveau groupe d'entêtes</param>
            <param name="sortable">Spécifie si la colonne peut être triée ou non</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderMediaSchedule.#ctor(System.String,System.Boolean,System.Boolean,System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="label">Texte de l'entête</param>
            <param name="newGroup">Spécifie si l'entête fait partie d'un nouveau groupe d'entêtes</param>
            <param name="sortable">Spécifie si la colonne peut être triée ou non</param>
            <param name="id">Identifiant de la colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderMediaSchedule.RenderExcel(System.Text.StringBuilder,System.Boolean@,System.Collections.Queue,System.Int32,TNS.FrameWork.WebResultUI.LineStart)">
            <summary>
            Rendu de la cellule
            </summary>
            <param name="output">Sortie HTML</param>
            <param name="first">Indique si la cellule est la première d'une ligne ou non</param>
            <param name="lineStart">LineStart de l'entête</param>
            <param name="nodes">Queue de nodes</param>
            <param name="rowSpan">Nombre de lignes que l'entête doit occuper</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.HeaderMediaSchedule.RenderRowExcel(System.Text.StringBuilder,System.Boolean@,System.Collections.Queue,System.Int32,TNS.FrameWork.WebResultUI.LineStart,System.Int32,System.String[])">
            <summary>
            Rendu de la cellule
            </summary>
            <param name="output">Sortie HTML</param>
            <param name="first">Indique si la cellule est la première d'une ligne ou non</param>
            <param name="lineStart">LineStart de l'entête</param>
            <param name="nodes">Queue de nodes</param>
            <param name="iLevelColumn">Index de la colonne contenant les description de niveau</param>
            <param name="tLevelLabels">Libellés des entêtes de niveaux dans leur ordre hiérarchique</param>
            <param name="rowSpan">Nombre de lignes que l'entête doit occuper</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Result.ProofDetail">
            <summary>
            Contient les informations d'une fiche justificative
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.ProofDetail._webSession">
            <summary>
            Session du client
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.ProofDetail._idMedia">
            <summary>
            Identifiant du support
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.ProofDetail._idProduct">
            <summary>
            Identifiant du poduit
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.ProofDetail._mediaPaging">
            <summary>
            Numero de la page
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.ProofDetail._dateCover">
            <summary>
            Date Faciale
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.ProofDetail._dateParution">
            <summary>
            Date de parution
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.ProofDetail.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="idMedia">Identifiant du support</param>
            <param name="idProduct">Identifiant du produit</param>
            <param name="mediaPaging">Numero de page</param>
            <param name="dateCover">Date faciale</param>	
            <param name="dateParution">Date de parution</param>	
            <param name="webSession">Session du client</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Result.ProofDetail.CustomerWebSession">
            <summary>
            Obtient la session client
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Result.ProofDetail.IdMedia">
            <summary>
            Obtient l'identifiant du support
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Result.ProofDetail.IdProduct">
            <summary>
            Obtient l'identifiant du produit
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Result.ProofDetail.MediaPaging">
            <summary>
            Obtient le numero de la page
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Result.ProofDetail.DateCover">
            <summary>
            Obtient la date faciale
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Result.ProofDetail.DateParution">
            <summary>
            Obtient la date de parution
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Selection.AdExpressLevelsRules">
            <summary>
            AdExpress levels rights rules
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.ILevelsRules.GetAuthorizedLevels">
            <summary>
            Get List of auhorized levels
            </summary>
            <returns>Authorized levels</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.ILevelsRules.GetAuthorizedBranches">
            <summary>
            Get List of auhorized branches
            </summary>
            <returns>Authorized branches</returns>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.AdExpressLevelsRules._webSession">
            <summary>
            Session 
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.AdExpressLevelsRules._branchesIds">
            <summary>
            Branch Ids
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.AdExpressLevelsRules._universeLevels">
            <summary>
            Universe levels
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.AdExpressLevelsRules._dimension">
            <summary>
            Nomenclature dimension  (product, media,..)
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.AdExpressLevelsRules.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{TNS.Classification.Universe.UniverseLevel},TNS.Classification.Universe.Dimension)">
            <summary>
            Constructor
            </summary>
            <param name="webSession">Session</param>
            <param name="branchesIds">Branch Ids</param>
            <param name="universeLevels">Universe levels</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.AdExpressLevelsRules.GetAuthorizedLevels">
            <summary>
            Get List of auhorized levels
            </summary>
            <returns>Authorized levels</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.AdExpressLevelsRules.GetAuthorizedBranches">
            <summary>
            Get List of auhorized branches
            </summary>
            <returns>Authorized branches</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.AdExpressLevelsRules.CanAddLevel(System.Int64)">
            <summary>
            Checks if classification level can be added
            </summary>
            <param name="levelId">level Id</param>
            <returns>Checks if classification level can be added</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.AdExpressLevelsRules.CanAddBranch(System.Int32)">
            <summary>
            Checks if branch can be added
            </summary>
            <param name="branchId">branch Id</param>
            <returns>Checks if branch can be added</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.AdExpressLevelsRules.IsValidLevels(System.Int64)">
            <summary>
            determine universe level validity
            </summary>
            <returns>Tur if level is valid</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Selection.FilterItem">
            <summary>
            Filter item represent an object containing information concerning an element intended to be used as a filter
            the class definition is generic and it could be used for diffrent types of filters
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.FilterItem._id">
            <summary>
            Item identifiant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.FilterItem._label">
            <summary>
            Item label
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.FilterItem._isEnable">
            <summary>
            Is Fiter Enable
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.FilterItem.#ctor(System.Int64,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="id">Item identifiant</param>
            <param name="label">Item label</param>
            <param name="isEnable">Is Item Filter Enable</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.FilterItem.#ctor(System.Int64,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="id">Item identifiant</param>
            <param name="label">Item label</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Selection.FilterItem.Id">
            <summary>
            Get Item identifiant
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Selection.FilterItem.Label">
            <summary>
            Get Item label
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Selection.FilterItem.IsEnable">
            <summary>
            Get / Set Is Fiter Enable
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod">
            <summary>
            Media Schedule Period Management regarding to global date selection
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod._begin">
            <summary>
            Perdiod Beginning
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod._end">
            <summary>
            Period End
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod._periodBreakDown">
            <summary>
            SubPeriods granularity
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod._subPeriods">
            <summary>
            List of period breakdowns
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod._isComparativePeriod">
            <summary>
            Whether is comparative period or not 
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod._comparativePeriodType">
            <summary>
            Comparative Period Type
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.#ctor(TNS.AdExpress.Web.Core.CustomerPeriod,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Constructor
            </summary>
            <param name="period">period to duplicate</param>
            <param name="periodBreakDown">Period breakdown (days, weeks, monthes)</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.#ctor(System.String,System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Constructor
            </summary>
            <param name="begin">Period Beginning</param>
            <param name="end">Period End</param>
            <param name="periodBreakDown">Period breakdown (days, weeks, monthes)</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.#ctor(System.DateTime,System.DateTime,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Constructor
            </summary>
            <param name="begin">Period Beginning</param>
            <param name="end">Period End</param>
            <param name="periodBreakDown">Period breakdown (days, weeks, monthes)</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.#ctor(System.DateTime,System.DateTime,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel,TNS.AdExpress.Constantes.Web.globalCalendar.comparativePeriodType)">
            <summary>
            Constructor (Comparative period is used with this constructor)
            </summary>
            <param name="begin">Period Beginning</param>
            <param name="end">Period End</param>
            <param name="periodBreakDown">Period breakdown (days, weeks, monthes)</param>
            <param name="comparativePeriodType">Type Compartive Period</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.ComputePeriod">
            <summary>
            Determine the subPeriods items
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.Min(System.DateTime,System.DateTime)">
            <summary>
            Compare two dates and return the smalelr
            </summary>
            <param name="date1">First Date Param</param>
            <param name="date2">Second Date Parm</param>
            <returns>Smaller Date</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.GetWeekNumber(System.DateTime)">
            <summary>
            Get Week Number as YYYYWW
            </summary>
            <param name="date">Day to compute</param>
            <returns>YYYYWW</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.InLastTwoMonths(System.DateTime)">
            <summary>
            If date is in last two months
            </summary>
            <param name="date">date</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.GetMediaSchedulePeriodComparative">
            <summary>
            Get Media Schedule Period Comparative
            </summary>
            <returns>Media Schedule Period (Null if comparative period is not used (false value)) </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.SetComparativePeriod(System.DateTime@,System.DateTime@)">
            <summary>
            Initialise la période comparative
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.PeriodDetailLEvel">
            <summary>
            SubPeriods granularity
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.SubPeriods">
            <summary>
            Get Set of Subperiods composing the global period
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.Begin">
            <summary>
            Get Period Beginning
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.End">
            <summary>
            Get Period End
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod.ComparativePeriodType">
            <summary>
            Comparative Period Type
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Selection.MediaScheduleSubPeriod">
            <summary>
            SubPeriod Breakdown entity
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.MediaScheduleSubPeriod._type">
            <summary>
            SubPeriod type
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.MediaScheduleSubPeriod._items">
            <summary>
            List of items of SubPeriods
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.MediaScheduleSubPeriod.#ctor(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.PeriodBreakdownType)">
            <summary>
            Constructor
            </summary>
            <param name="type">Period type</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.MediaScheduleSubPeriod.AddSubPeriod(System.DateTime,System.DateTime)">
            <summary>
            Add a SubPeriod 
            </summary>
            <param name="begin">SubPeriod begin</param>
            <param name="end">SubPeriod end</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.MediaScheduleSubPeriod.Equals(System.Object)">
            <summary>
            Checks objects are equivalent
            </summary>
            <param name="obj">Object to test</param>
            <returns>True if objects are similar</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Selection.MediaScheduleSubPeriod.SubPeriodType">
            <summary>
            Get type of subperiod items
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Selection.MediaScheduleSubPeriod.Items">
            <summary>
            Get list of period items composing the sub period
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Selection.PeriodItem">
            <summary>
            Period Item is a beginning and a end as YYYYMMDD, YYYYMM, YYYYWW
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.PeriodItem._begin">
            <summary>
            Period beginning
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Selection.PeriodItem._end">
            <summary>
            Period end
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.PeriodItem.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="begin">SubPeriod begin as YYYYMMDD, YYYYMM, YYYYWW</param>
            <param name="end">SubPeriod end as YYYYMMDD, YYYYMM, YYYYWW</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Selection.PeriodItem.Equals(System.Object)">
            <summary>
            Check equality
            </summary>
            <param name="obj">object to check</param>
            <returns>True if both are equivalent PeriodItem objects</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Selection.PeriodItem.Begin">
            <summary>
            Period beginning
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Selection.PeriodItem.End">
            <summary>
            Period End
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Sessions.AdNetTrackProductSelection">
            <summary>
            AdNetTrack product selection
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.AdNetTrackProductSelection._selectionType">
            <summary>
            Selection type
            </summary>
            <example>
            <list type="string">
            <listheader>Selection Type</listheader>
            <item>Advertiser</item>
            <item>Product</item>
            <item>Hashcode</item>
            </list>
            </example>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.AdNetTrackProductSelection._id">
            <summary>
            Id
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.AdNetTrackProductSelection.#ctor(TNS.AdExpress.Constantes.FrameWork.Results.AdNetTrackMediaSchedule.Type,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="selectionType">Selection type</param>
            <param name="id">Id</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.AdNetTrackProductSelection.SelectionType">
            <summary>
            Get Selection type
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.AdNetTrackProductSelection.Id">
            <summary>
            Get Id selected
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Sessions.CompetitorAdvertiser">
            <summary>
            Classe utilisée dans la sélection d'annonceur concurrentiel
            Réprésente un objet avec un treenode et un nom associé
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.CompetitorAdvertiser.nameCompetitorAdvertiser">
            <summary>
            Nom de l'univers associé à l'arbre
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.CompetitorAdvertiser.treeCompetitorAdvertiser">
            <summary>
            Arbre contenant la liste d'annonceur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.CompetitorAdvertiser.#ctor(System.String,System.Windows.Forms.TreeNode)">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.CompetitorAdvertiser.NameCompetitorAdvertiser">
            <summary>
            Obtient le nom de l'univers
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.CompetitorAdvertiser.TreeCompetitorAdvertiser">
            <summary>
            Obtient l'arbre avec la liste des annonceurs
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Sessions.CompetitorMedia">
            <summary>
            Classe utilisée dans la sélection d'un media
            Réprésente un objet avec un treenode et un nom associé
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.CompetitorMedia.nameCompetitorMedia">
            <summary>
            Nom de l'univers associé à l'arbre
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.CompetitorMedia.treeCompetitorMedia">
            <summary>
            Arbre contenant la liste d'annonceur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.CompetitorMedia.#ctor(System.String,System.Windows.Forms.TreeNode)">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.CompetitorMedia.NameCompetitorMedia">
            <summary>
            Obtient le nom de l'univers
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.CompetitorMedia.TreeCompetitorMedia">
            <summary>
            Obtient l'arbre avec la liste des medias
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Sessions.GenericDetailLevelSaved">
            <summary>
            Description d'un niveau de détail générique d'un client sauvegardé
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.GenericDetailLevelSaved._id">
            <summary>
            Identifiant du niveau sauvegardé
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.GenericDetailLevelSaved.#ctor(System.Int64,System.Collections.ArrayList)">
            <summary>
            Constructeur
            </summary>
            <param name="id">Identifiant du niveau sauvegardé</param>
            <param name="levelIds">Liste des identifiant des éléments duniveau de détail</param>
            <remarks>levelIds doit contenir des int</remarks>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.GenericDetailLevelSaved.Id">
            <summary>
            Identifiant du niveau sauvegardé
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Sessions.LevelInformation">
            <summary>
            Classe qui contient des informations sur un noeud d'un arbre de sélection d'élément de nomenclature produit ou support
            Classe destinée à être utilisée dans un objet TreeNode
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.LevelInformation.type">
            <summary>
            Type de Node : niveau et accès (en accès ou en exception)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.LevelInformation.id">
            <summary>
            Identifiant de l'élément. Le libellé de l'élément est contenu dans le champ Text du treenode
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.LevelInformation.text">
            <summary>
            libellé de l'élément
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.LevelInformation.#ctor(TNS.AdExpress.Constantes.Customer.Right.type,System.Int64,System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="type">Type de Node : niveau et accès (en accès ou en exception)</param>
            <param name="id">Identifiant de l'élément.</param>
            <param name="text">Label de l'élément</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.LevelInformation.Type">
            <summary>
            Get type
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.LevelInformation.ID">
            <summary>
            Get Id
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.LevelInformation.Text">
            <summary>
            Get label
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Sessions.MediaLevelSelection">
            <summary>
            Liste d'éléments media
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.MediaLevelSelection.levelMedia">
            <summary>
            Niveau de detail pour la branche média
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.MediaLevelSelection.listElement">
            <summary>
            Liste des médias
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.MediaLevelSelection.#ctor(TNS.AdExpress.Constantes.Classification.Level.type,System.Windows.Forms.TreeNode)">
            <summary>
            Constructeur
            </summary>
            <param name="levelMedia">Niveau de détail</param>
            <param name="listElement">liste des éléments</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.MediaLevelSelection.LevelMedia">
            <summary>
            Obtient le niveau de detail pour la branche media
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.MediaLevelSelection.ListElement">
            <summary>
            Obtient la liste d'éléments
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Sessions.ProductLevelSelection">
            <summary>
            Liste d'élément produit
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.ProductLevelSelection.levelProduct">
            <summary>
            Niveau de detail pour la branche produit
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.ProductLevelSelection.listElement">
            <summary>
            Liste des produits
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.ProductLevelSelection.#ctor(TNS.AdExpress.Constantes.Classification.Level.type,System.Windows.Forms.TreeNode)">
            <summary>
            Constructeur
            </summary>
            <param name="levelProduct">Niveau de détail</param>
            <param name="listElement">TreeNode avec la liste des éléments</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.ProductLevelSelection.LevelProduct">
            <summary>
            Obtient le niveau de detail pour la branche produit
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.ProductLevelSelection.ListElement">
            <summary>
            Obtient la liste
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Sessions.WebSession">
            <summary>
            La classe session comprend toutes les variables de sessions nécessaires à la navigation d'un client d'AdExpress.
            La session est chargée de ma base de données (ou créée si inexistante) à la demande d'une page et sauvegardé lors de la réponse à la requête du client.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._source">
            <summary>
            Source de données du client pour accéder aux données
            </summary>	
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.idSession">
            <summary>
            Identifiant de session
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.siteLanguage">
            <summary>
            Langage du site
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.beginningDate">
            <summary>
            Date de début de la session (date de connexion)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.modificationDate">
            <summary>
            Date de dernère modification de la session
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.currentModule">
            <summary>
            Module courant dans la navigation (atteint ou à atteindre)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.moduleTraductionCode">
            <summary>
            Code texte du module courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.reachedModule">
            <summary>
            Précise si le module a déjà été atteint ou non depuis qu'il est choisi.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.lastReachedResultUrl">
            <summary>
            Adresse de la dernière page de résultat atteinte
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.currentTab">
            <summary>
            Onglet courant (util pour un module comprenant plusieurs onglets)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.customerLogin">
            <summary>
             Droits client
             </summary>
              <directed>True</directed>
              <supplierCardinality>1</supplierCardinality>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._company">
            <summary>
            Login company
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.downLoadDate">
            <summary>
            année de chargement pour les recaps
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.exportedPDFFileName">
            <summary>
            Nom du fichier PDF exporté
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.emailRecipient">
            <summary>
            Email des destinataires du fichier PDF à exporter
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.currentUniversMedia">
            <summary>
            Sélection courante de media de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.currentUniversProduct">
            <summary>
            Sélection courante de produits de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.currentUniversAdvertiser">
            <summary>
            Sélection courante d'annonceurs de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.selectionUniversMedia">
            <summary>
            Sélection original de media de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.selectionUniversProduct">
            <summary>
            Sélection original de produits de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.selectionUniversAdvertiser">
            <summary>
            Sélection original d'annonceurs de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.referenceUniversMedia">
            <summary>
            Sélection de media de l'univers referrence
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.referenceUniversProduct">
            <summary>
            Sélection de produits de l'univers reference
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.referenceUniversAdvertiser">
            <summary>
            Sélection d'annonceurs de l'univers referrence
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.competitorUniversMedia">
            <summary>
            HashTable pouvant contenir 5 sélections de media comme univers concurrent
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.competitorUniversProduct">
            <summary>
            HashTable pouvant contenir 5 sélections de produits comme univers concurrent
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.competitorUniversAdvertiser">
            <summary>
            HashTable pouvant contenir 5 sélections d'annonceurs comme univers concurrent
            La clé est un entier qui permet de connaître la position de l'univers
            La valeur est un objet de la classe CompetitorAdvertiser que l'on trouve dans le namespace TNS.AdExpress.Web.Common.Univers
            Il contient le nom de l'univers ainsi que l'arbre avec la liste des annonceurs
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.temporaryTreenode">
            <summary>
            Treenode temporaire
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.comparativeStudy">
            <summary>
            Etude comparative ou non 
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.customizedReferenceComcurrentElements">
            <summary>
            Indique si l'utilisateur veut personnaliser la sélection des éléments concurrents ou de référence
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.comparaisonCriterion">
            <summary>
            Indique si l'utilisateur veut effectuer une comparaison par rapport au total du marché ou au total d'une famille
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.currentUniversAEPMTarget">
            <summary>
            Sélection courante des cibles AEPM de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.selectionUniversAEPMTarget">
            <summary>
            Sélection originale des cibles AEPM de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.currentUniversAEPMWave">
            <summary>
            Sélection courante des vagues AEPM de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.selectionUniversAEPMWave">
            <summary>
            Sélection originale des vagues AEPM de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.currentUniversOJDWave">
            <summary>
            Sélection courante des vagues OJD de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.selectionUniversOJDWave">
            <summary>
            Sélection originale des vagues OJD de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.ecart">
            <summary>
            Ecart APPM
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._principalProductUniverses">
            <summary>
            Principal dictionary of  universe product selection
            </summary>				
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._secondaryProductUniverses">
            <summary>
            Secondary dictionary of universe product selection
            </summary>	
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._principalMediaUniverses">
            <summary>
            Principal dictionary of  universe media selection
            </summary>				
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._secondaryMediaUniverses">
            <summary>
            Secondary dictionary of universe media selection
            </summary>	
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._principalAdvertisingAgnecyUniverses">
            <summary>
            Principal dictionary of  universe advertising agnecy selection
            </summary>				
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._secondaryAdvertisingAgnecyUniverses">
            <summary>
            Secondary dictionary of universe advertising agnecy selection
            </summary>	
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.periodLength">
            <summary>
            Durée de la période (1 semaine, 5 mois, 2 ans...)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.periodBeginningDate">
            <summary>
            Date de début de la période
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.detailPeriodBeginningDate">
            <summary>
            Date de début du détail de la période  
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.publicationBeginningDate">
            <summary>
            Date de début de publication
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.periodEndDate">
            <summary>
            Date de fin de période
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.detailPeriodEndDate">
            <summary>
            Date de début du détail de la période  
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.publicationEndDate">
            <summary>
            Date de fin de publication
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.mediaAgencyFileYear">
            <summary>
            Année du fichier d'agence média
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.publicationDateType">
            <summary>
            Identifiant de type de date de parution
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.periodType">
            <summary>
            Identifiant de type de période
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.lastAvailableRecapMonth">
            <summary>
            Dernière période disponible dans l'analyse sectorielle
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.detailPeriod">
            <summary>
            Niveau de précision de la période (voir Constantes.cs)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.unit">
            <summary>
            Unité utilisé (€, spots...)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.percentage">
            <summary>
            Unité en pourcentage
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._percentageAlignment">
            <summary>
            Alignement du pourcentage (% horizontal ou % vertical)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._comparativePeriodType">
            <summary>
            Comparative Period Type : dateToDate, comparativeWeekDate
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._periodSelectionType">
            <summary>
            Period Selection Type : Period selection type : day to day or month to month
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._selectedBannersForamtList">
            <summary>
            Selected Banners Format List
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.sort">
            <summary>
            Index décrivant un identifiant ou un numéroe de colonne à trier.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.sortOrder">
            <summary>
            Ordre de tri ("desc" ou "asc")
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.preformatedMediaDetail">
            <summary>
            Détail préformaté de la nomenclature media dans les tableaux 
            !!! type encore à préciser
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.preformatedProductDetail">
            <summary>
            Détail préformaté de la nomenclature produit dans les tableaux 
            !!! type encore à préciser
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.preformatedPeriodDetail">
            <summary>
            Détail préformaté des périodes dans les tableaux 
            !!! type encore à préciser
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.preformatedTable">
            <summary>
            Préformatage des tableaux dynamiques 
            !!! type encore à préciser
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.pdm">
            <summary>
            Utilisation de la part de marché ou non
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.pdv">
            <summary>
            Utilisation de la part de voix ou non
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.evolution">
            <summary>
            Affichage de l'évolution de marché ou non
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.personalizedElementsOnly">
            <summary>
            Afficher uniquement les éléménts personnalisés (exemple : dans les tabelaux dynamiques, uniquemenent
            les éléments de réfénreces et cocurrents
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.autopromoEvaliant">
            <summary>
            Utilisation de l'auto-promo Evaliant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.graphics">
            <summary>
            Dans le cas de résultat disponibles sous formes de tableaux ou de graphiques, indique si on doit affiocher le graphique
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.insert">
            <summary>
            Pour la presse Encarts (Total, Encarts, Hors Encarts)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.newProduct">
            <summary>
            Nouveau produit
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.productDetailLevel">
            <summary>
            Niveau de détail produit
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.mediaDetailLevel">
            <summary>
            Niveau de détail Média
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.format">
            <summary>
            Format de spots
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.namedDay">
            <summary>
            Jour Nommé
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.timeInterval">
            <summary>
            Tranche horaire
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.visuals">
            <summary>
            Liste des visuels
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._idSlogans">
            <summary>
            Liste destinée à contenir les identifiants accroches de personnalisation dans les plans médias
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._sloganColors">
            <summary>
            Hashtable contenant une liste d'accroches en clés et des couleurs associées en valeurs
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._unitWeighting">
            <summary>
            Pondération des unités
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._campaignType">
            <summary>
            Campaign Type
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._dateToDateComparativeWeek">
            <summary>
            Date to Date comparative week
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._genericProductDetailLevel">
            <summary>
             Niveau de détail orienté produit
             </summary>
              <label>_genericDetailLevelType</label>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._genericMediaDetailLevel">
            <summary>
             Niveau de détail orienté media
             </summary>
              <remarks>
             Il peut contenir des produits pour les plans media
             </remarks>
              <label>_genericMediaDetailLevel</label>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._genericMediaSelectionDetailLevel">
            <summary>
             Niveau de détail orienté selection media
             </summary>       
              <label>_genericMediaSelectionDetailLevel</label>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._genericAdNetTrackDetailLevel">
            <summary>
             AdNetTrack Detail levels
             </summary>
              <remarks>
             It can contain media or product detail levels
             </remarks>
              <label>_genericAdNetTrackDetailLevel</label>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._genericDetailLevel">
            <summary>
             Niveau de détail générique
             </summary>
              <label>_genericDetailLevel</label>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._genericColumnDetailLevel">
            <summary>
             Niveau de détail colonne générique
             </summary>
              <label>_genericColumnDetailLevel</label>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._genericColumns">
            <summary>
            Colonnes génériques
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._genericCreativesColumns">
            <summary>
            Colonnes génériques
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._mediaSelectionParent">
            <summary>
            Media Selection Parent
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._customerPeriod">
            <summary>
            Période sélectionnée à partir de GlobalDateSelection
            </summary>
            <label>_customerPeriod</label>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._selectionUniversProgramType">
            <summary>
            Sélection original des genres d'émissions de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._currentUniversProgramType">
            <summary>
            Sélection courante des genres d'émissions de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._selectionUniversSponsorshipForm">
            <summary>
            Sélection original des formes de parrainages de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._currentUniversSponsorshipForm">
            <summary>
            Sélection courante des formes de parrainages de l'univers courant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._adNetTrackSelection">
            <summary>
            AdNetTrack Selection
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession.userParameters">
            <summary>
            Contient les nouvelles variables sessions
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._customerDataFilters">
            <summary>
            Customer data filters
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.WebSession._personnalizedLevel">
            <summary>
            Default promotion Personnalized level
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.#ctor(TNS.AdExpress.Right)">
            <summary>
            Constructeur de la classe session
            </summary>
            <param name="login">Ensemble des droit du client connecté</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.Save">
            <summary>
            Méthode qui sauvegarde l'objet webSession courant dans la table de sauvegarde des sessions
            	Ouverture de la BD
            	Sérialisation en mémoire
            	Requête BD de sauvegarde dnas un Blob
            	Libération des ressources
            </summary>
            <exception cref="T:TNS.AdExpress.Web.Core.Exceptions.WebSessionException">
            Lancée dans les cas suivant:
            	connection à la BD impossible à ouvrir
            	problème à la sértialisation ou à la sauvegarde de l'objet dans la BD
            	impossible de libérer les ressources
            </exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.Load(System.String)">
            <summary>
            Méthode pour la récupération et la "deserialization" d'un objet WebSession à partir du champ BLOB de la table des sessions
            	Ouverture de la BD
            	Requête BD de sélection d'un un Blob
            	Désérialisation
            	Libération des ressources
            </summary>
            <returns>Retourne l'objet récupéré ou null si il y a eu un problème non géré</returns>
            <param name="idWebSession">Identifiant de la session</param>
            <exception cref="T:TNS.AdExpress.Web.Core.Exceptions.WebSessionException">
            Lancée dans les cas suivant:
            	connection à la BD impossible à ouvrir
            	problème à la sélection de l'enregistrement ou à la désérialisation
            	impossible de libérer les ressources
            </exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.GetSelection(System.Windows.Forms.TreeNode,TNS.AdExpress.Constantes.Customer.Right.type)">
            <summary>
            Get l'ensemble des éléments de l'univers vérifiant certaines caractéristiques de nomenclature sous forme de chaine de caractères.
            Les éléments sont séparés par des virgules.
            </summary>
            <param name="univers">Univers à parcourir</param>
            <param name="level">Niveau et type de nomenclature considéré</param>
            <returns>Chaîne de caractère contenant la liste </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.constructList(System.String@,System.Windows.Forms.TreeNode,TNS.AdExpress.Constantes.Customer.Right.type)">
            <summary>
            Get l'ensemble des éléments de l'univers vérifiant certaines caractéristiques de nomenclature sous forme de chaine de caractères.
            Méthode récursive qui parcoure chaque niveau de chaque branch d'un treenode
            	Extraction du niveau de recherche
            	Extraction du niveau courant
            	Si les niveaux sont différents, on descend d'un niveau dans la branche courante si il y a des fils
            	Sinon, on teste si le type d'accès est bien le même (acces ou exception) et (si e niveau a bien été sélectionné ou si le niveau n'as pas de fils).
            		si c le cas, on ajoute le nom du niveau a la liste des niveaux qui vérifient toutes ces conditions
            </summary>
            <param name="list">Chaine de caractère à remplir</param>
            <param name="univers">Univers à parcourir</param>
            <param name="level">Niveau et type de nomenclature considéré à rechercher</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isDatesSelected">
            <summary>
            Indique si les dates ont été sélectionnées
            </summary>
            <returns>True si les date de début et de fin ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isStudyPeriodSelected">
            <summary>
            Indique si une période d'étude existe
            </summary>
            <returns>True si les date de début et de fin de customerPeriod ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isPeriodComparative">
            <summary>
            Indique si une période comparative existe
            </summary>
            <returns>True si les date de début (comparative) et de fin (comparative) de customerPeriod ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isComparativePeriodTypeSelected">
            <summary>
            Indique si un type de période comparative est utilisé
            </summary>
            <returns>True si les date de début (comparative) et de fin (comparative) de customerPeriod ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isPeriodDisponibilityTypeSelected">
            <summary>
            Indique si un type de disponibilité des données est utilisé
            </summary>
            <returns>True si les date de début (comparative) et de fin (comparative) de customerPeriod ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.IsProfessionSelected">
            <summary>
            Indicate if Profesion has been selected
            </summary>
            <returns>True Profesion has been selected</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isAdvertisersSelected">
            <summary>
            Indique si des annonceurs ont été sélectionnés
            </summary>
            <returns>True si des annonceurs ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isCurrentAdvertisersSelected">
            <summary>
            Indique si des annonceurs ont été sélectionnés
            </summary>
            <returns>True si des annonceurs ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isReferenceAdvertisersSelected">
            <summary>
            Indique si des annonceurs ont été sélectionnés dans références
            </summary>
            <returns>True si des annonceurs ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isCompetitorAdvertiserSelected">
            <summary>
            Indique si des annonceurs ont été sélectionnés dans l'arbre CompetitorUniversAdvertiser
            </summary>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.advertiserUniversNumber">
            <summary>
            Retourne le nombre d'univers annonceurs sélectionné
            </summary>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isAdvertisingAgencySelected">
            <summary>
            Return if an advertising agency univers is selected
            </summary>
            <returns>True if an advertising agency univers is selected</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isVehicleSelected">
            <summary>
            Indique si un vehicle a été sélectionnés
            </summary>
            <returns>True si un vehicle été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isMediaSelected">
            <summary>
            Indique si des médias ont été sélectionnés
            </summary>
            <returns>True si des médias ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isCompetitorMediaSelected">
            <summary>
            Indique si des médias ont été sélectionés dans compétitorUniversMedia
            </summary>
            <returns></returns>	
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isReferenceMediaSelected">
            <summary>
            Indique si des médias dans reférénceMedia ont été sélectionnés
            </summary>
            <returns>True si des médias ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.mediaUniversNumber">
            <summary>
            Retourne le nombre d'univers media sélectionné
            </summary>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.IsPrincipalMediaUniversesSelected">
            <summary>
            Indique si des supports ont été sélectionnés
            </summary>
            <returns>True si des supports ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.IsWaveSelected">
            <summary>
            Indique si des vagues ont été sélectionnés
            </summary>
            <returns>True si des vagues ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.IsTargetSelected">
            <summary>
            Indique si des cibles ont été sélectionnées
            </summary>
            <returns>True si des cibles ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.IsCurrentUniversProgramTypeSelected">
            <summary>
            Indique si des genres d'émissions ont été sélectionnés
            </summary>
            <returns>True si des genres d'émissions ont été enregistrés, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.IsCurrentUniversSponsorshipFormSelected">
            <summary>
            Indique si des formes de parrainage ont été sélectionnées
            </summary>
            <returns>True si des formes de parrainage ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.isSelectionProductSelected">
            <summary>
            Indique si des produits ont été sélectionnés
            </summary>
            <returns>True si des produits ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.IsCurrentUniversProductSelected">
            <summary>
            Indique si des produits ont été sélectionnés
            </summary>
            <returns>True si des produits ont été enregistrées, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.productUniversNumber">
            <summary>
            Retourne le nombre d'univers produit sélectionné
            </summary>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.IsAdvertisementTypeUniverseSelected">
            <summary>
            Check if Advertisement Type Universe is Selected
            </summary>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.CheckUnivers(System.String)">
            <summary>
            Check if a univers is selected via a call to a specified method
            </summary>
            <param name="method">Method to call</param>
            <returns>The result of the called method or false in any case of error</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.OnNewConnection(System.String)">
            <summary>
            Insère l'évènement nouvelle connexion dans le tracking system
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.OnSetModule">
            <summary>
            Insère l'évènement nouveau module sélectionné dans le tracking system
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.OnSetVehicle(System.Int64)">
            <summary>
            Insère l'évènement nouveau media sélectionné dans le tracking system
            </summary>
            <param name="vehicleId">Identifiant du media (Vehicle)</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.OnUseGad">
            <summary>
            Insère l'évènement Gad utilisé dans le tracking system
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.OnSetMediaAgencyInGenericDetailLevel(TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Insère l'évènement agence media sélectionnée dans le tracking system
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.OnSetMediaAgency">
            <summary>
            Insère l'évènement agence media sélectionnée dans le tracking system
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.OnSetPeriodType">
            <summary>
            Insère l'évènement type de période sélectionné dans le tracking system
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.OnSetUnit">
            <summary>
            Insère l'évènement type d'unité sélectionné dans le tracking system
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.OnSetResult">
            <summary>
            Insère l'évènement nouveau résultat sélectionnée dans le tracking system
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.OnUseFileExport">
            <summary>
            Insère l'évènement utilisation d'un export dans le tracking system
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.OnUseMyAdExpressSave">
            <summary>
            Insère l'évènement sauvegarde d'un résultat dans le tracking system
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.GetUnitLabelId">
            <summary>
            Obtient l'identifiant du texte correspondant à l'unité sélectionné par la client
            </summary>
            <returns>Identifiant du texte</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.GetCellUnitFactory">
            <summary>
            CellUnitfactory according to the unit chosen by customer acquires
            </summary>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.GetValidUnitForResult">
            <summary>
            Get Valid Unit List for current result
            </summary>
            <returns>Valid Unit List for current result</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.GetSelectedUnit">
            <summary>
            Get selected unit information
            </summary>
            <returns>Selected unit information</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.GetValidCampaignTypeForResult">
            <summary>
            Get Valid Campaign type List for current result
            </summary>
            <returns>Valid Campaign type List for current result</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.GetDefaultCampaignType">
            <summary>
            Get Default Campaign type for current result
            </summary>
            <returns>Default Campaign type for current result</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.GetVehiclesSelected">
            <summary>
            Get Vehicles Selected
            </summary>
            <returns>Vehicles Selected</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.GetValidFormatList(System.Collections.Generic.Dictionary{System.Int64,TNS.AdExpress.Domain.Classification.VehicleInformation})">
            <summary>
            Get Common Valid Format List
            </summary>
            <param name="vehicleInformationList">Vehicle Information List</param>
            <returns>Common Valid Format List</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.GetValidFormatSelectedList(System.Collections.Generic.List{TNS.AdExpress.Domain.Classification.VehicleInformation})">
            <summary>
            Get Valid Format List
            </summary>
            <param name="vehicleInformationList">Vehicle Information List</param>
            <returns>Valid Format List</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.GetValidFormatSelectedList(System.Collections.Generic.Dictionary{System.Int64,TNS.AdExpress.Domain.Classification.VehicleInformation})">
            <summary>
            Get Valid Format List
            </summary>
            <param name="vehicleInformationList">Vehicle Information List</param>
            <returns>Valid Format List</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.GetValidFormatSelectedList(System.Collections.Generic.Dictionary{System.Int64,TNS.AdExpress.Domain.Classification.VehicleInformation},System.Boolean)">
            <summary>
            Get Valid Format List
            </summary>
            <param name="vehicleInformationList">Vehicle Information List</param>
            <param name="returnAlwaysValues">
            If value is true : return empty list only if no vehicle is defined in selection 
            If value is false : return empty list when if no vehicle is defined in selection OR if the table banners contains all format selected
            </param>
            <returns>Valid Format List</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.GetLevelListId(System.Collections.Generic.Dictionary{System.Int32,TNS.AdExpress.Classification.AdExpressUniverse})">
            <summary>
            Get universe level list Id
            </summary>
            <param name="universes">Universes</param>
            <remarks>Each Id is unique in the list</remarks>		
            <returns>level List Id</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.SetDates(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type)">
            <summary>
            Set Vp renault Date
            </summary>
            <param name="periodType">Period Type</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.WebSession.SetDates(System.DateTime,System.DateTime)">
            <summary>
            Set Vp renault Date
            </summary>
            <param name="dateBegin">Period Type</param>
            <param name="periodEnd">periodEnd</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.Source">
            <summary>
            Accès aux données de la Base de données
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.IdSession">
            <summary>
            Get/Set Identifiant de session
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SiteLanguage">
            <summary>
            Obtient ou définit la langue choisie par l'utilisateur
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.DataLanguage">
            <summary>
            Get data language
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.BeginningDate">
            <summary>
            Get Date de début de la session (date de connexion)
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.ModificationDate">
            <summary>
            Get Date de dernère modification de la session
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.DownLoadDate">
            <summary>
            Get/Set Année de chargement pour les recaps
            </summary>	
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PeriodLength">
            <summary>
            Get/Set Durée de la période (1 semaine, 5 mois, 2 ans...)
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PeriodBeginningDate">
            <summary>
            Get/Set Date de début de la période AU FORMAT yyyy/mm/dd
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.DetailPeriodBeginningDate">
            <summary>
            Get/Set Date de début du détail de la période AU FORMAT yyyy/mm/dd
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PublicationBeginningDate">
            <summary>
            Get/Set Date de début de publication AU FORMAT yyyy/mm/dd
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.MediaAgencyFileYear">
            <summary>
            Get/Set Année du fichier d'agences média
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PeriodEndDate">
            <summary>
            Get/Set Date de fin de période AU FORMAT yyyy/mm/dd
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PublicationEndDate">
            <summary>
            Get/Set Date de fin de publication AU FORMAT yyyy/mm/dd
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.DetailPeriodEndDate">
            <summary>
            Get/Set Date de fin du détail de la période AU FORMAT yyyy/mm/dd
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PeriodType">
            <summary>
            Get/Set Identifiant de type de période
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PublicationDateType">
            <summary>
            Get/Set Identifiant de type de date de publication
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.LastAvailableRecapMonth">
            <summary>
            Get/Set date correspondant au dernier mois dispo dans la base des recap
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CustomerDataFilters">
            <summary>
            Get customer data filters
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CurrentModule">
            <summary>
            Get/Set Module courant dans la navigation (atteint ou à atteindre)
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.ModuleTraductionCode">
            <summary>
            Get/Set Module courant dans la navigation (atteint ou à atteindre)
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.ReachedModule">
            <summary>
            Get/Set reachedModule qui indique si le module courant a déjà été atteint depuis sa sélection.
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.LastReachedResultUrl">
            <summary>
            Get/Set l'adresse de la dernière page de résultat atteinte
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CurrentTab">
            <summary>
            Get/Set Onglet courant (util pour un module comprenant plusieurs onglets)
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CustomerLogin">
            <summary>
            Get Droits client
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.LoginCompany">
            <summary>
            Get company Information
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.ExportedPDFFileName">
            <summary>
            Get/Set nom du fichier pdf exporté
            </summary>	
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.EmailRecipient">
            <summary>
            Get/Set email(s) de(s( destinataire(s) du fichier pdf à exporter
            </summary>	
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CurrentUniversMedia">
            <summary>
            Get/Set sélection de media de l'univers courant
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CurrentUniversProduct">
            <summary>
            Get/Set Sélection de produit de l'univers courant
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CurrentUniversAdvertiser">
            <summary>
            Get/Set Sélection d'annonceurs de l'univers courant
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SelectionUniversMedia">
            <summary>
            Get/Set sélection de media de l'univers courant
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SelectionUniversProduct">
            <summary>
            Get/Set Sélection de produit de l'univers courant
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SelectionUniversAdvertiser">
            <summary>
            Get/Set Sélection d'annonceurs de l'univers courant
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.ReferenceUniversMedia">
            <summary>
            Get/Set sélection de media de l'univers de reference
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.ReferenceUniversProduct">
            <summary>
            Get/Set Sélection de produit de l'univers de reference
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.ReferenceUniversAdvertiser">
            <summary>
            Get/Set Sélection d'annonceurs de l'univers de reference
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CompetitorUniversMedia">
            <summary>
            Get/Set sélection de media de l'univers competiteur
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CompetitorUniversProduct">
            <summary>
            Get/Set Sélection de produit de l'univers competiteur
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CompetitorUniversAdvertiser">
            <summary>
            Get/Set Sélection d'annonceurs de l'univers competiteur
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.TemporaryTreenode">
            <summary>
            Get/Set treenode temporaire
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CustomizedReferenceComcurrentElements">
            <summary>
            Get/Set la personnalisation des éléments concurrents et de référence
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.ComparaisonCriterion">
            <summary>
            Get/Set Criteria of total computing market , sector or working set
            </summary>			
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.ComparativeStudy">
            <summary>
            Get/Set if can realized a comparative study
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CurrentUniversAEPMTarget">
            <summary>
            Sélection courante des cibles AEPM de l'univers courant
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SelectionUniversAEPMTarget">
            <summary>
            Sélection originale des cibles AEPM de l'univers courant
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CurrentUniversAEPMWave">
            <summary>
            Sélection courante des vagues AEPM de l'univers courant
            </summary>	
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SelectionUniversAEPMWave">
            <summary>
            Sélection originale des vagues AEPM de l'univers courant
            </summary>	
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CurrentUniversOJDWave">
            <summary>
            Sélection courante des vagues OJD de l'univers courant
            </summary>		
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SelectionUniversOJDWave">
            <summary>
            Sélection originale des vagues OJD de l'univers courant
            </summary>		
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PrincipalProductUniverses">
             <summary>
            Get/Set Principal dictionary of  universe product selection
             </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SecondaryProductUniverses">
             <summary>
            Get/Set secondary dictionary of  universe product selection
             </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PrincipalMediaUniverses">
             <summary>
            Get/Set Principal dictionary of  universe media selection
             </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SecondaryMediaUniverses">
             <summary>
            Get/Set secondary dictionary of  universe media selection
             </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PrincipalAdvertisingAgnecyUniverses">
             <summary>
            Get/Set Principal dictionary of  universe advertising agnecy selection
             </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SecondaryAdvertisingAgnecyUniverses">
             <summary>
            Get/Set secondary dictionary of  universe advertising agnecy selection
             </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PrincipalProfessionUniverses">
             <summary>
            Get/Set Principal dictionary of  universe profession selection
             </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.AdvertisementTypeUniverses">
             <summary>
            Get/Set  dictionary of  universe Advertisement Type selection
             </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.Ecart">
            <summary>
            Obtient ou définit Ecart
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.DetailPeriod">
            <summary>
            Get/Set Niveau de detail de la période (voir Constantes.cs)
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.Unit">
            <summary>
            Get/Set Unité utilisé (€, spots...)
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.Sort">
            <summary>
            Get/Set Index utilisé pour trier les résultats d'un tableau
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SortOrder">
            <summary>
            Get/Set Ordre de tri : "desc", "asc", "" pour none (util pour les requêtes BDD)
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.Sorting">
            <summary>
            Get/Set la clé de tri des résultats
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SortKey">
            <summary>
            Get/Set La clé de tri des résultats
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.Percentage">
            <summary>
            Get/Set résultats exprimés en pourcentage
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PercentageAlignment">
            <summary>
            Obtient et définit le type d'aligement des résultats en pourcentages
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.ComparativePeriodType">
            <summary>
            Get or Set the Comparative Period Type
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.IsRetailerDisplay">
            <summary>
            Get or Set Is Select Retailer Display
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.IsSelectRetailerDisplay">
            <summary>
            Get or Set Is Select Retailer Display
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PeriodSelectionType">
            <summary>
            Get or Set the Period Selection Type
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SelectedBannersFormatList">
            <summary>
            Get or Set Selected Banners Foramt List
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PreformatedMediaDetail">
            <summary>
            Get/Set le détail préformaté de la nomenclature media dans les tableaux 
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PreformatedProductDetail">
            <summary>
            Get/Set le détail préformaté de la nomenclature produit dans les tableaux 
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PreformatedPeriodDetail">
            <summary>
            Get/Set le détail préformaté des périodes dans les tableaux 
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PreformatedTable">
            <summary>
            Get/Set le préformatage des tableaux dynamiques 
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PDM">
            <summary>
            Get/Set PDM qui indique si on utilise la part de marché ou non 
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.DateToDateComparativeWeek">
            <summary>
            Get \Set Date to Date comparative week
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PDV">
            <summary>
            Get/Set PDV qui indique si on utilise la part de voix ou non 
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.Evolution">
            <summary>
            Get/Set Evolution qui indique si on indique une évolution (quelconque) ou non 
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PersonalizedElementsOnly">
            <summary>
            Get/Set l'affichage uniquement des éléménts personnalisés (exemple : dans les tabelaux dynamiques, 
            uniquemenent les éléments de références et cocurrents
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.AutopromoEvaliant">
            <summary>
            Get/Set AutopromoEvaliant qui indique si on utilise l'auto-promo ou non pour Evaliant
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.Graphics">
            <summary>
            Get/Set l'affichage uniquement des éléménts personnalisés (exemple : dans les tableaux dynamiques, 
            uniquemenent les éléments de références et cocurrents
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.Insert">
            <summary>
            Obtient/définit le type d'encart (Total, hors Encarts, Encarts)
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.NewProduct">
            <summary>
            Obtient/définit le type de nouveau produit
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.ProductDetailLevel">
            <summary>
            Obtient/définit le type de nouveau produit
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.MediaDetailLevel">
            <summary>
            Obtient/définit le type de nouveau produit
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.Format">
            <summary>
            Obtient /définit le format spot
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.NamedDay">
            <summary>
            Obtient/définit le jour nommé
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.TimeInterval">
            <summary>
            Obtient/définit la tranche horaire
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SloganIdZoom">
            <summary>
            Obtient ou définit la version pour faire un zoom
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.Visuals">
            <summary>
            Liste des visuels
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.IdPromotion">
            <summary>
            Obtient ou définit l'identifiant de la Promotion
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.IdSlogans">
            <summary>
            Liste destinée à contenir les identifiants accroches de personnalisation dans les plans médias
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SloganIdList">
            <summary>
            Obtient la liste des identifiants accroches de personnalisation dans les plans médias
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SloganColors">
            <summary>
            Hashtable contenant une liste d'accroches en clés et des couleurs associées en valeurs
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.AdNetTrackSelection">
            <summary>
            Get AdNetTrack Selection for media schedule
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.DetailLevel">
            <summary>
            Obtient et définit le niveau de détail générique
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.GenericProductDetailLevel">
            <summary>
            Obtient et définit le niveau de détail orienté produit
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.GenericMediaDetailLevel">
            <summary>
            Obtient et définit le niveau de détail orienté Media
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.GenericMediaSelectionDetailLevel">
            <summary>
            Obtient et définit le niveau de détail orienté Media
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.GenericAdNetTrackDetailLevel">
            <summary>
            Get/ Set AdNetTrack Detail Levels
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.GenericColumnDetailLevel">
            <summary>
            Obtient et définit le niveau de détail colonne générique
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.GenericInsertionColumns">
            <summary>
            Obtient et définit les colonnes du détail des insertions
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.GenericCreativesColumns">
            <summary>
            Obtient et définit les colonnes du détail des créations
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.MediaSelectionParent">
            <summary>
            GET / SET Media Selection Parent
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CustomerPeriodSelected">
            <summary>
            Obtient ou définit la période sélectionnée
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SelectionUniversProgramType">
            <summary>
            Obtient et définit la sélection original des genres d'émissions de l'univers courant
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CurrentUniversProgramType">
            <summary>
            Obtient et définit la sélection courante des genres d'émissions de l'univers courant
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SelectionUniversSponsorshipForm">
            <summary>
            Obtient et définit la sélection original des formes de parrainages de l'univers courant
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CurrentUniversSponsorshipForm">
            <summary>
            Obtient et définit la sélection courante des genres d'émissions de l'univers courant
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.UnitWeighting">
            <summary>
            Pondération des unités
            Valeur par défaut: use=false;value=1.0;displayName=""
            </summary>
            <remarks>Utilise la table de paramètres dynamique userParameters</remarks>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.PersonnalizedLevel">
            <summary>
            GET / SET promotion Personnalized level
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.UserParameters">
            <summary>
            Contient les nouvelles variables de session
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.Browser">
            <summary>
            Get/Set navigator informations
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.BrowserVersion">
            <summary>
            Get/Set navigator informations version
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.UserAgent">
            <summary>
            Get/Set navigator user agent version
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CustomerOs">
            <summary>
            Get/Set navigator user agent version
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CustomerIp">
            <summary>
            Get/Set navigator user agent version
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.LastWebPage">
            <summary>
            Get/Set last url set un WebPage (AdExpress base page) use for customer error
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.ServerName">
            <summary>
            Get/Set server name
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.DomainName">
            <summary>
            Get/Set domain name
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CampaignType">
            <summary>
            Get \Set Campaign Type 
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SelectedPresenceTypes">
            <summary>
            Get Presence types selected
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SelectedLocations">
            <summary>
            Get Locations selected
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.SelectedLevelsValue">
            <summary>
            Get/Set Selected Levels Value
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.CreativesExportOptions">
            <summary>
            Get \Set Campaign Type 
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.WebSession.IsExcluWeb">
            <summary>
            Get / Set Exclu Web
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Sessions.Weighting">
            <summary>
            Effectue les pondérations entre unités.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.Weighting._use">
            <summary>
            vrai si pondération utilisée
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.Weighting._value">
            <summary>
            ratio
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Sessions.Weighting._displayName">
            <summary>
            libellé de l'unité
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Sessions.Weighting.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.Weighting.Use">
            <summary>
            vrai si pondération utilisée
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.Weighting.Value">
            <summary>
             ratio
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Sessions.Weighting.DisplayName">
            <summary>
             ratio
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Result.SponsorshipShowLinkRules._webSession">
            <summary>
            Session du client
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.SponsorshipShowLinkRules.#ctor(TNS.FrameWork.WebResultUI.CellLevel,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.Level.GenericDetailLevel)">
            <summary>
            Constructeur
            </summary>
            <param name="cellLevel">Cellule du niveau qui a été cliqué</param>
            <param name="webSession">Session du client</param>
            <param name="genericDetailLevel">Niveau de détail générique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Result.SponsorshipShowLinkRules.ShowLink">
            <summary>
            Indique si le lien doit être montrée dans la Cellule
            </summary>
            <returns>True s'il doit être montré, false sinon</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.SourceProvider">
            <summary>
            Provides data source object to execute SQL queries
            
            The mehod <code>GetSource()</code> return  a object of type IDataSource which allow to execute SQL query
            on database of website's current country. For example in France the source will be an Oracle database, but an SQL database in Russia.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.SourceProvider._session">
            <summary>
            Client session
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.SourceProvider.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructor
            </summary>
            <param name="session">Client session</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.SourceProvider.GetSource">
            <summary>
            Get data source for AdExpress website's current country
            </summary>
            <returns>Data source</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Utilities.CheckedText">
            <summary>
            Classe de tests sur des textes
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.CheckedText.CheckedProductText(System.String)">
            <summary>
            Vérifie la cohérence du texte :
            Texte accepté : texte contenant seulement des chiffres, les lettres de l'alphabet
            où @
            </summary>
            <param name="text">Texte Source</param>
            <returns>True si le texte suit la syntaxe, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.CheckedText.NewText(System.String)">
            <summary>
            Remplace les caractères suivants :
            '," par un espace
            ç par c, é è ê par e, à â par a, ô par o et ù par u
            </summary>
            <param name="text">Texte Source</param>
            <returns>Chaîne traitée</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.CheckedText.CheckedAccentText(System.String)">
            <summary>
            Remplace le caractère suivant nécessaire au bon fonctionnement de la requête :
            ' par ''
            </summary>
            <param name="text">Texte Source</param>
            <returns>Chaîne traitée</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.CheckedText.IsNotEmpty(System.String)">
             <summary>
            Verifie si une chaine de caractere est non vide ou non null		
             </summary>
             <param name="InString">Texte Source</param>
             <returns>True si la chaîne est non vide ou non null, false sinon</returns>		
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.CheckedText.CheckedMailText(System.String)">
            <summary>
            Verifie si une adresse mail est correcte ou pas
            </summary>
            <param name="mail">l'adresse mail</param>
            <returns>True si l'adresse mail est correcte, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.CheckedText.CheckedMailText(System.String[])">
            <summary>
            Vérifie si un tableau d'adresses email est correct ou pas
            </summary>
            <param name="emails">Le tableau d'adresses email</param>
            <returns>True si l'adresse mail est correcte, false sinon</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Utilities.DataAdapter">
            <summary>
            Data Adapter
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Utilities.Dates">
            <summary>
            Set of function usefull to treat periods
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.getPeriodLabel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
             Get Period label in product class analysis depending on selected year
            </summary>
            <param name="_session">User session</param>
            <param name="beginPeriod">Begin Period</param>
            <param name="endPeriod">End Period</param>
            <returns>Label describing period in Product Class Analysis depending on selected year</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.getPeriodLabelComparative(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
             Get Period label in product class analysis depending on selected year
            </summary>
            <param name="_session">User session</param>
            <param name="beginPeriod">Begin Period</param>
            <param name="endPeriod">End Period</param>
            <returns>Label describing period in Product Class Analysis depending on selected year</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.getPeriodDate(System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Extract period DateTime from string
            </summary>
            <param name="period">Studied period</param>
            <param name="displayLevel">Type of period</param>
            <returns>Begin of the period</returns>
            <remarks>
            Use class:
            	public TNS.FrameWork.Date.AtomicPeriodWeek
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.getPeriodBeginningDate(System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type)">
            <summary>
            Extract begin of a period from period and type of period
            </summary>
            <param name="period">Studied period</param>
            <param name="periodType">Type of period</param>
            <returns>Begin of the period</returns>
            <remarks>
            Use class:
            	public TNS.FrameWork.Date.AtomicPeriodWeek
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.getPeriodEndDate(System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type)">
            <summary>
            Extract period end
            </summary>
            <param name="period">Period to study</param>
            <param name="periodType">Type of period</param>
            <returns>End of the period</returns>
            <remarks>
            Uses TNS.FrameWork.Date.AtomicPeriodWeek
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.getPeriodEndDate(System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type,System.Boolean)">
            <summary>
            Extract period end
            </summary>
            <param name="period">Period to study</param>
            <param name="periodType">Type of period</param>
            <param name="comparative">Comparative</param>
            <returns>End of the period</returns>
            <remarks>
            Uses TNS.FrameWork.Date.AtomicPeriodWeek
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.GetYearSelected(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String@,System.Int32@,System.DateTime)">
            <summary>
            Get ID of the selected year : 0==N , 1==N-1,2==N-2
            </summary>
            <param name="session">User session</param>
            <param name="yearStr">(out) year ID as string ("", "1", "2")</param>
            <param name="idYear">(out) Id of year</param>
            <param name="period">Begin of the period</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.yearID(System.DateTime,TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
             Get year : 0==N , 1==N-1,2==N-2
             </summary>
             <param name="period">DateTime</param>		
            <param name="session">User Session</param>
             <returns>ID</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.CurrentActiveMonth(System.DateTime,TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
             Get last month of the selected period in product class analysis
             </summary>
             <param name="period">Period to study</param>
            <param name="session">User Session</param>
             <returns>Month</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.GetMonthAlias(System.Int32,System.Int32,System.Int32,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Get Label of the month as MMMYY
            </summary>
            <param name="monthNumber">Month ID (01 - 12)</param>
            <param name="YearSelected">Selected Year</param>
            <param name="numberOfChar">Number of characters in label (2-->MMYY, 4-->MMMMYY)</param>
            <param name="session">User session</param>
            <returns>Label of the month as MMMYY</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.GetDateFromAlias(System.String)">
            <summary>
            Get date from alias MMMYY
            </summary>
            <param name="DateAlias">Date alias</param>		
            <returns>Date</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.GetMonthLabel(System.Int32,System.Int32)">
            <summary>
            Retourne month label matching the language
            </summary>
            <param name="month">Month to translate</param>
            <param name="language">Translation language</param>
            <returns>Month Label</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.DateToString(System.DateTime,System.Int32)">
            <summary>
            Get date string dd MM YYYY  acording to culture information
            </summary>
            <param name="date">Date to fromat</param>
            <param name="language">Site langage </param>
            <returns>dd/MM/YYYY ou MM/dd/YYYY or MM.dd.YYYY etc</returns>
            <remarks>Warning : The '/' caractere define to xml can change with culture of Operating System</remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.DateToString(System.DateTime,System.Int32,TNS.AdExpress.Constantes.FrameWork.Dates.Pattern)">
            <summary>
            Get date string acording to culture information
            </summary>
            <param name="date">Date to fromat</param>
            <param name="language">Site langage </param>
            <param name="dateFormat">Date format</param>
            <returns>dd/MM/YYYY ou MM/dd/YYYY or MM.dd.YYYY etc</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.YYYYMMDDToDD_MM_YYYY(System.String,System.Int32)">
            <summary>
            Transforme une date sous la forme YYYYMMDD en DD/MM/YYYY ou MM/DD/YYYY suivant la langue
            </summary>
            <param name="date">Date à convertir</param>
            <param name="language">Identifiant de la langue</param>
            <returns>Date convertie</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.GetPreviousYearDate(System.DateTime,TNS.AdExpress.Constantes.Web.globalCalendar.comparativePeriodType)">
            <summary>
            Obtient la date de l'année précédente
            </summary>
            <param name="date">date de l'année en cours</param>
            <param name="comparativePeriodType">Type de la période comparative</param>
            <returns>date de l'année précédente</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.GetNextYearDate(System.DateTime,TNS.AdExpress.Constantes.Web.globalCalendar.comparativePeriodType)">
            <summary>
            Obtient la date de l'année prochaine
            </summary>
            <param name="date">date de l'année en cours</param>
            <param name="comparativePeriodType">Type de la période comparative</param>
            <returns>date de l'année prochaine</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Dates.GetMonthFromWeek(System.Int32,System.Int32)">
            <summary>
            Détermine à quel mois appartient la semaine
            </summary>
            <param name="week">Numéro de semaine</param>
            <returns>Mois de la semaine</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Utilities.ExtendedHashTable">
            <summary>
            ExtendedHashTable permet d'imbriquer plusieurs niveaux de HashTable
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Utilities.ExtendedHashTable._currentValue">
            <summary>
            Valeur du niveau courant
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ExtendedHashTable.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ExtendedHashTable.#ctor(System.Double)">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ExtendedHashTable.Add(System.Double,System.String)">
            <summary>
            Permet d'ajouter une node au niveau 0 avec la clé Key
            </summary>
            <param name="Value">Valeur</param>
            <param name="Key">Clé</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ExtendedHashTable.Add(System.Double,System.String,System.String)">
            <summary>
            Permet d'ajouter une node au niveau 1, sous la clé ParentKey avec la clé childKey
            </summary>
            <param name="Value">Valeur</param>
            <param name="ParentKey">Clé Parente</param>
            <param name="ChildKey">Clé</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ExtendedHashTable.Add(System.Double,System.String[])">
            <summary>
            Permet d'ajouter une node de valeur Value au niveau Keys.Length, sous les clés Keys[]
            </summary>
            <param name="Value">Valeur</param>
            <param name="Keys">Tableau des clés</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ExtendedHashTable.GetValue(System.String)">
             <summary>
             Permet d'obtenir la valeur d'une node Key
             </summary>
            <param name="Key">Clé</param>
             <returns>Valeur</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ExtendedHashTable.GetValue(System.String,System.String)">
             <summary>
             Permet d'obtenir la valeur de la node enfants childKey dans la node ParentKey
             </summary>
            <param name="ParentKey">Clé parente</param>
            <param name="ChildKey">Clé fille</param>
             <returns>Valeur</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ExtendedHashTable.GetValue(System.String[])">
             <summary>
             Permet d'obtenir la valeur d'un node situé au bout du chemn composé par les clés Keys
             </summary>
            <param name="Keys">Liste des clés</param>
             <returns></returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Utilities.ExtendedHashTable.Value">
            <summary>
            Obtient ou définit Valeur du niveau courant
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Utilities.LastAvailableDate">
            <summary>
            Represents a dictionary with the list of pairs vehicleId:lastAvailableDate
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Utilities.LastAvailableDate._lastAvailableDateList">
            <summary>
            Dictionary with the list of pairs vehicleId:lastAvailableDate
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.LastAvailableDate.Init(System.Collections.Generic.Dictionary{TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.DateTime})">
            <summary>
            Use to initialize the lastAvailableDateList object
            </summary>
            <param name="lastAvailableDateList"></param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.LastAvailableDate.GetLastAvailableDate(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Get the last available date
            </summary>
            <returns>Last available date</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.Utilities.LastAvailableDate.LastAvailableDateList">
            <summary>
            Get a dictionary with the list of pairs vehicleId:lastAvailableDate
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel">
            <summary>
            Fonctions des niveaux de détail média
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel._componentProfile">
            <summary>
             Profile du composant
             </summary>
              <label>_componentProfile</label>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel._customerWebSession">
            <summary>
             Session du client
             </summary>
              <label>_customerWebSession</label>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Web.GenericDetailLevel.ComponentProfile)">
            <summary>
            Constructor
            </summary>
            <param name="customerWebSession">_customer WebSession</param>
            <param name="componentProfile">component Profile</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructor
            </summary>
            <param name="customerWebSession">_customer WebSession</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.GetDefaultPreformatedMediaDetails(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le niveau de détail media par défaut en fonction du module
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Niveau de détail</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.GetDefaultGenericDetailLevelIds(System.Int64)">
            <summary>
            Get Default Generic Detail Level Ids
            </summary>
            <param name="currentModule">current Module</param>
            <returns>Array List etail Level Ids</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.GetFilters(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Get List of filters in generic detail levels
            </summary>
            <param name="session">User session</param>	
            <param name="idLevel1">Level 1 ID</param>
            <param name="idLevel2">Level 2 ID</param>
            <param name="idLevel3">Level 3 ID</param>
            <param name="idLevel4">Level 4 ID</param>
            <returns>List of levels matching filters</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.LevelMediaToHtmlString(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le texte du niveau de détail support
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Texte du niveau de détail support</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.LevelMediaToExcelString(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le texte du niveau de détail support
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Texte du niveau de détail support</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.IsLevel2InterestCenter(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Vérifie si le niveau 2 de détail média concerne les centres d'intérêts 
            </summary>
            <param name="webSession">session du client</param>
            <returns>vrai si centres d'intérêts </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.GetImpactedMedia(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Obtient la liste des média impacté par le détail média.
            </summary>
            <param name="webSession">Session du client</param>	
            <param name="idMediaLevel1">Identifiant du media niveau 1</param>
            <param name="idMediaLevel2">Identifiant du media niveau 2</param>
            <param name="idMediaLevel3">Identifiant du media niveau 3</param>
            <param name="idMediaLevel4">Identifiant du media niveau 4</param>
            <returns>liste des média </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.GetMediaList">
            <summary>
            Obtient la liste de niveaux de détail média
            </summary>
            <returns>liste de niveaux de détail média</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.GetGenericLevelDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean@,System.Web.UI.WebControls.Label,System.Boolean)">
            <summary>
            Niveau de détail support ou média(Niveaux détaillés par  :)
            </summary>
            <param name="webSession">Session du client</param>
            <param name="displayGenericlevelDetailLabel">Indique si affiche niveau de détail générique</param>
            <param name="genericlevelDetailLabel">Libellé niveaux de détail</param>
            <param name="excel">Indique si sortie excel</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.GetGenericLevelDetailColumn(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean@,System.Web.UI.WebControls.Label,System.Boolean)">
            <summary>
            Niveau de détail colonne générique
            </summary>
            <param name="webSession">Session du client</param>
            <param name="displayGenericlevelDetailColumnLabel">Indique si affiche niveau de détail générique</param>
            <param name="genericlevelDetailColumnLabel">Libellé niveaux de détail</param>
            <param name="excel">Indique si sortie excel</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.CanAddDetailLevelItem(TNS.AdExpress.Domain.Level.DetailLevelItemInformation,System.Int64)">
            <summary>
            Test si l'élément de niveau de détail peut être montré
            </summary>
            <remarks>
            AdNetTrack selection [Ko]
            </remarks>
            <param name="currentDetailLevelItem">Elément de niveau de détail</param>
            <param name="module">Module</param>
            <returns>True si oui false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.MediaDetailLevel.CheckProductDetailLevelAccess">
            <summary>
            Vérifie si le client à le droit de voir un détail produit dans les plan media
            </summary>
            <remarks>
            AdNetTrack selection [Ok]
            </remarks>
            <returns>True si oui false sinon</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Utilities.ProductDetailLevel">
            <summary>
            Fonctions des niveaux de détail produit
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ProductDetailLevel.GetDefaultPreformatedProductDetails(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le niveau de détail produit par défaut en fonction du module
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Niveau de détail</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ProductDetailLevel.GetLevelNumber(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le nombre de niveau
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Nombre de niveau</returns>
            <remarks>On se base sur le caractère séparateur '/' pour calculer le nombre de niveau</remarks>
            <example>Famille/Classe/Groupe => 3 niveaux</example>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ProductDetailLevel.LevelProductToHtmlString(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le texte du niveau de détail produit
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Texte du niveau de détail produi</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ProductDetailLevel.LevelProductToExcelString(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le texte du niveau de détail produit
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Texte du niveau de détail produit</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ProductDetailLevel.CanCustomizeUniverseSlogan(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Droit d'acceder à la sélection des accroches en fonctions de la sélection produit.
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Vrai si le client peut affiner son univers de versions</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ProductDetailLevel.ShowMediaPlanL1(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Indique s'il faut afficher un lien vers l'alerte plan média
            pour la nomenclature de niveau 1
            </summary>
            <param name="webSession">session du client</param>
            <returns>True si on peut afficher le lien, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ProductDetailLevel.ShowMediaPlanL2(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Indique s'il faut afficher un lien vers l'alerte plan média
            pour la nomenclature de niveau 2
            </summary>
            <param name="webSession">Session du client</param>
            <returns>True si on peut afficher le lien, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ProductDetailLevel.ShowMediaPlanL3(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Indique s'il faut afficher un lien vers l'alerte plan média
            pour la nomenclature de niveau 3
            </summary>
            <param name="webSession">Session du client</param>
            <returns>True si on peut afficher le lien, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ProductDetailLevel.DisplayCreation(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32)">
             <summary>
             Savoir si l'on affiche la creation
             </summary>
             <param name="webSession">Session du client</param>
            <param name="level">Niveau affichage</param>
             <returns>True si on peut affichier la création, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ProductDetailLevel.DisplayCreation(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Savoir si l'on affiche la creation
            </summary>
            <param name="webSession">Session du client</param>		
            <returns>True si on doit affichier la création, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.ProductDetailLevel.GetDefaultGenericDetailLevelIds(System.Int64)">
            <summary>
            Get Default Generic Detail Level Ids
            </summary>
            <param name="currentModule">current Module</param>
            <returns>Array List etail Level Ids</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Utilities.SQLGenerator">
            <summary>
            Générateur de code SQL
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetInClauseMagicMethod(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            In Clause Method
            </summary>
            <param name="session">User session (useless)</param>
            <param name="label">Field</param>
            <param name="inClauseItems">Items
            <example>"3,9,6"</example>
            </param>
            <returns>In clause SQL code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetInClauseMagicMethod(System.String,System.String)">
            <summary>
            In Clause Method
            </summary>
            <param name="label">Field</param>
            <param name="inClauseItems">Items
            <example>"3,9,6"</example>
            </param>
            <returns>In clause SQL code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetInClauseMagicMethod(System.String,System.String,System.Boolean)">
            <summary>
            In Clause Method
            </summary>
            <param name="label">Field</param>
            <param name="inClauseItems">Items
            <example>"3,9,6"</example>
            </param>
            <param name="include">True if elements are included (in), false either (not in)</param>
            <returns>In clause SQL code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetAdNetTrackMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Média pour les plan media AdNetTrack.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature support.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAnalyseCustomerMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean,System.Func{TNS.AdExpress.Constantes.Customer.Right.type,System.String,System.String})">
            <summary>
            Génère les droits clients Média.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature support.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <param name="replaceIds">Function  replace ids</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAnalyseCustomerProductRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Produit.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature produit.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getClassificationCustomerProductRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère les droits clients Produit.
            Cette fonction est à utiliser si la nomenclature est à plat dans la requête.
            Les noms des tables sont:
               - sector: sc
               - subsector: ss
               - group_:gr
               - segment: sg
            Les préfixes sont définis dans TNS.AdExpress.Constantes.DB.Tables
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getClassificationCustomerProductRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Produit.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="sectorPrefixe">Préfixe de la table sector</param>
            <param name="subsectorPrefixe">Préfixe de la table subsector</param>
            <param name="groupPrefixe">Préfixe de la table group_</param>
            <param name="segmentPrefixe">Préfixe de la table segment</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getClassificationCustomerProductRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Produit ( familles ) .
            </summary>
            <param name="webSession">Session du client</param>
            <param name="sectorPrefixe">Préfixe de la table sector</param>		
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetClassificationCustomerProductRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean,System.String)">
            <summary>
            Génère les droits clients Produit.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature produit.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetClassificationCustomerProductRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Génère les droits clients Produit dont les droits annonceurs.
            </summary>
            <remarks>Appliqué à ce jour seulement pour les Recap.</remarks>
            <param name="webSession">Session du client</param>
            <param name="sectorPrefixe">Préfixe de la table sector</param>
            <param name="subsectorPrefixe">Préfixe de la table subsector</param>
            <param name="groupPrefixe">Préfixe de la table group_</param>
            <param name="segmentPrefixe">Préfixe de la table segment</param>
            <param name="advertiserPrefixe">Préfixe de la table annonceur</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetClassificationCustomerAdvertiserRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients annonceurs.
            </summary>
            <remarks>Appliqué à ce jour seulement pour les Recap.</remarks>
            <param name="webSession">Session du client</param>
            <param name="advertiserPrefixe">Préfixe de la table annonceur</param>		
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetProductRights(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Get product classification branch rights
            </summary>
            <param name="prefix">prefix</param> 
            <param name="beginByAnd">True if sql clause start with "AND"</param>
            <param name="session">Client session</param>
            <returns>string sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetProductRights(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.DataBaseDescription.Table,TNS.AdExpress.Domain.DataBaseDescription.Table,TNS.AdExpress.Domain.DataBaseDescription.Table,TNS.AdExpress.Domain.DataBaseDescription.Table,System.Boolean)">
            <summary>
            Get vehicle classification branch rights
            </summary>
            <param name="sectorTable">Sector Table description</param>
            <param name="subSectorTable">Sub sector Table description</param>
            <param name="groupTable">group Table description</param>
            <param name="segmentTable">Segement Table description</param>
            <param name="session">Client session</param>
            <param name="beginByAnd">True if sql clause start with "AND"</param>
            <returns>sql rights string</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetProductRights(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Get vehicle classification branch rights.
            </summary>
            <param name="sectorTablePrefix">sector Table Prefix</param>
            <param name="subSectorTablePrefix">sub sector Table Prefix</param>
            <param name="groupTablePrefix">group Table Prefix</param>
            <param name="segmentTablePrefix">segment Table Prefix</param>
            <param name="session">Client session</param>
            <param name="beginByAnd">True if sql clause start with "AND"</param>
            <returns>string sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getClassificationCustomerRecapMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Produit.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature produit.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getClassificationCustomerRecapMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère les droits clients Media.
            Cette fonction est à utiliser si la nomenclature est à plat dans la requête.				
            Les préfixes sont définis dans TNS.AdExpress.Constantes.DB.Tables
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getClassificationCustomerRecapMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Génère les droits media clients .
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehiclePrefixe">Préfixe de la table vehicle (media)</param>
            <param name="categoryPrefixe">Préfixe de la table category</param>
            <param name="mediaPrefixe">Préfixe de la table media (support)</param>		
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAccessVehicleList(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère la condition contenant la liste des identifiants vehicles accessibles
            </summary>
            <remarks>Un vehicle est accessible si au moins un vehicle une categorie au un support est ouvert</remarks>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table contenant toute la nomenclature</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getClassificationCustomerMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.Boolean)">
            <summary>
            Génère les droits media clients .
            </summary>
            <param name="webSession">Session du client</param>		
            <param name="categoryPrefixe">Préfixe de la table interest_center</param>
            <param name="mediaPrefixe">Préfixe de la table media (support)</param>		
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getClassificationCustomerMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits media clients .
            </summary>
            <param name="webSession">Session du client</param>		
            <param name="categoryPrefixe">Préfixe de la table category</param>	
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.ForceVmcRightsInRecap(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Force les droits VMC dans les recap
            </summary>
            <remarks>Used only for recap modules</remarks>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table contenant toute la nomenclature</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetMediaRights(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Get vehicle classification brand rights
            </summary>
            <param name="prefix">prefix</param> 
            <param name="beginByAnd">True if sql clause start with "AND"</param>
            <returns>string sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetMediaRights(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Domain.DataBaseDescription.Table,TNS.AdExpress.Domain.DataBaseDescription.Table,TNS.AdExpress.Domain.DataBaseDescription.Table,System.Boolean)">
            <summary>
            Get vehicle classification brand rights
            </summary>
            <param name="categoryTable">Sub media Table description</param>
            <param name="mediaTable">vehicle Table description</param>
            <param name="vehicleTable">media Table description</param>
            <param name="beginByAnd">True if sql clause start with "AND"</param>
            <returns>sql rights string</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetMediaRights(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Get vehicle classification brand rights.
            </summary>
            <param name="categoryTable">sub media Table Prefix</param>
            <param name="mediaTable">vehicle Table Prefix</param>
            <param name="vehicleTable">media Table Prefix</param>
            <param name="beginByAnd">True if sql clause start with "AND"</param>
            <returns>string sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getShortMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients support
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature
            support limitée aux niveaux vehicle > category
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getShortMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère les droits clients Media limités aux niveaux vehicle > category.
            Cette fonction est à utiliser si la nomenclature est à plat dans la requête.				
            Les préfixes sont définis dans TNS.AdExpress.Constantes.DB.Tables
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getShortMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Génère les droits media clients limités aux niveaux vehicle > category.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehiclePrefixe">Préfixe de la table vehicle (media)</param>
            <param name="categoryPrefixe">Préfixe de la table category</param>
            <param name="mediaPrefixe">Préfixe de la table media (support)</param>		
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAnalyseCustomerAdvertiserRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère les droits clients Annonceurs.
            Cette fonction est à utiliser si la nomenclature annonceurs est à plat.
            Les préfixes de tables utilisées sont ceux définis dans les constantes 
            TNS.AdExpress.Constantes.DB.Tables
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAnalyseCustomerAdvertiserRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Annonceurs.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="advertiserPrefixe">Préfixe de la table contenant le niveau annonceur</param>
            <param name="holdingPrefixe">Préfixe de la table contenant le niveau hoding</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAnalyseCustomerAdvertiserRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Annonceurs.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature annonceurs.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAnalyseCustomerMediaSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            !!!! Non Développé, ne pas utiliser !!!!
            Génère le code SQL correpondant à la sélection du client
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature support.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetRecapMediaSelection(System.String,System.String,System.Boolean)">
            <summary>
            sélection  média pour analyse sectorielle
            </summary>
            <param name="CategoryAccessList">catégories en accès</param>
            <param name="MediaAccessList">supports en accès</param>
            <param name="beginbyand">vrai si commence par "and"</param>
            <returns>sélection média</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetRecapMediaSelection(System.String,System.String,System.String,System.Boolean)">
            <summary>
            sélection  média pour analyse sectorielle
            </summary>
            <param name="CategoryAccessList">catégories en accès</param>
            <param name="MediaAccessList">supports en accès</param>
            <param name="indexSubQuery">index de la sous requête</param>
            <param name="beginbyand">vrai si commence par "and"</param>
            <returns>sélection média</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetAnalyseCustomerProductSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Génère les sélections produits clients .
            </summary>
            <param name="webSession">session du client</param>
            <param name="holdingCompanyPrefixe">prefixe groupe de sociétés</param>
            <param name="advertiserPrefixe">prefixe annonceur</param>
            <param name="branPrefixe">prefixe marque</param>
            <param name="productPrefixe">prefixe produit</param>
            <param name="sectorPrefixe">prefixe famille</param>
            <param name="subsectorPrefixe">prefixe classe</param>
            <param name="groupPrefixe">prefixe groupe</param>
            <param name="beginByAnd">vrai si la requete commence par "And"</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetAnalyseCustomerProductSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Génère les sélections produits clients .
            </summary>
            <param name="webSession">session du client</param>
            <param name="advertiserPrefixe">prefixe annonceur</param>
            <param name="branPrefixe">prefixe marque</param>
            <param name="productPrefixe">prefixe produit</param>
            <param name="beginByAnd">vrai si la requete commence par "And"</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetSectorList(System.String,System.String,System.String)">
            <summary>
            Retourne la liste des familles pour une sélection de produits dans les Recap.
            une variété ou un groupe sélectionné
            </summary>
            <param name="recapTableName">table recap</param>
            <param name="GroupAccessList">liste des groupes</param>
            <param name="SegmentAccessList">liste des variétés</param>		
            <returns>liste des familles</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetRecapProductSelection(TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Sélection produit pour analyse sectorielles
            </summary>
            <param name="comparisonCriterion">critère de comparaison (total univers, famille ou marché)</param>
            <param name="recapTableName">nom table de données</param>
            <param name="indexSubQuery">index de la sous requête</param>
            <param name="GroupAccessList">groupes en accès</param>
            <param name="GroupExceptionList">groupes en exceptions</param>
            <param name="SegmentAccessList">variétés en accès</param>
            <param name="SegmentExceptionList">variétés en exception</param>
            <param name="AdvertiserAccessList">annonceurs en accès</param>
            <param name="RefenceOrCompetitorAdvertiser">vrai si annonceurs concurrents ou concurrents</param>
            <param name="beginByAnd">Vrai si requêtre commence par " and "</param>
            <returns>sélection produit</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetCustomerProgramSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.Boolean)">
            <summary>
            Obtient la sélection émission client
            </summary>
            <param name="webSession">Session du client</param>
            <param name="progamPrefixe">Préfixe emisssion</param>
            <param name="progamTypePrefixe">Préfixe Genre d'émission</param>
            <param name="beginByAnd">vrai si la requete commence par "And"</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetCustomerSponsorshipFormSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Obtient la sélection  client forme de parrainage
            </summary>
            <param name="webSession">Session du client</param>
            <param name="sponsorshipFormPrefixe">Préfixe Forme de parrainage</param>
            <param name="beginByAnd">vrai si la requete commence par "And"</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAdExpressUniverseCondition(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="webSession">Session du client AdExpress</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (Média, catégorie, support).
            De plus, elle utilise les préfixes déterminés dans les constantes
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAdExpressUniverseCondition(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="webSession">Session du client AdExpress</param>
            <param name="vehicleTablePrefixe">Préfixe de la table vehicle</param>
            <param name="categoryTablePrefixe">Préfixe de la table vehicle</param>
            <param name="mediaTablePrefixe">Préfixe de la table média</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode ne peut être utilisée que si toute la nomenclature support est contenue
            dans une même table (Média, catégorie, support).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAdExpressUniverseCondition(System.Int32,System.String,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idMediaItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="tablePrefixe">Préfixe de la table contenant toute la nomenclature</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode ne peut être utilisée que si toute la nomenclature support est contenue
            dans une même table (Média, catégorie, support).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAdExpressUniverseCondition(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.String,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idMediaItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="tablePrefixe">Préfixe de la table contenant toute la nomenclature</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <param name="webSession">Session client</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode ne peut être utilisée que si toute la nomenclature support est contenue
            dans une même table (Média, catégorie, support).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAdExpressUniverseCondition(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idMediaItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <param name="withPrefixe">Request with tables prefixe</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (Média, catégorie, support).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAdExpressUniverseCondition(System.Int32,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idMediaItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (Média, catégorie, support).
            De plus, elle utilise les préfixes déterminés dans les constantes
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAdExpressUniverseCondition(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="webSession">Session client</param>
            <param name="idMediaItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (Média, catégorie, support).
            De plus, elle utilise les préfixes déterminés dans les constantes
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAdExpressUniverseCondition(System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idMediaItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="vehicleTablePrefixe">Préfixe de la table vehicle</param>
            <param name="categoryTablePrefixe">Préfixe de la table vehicle</param>
            <param name="mediaTablePrefixe">Préfixe de la table média</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (Média, catégorie, support).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAdExpressUniverseCondition(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="webSession">Session client</param>
            <param name="idMediaItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="vehicleTablePrefixe">Préfixe de la table vehicle</param>
            <param name="categoryTablePrefixe">Préfixe de la table vehicle</param>
            <param name="mediaTablePrefixe">Préfixe de la table média</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (Média, catégorie, support).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetExcludeProducts(System.Int32,System.String)">
            <summary>
            Get excluded products
            </summary>
            <param name="prefix">prefix</param>
            <param name="idList">Baal Id list</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetResultMediaUniverse(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Get media Universe
            </summary>
            <param name="webSession">Web Session</param>
            <param name="prefix">Prefix</param>
            <param name="startWithAnd">start with And</param>
            <returns>string sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetResultMediaUniverse(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Get media Universe
            </summary>
            <param name="webSession">Web Session</param>
            <param name="prefix">Prefix</param>
            <param name="startWithAnd">start with And</param>
            <returns>string sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetAdExpressProductUniverseCondition(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idProductItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="tablePrefixe">Préfixe de la table contenant toute la nomenclature</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <param name="access">si true condition en accès sinon en exclusion</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode ne peut être utilisée que si toute la nomenclature support est contenue
            dans une même table (famille, classe ,group, produit ).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAdExpressProductUniverseCondition(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idProductItemsList">Identifiant de l'univers Produit AdExpress</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <param name="access">si true condition en accès sinon en exclusion</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (famille, classe ,group, produit ).
            De plus, elle utilise les préfixes déterminés dans les constantes
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getAdExpressProductUniverseCondition(System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idProductItemsList">Identifiant de l'univers produit AdExpress</param>
            <param name="sectorTablePrefixe">Préfixe de la table sector</param>
            <param name="subSectorTablePrefixe">Préfixe de la table subSector</param>
            <param name="groupTablePrefixe">Préfixe de la table group</param>
            <param name="segmentTablePrefixe">Préfixe de la table segment </param>
            <param name="productTablePrefixe">Préfixe de la table produit</param>			
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <param name="access">si true condition en accès sinon en exclusion</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (famille, classe ,group, produit ).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetUnitFieldName(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Détermine le nom du champ à utiliser pour l'unité
            
            Nouvelle version: 28/11/2006
            </summary>
            <remarks>
            A utiliser pour les modules d'alerte et d'analyse
            </remarks>
            <param name="webSession">Session du client</param>
            <returns>Nom du champ à utiliser pour la sélection de dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetUnitFieldName(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.DB.TableType.Type)">
            <summary>
            Détermine le nom du champ à utiliser pour l'unité
            
            Nouvelle version: 25/10/2007
            </summary>
            <remarks>
            A utiliser pour différencier entre le type des tables (DATA_VEHICLE ou WEB_PLAN)
            </remarks>
            <param name="webSession">Session du client</param>
            <param name="type">Type de la table</param>
            <returns>Nom du champ à utiliser pour la sélection de dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetUnitFieldNameWithAlias(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.DB.TableType.Type)">
            <summary>
            Détermine le nom du champ à utiliser pour l'unité
            
            Nouvelle version: 25/10/2007
            </summary>
            <remarks>
            A utiliser pour différencier entre le type des tables (DATA_VEHICLE ou WEB_PLAN)
            </remarks>
            <param name="webSession">Session du client</param>
            <param name="type">Type de la table</param>
            <returns>Nom du champ à utiliser pour la sélection de dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetUnitFieldNameSumWithAlias(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.DB.TableType.Type)">
            <summary>
            Détermine le nom du champ à utiliser pour l'unité
            
            Nouvelle version: 25/10/2007
            </summary>
            <remarks>
            A utiliser pour différencier entre le type des tables (DATA_VEHICLE ou WEB_PLAN)
            </remarks>
            <param name="webSession">Session du client</param>
            <param name="type">Type de la table</param>
            <returns>Nom du champ à utiliser pour la sélection de dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetUnitFieldNameSumWithAlias(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.DB.TableType.Type,System.String)">
            <summary>
            Détermine le nom du champ à utiliser pour l'unité
            
            Nouvelle version: 25/10/2007
            </summary>
            <remarks>
            A utiliser pour différencier entre le type des tables (DATA_VEHICLE ou WEB_PLAN)
            </remarks>
            <param name="webSession">Session du client</param>
            <param name="type">Type de la table</param>
            <param name="prefixe">Prefixe of field</param>
            <returns>Nom du champ à utiliser pour la sélection de dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetUnitFieldNameSumUnionWithAlias(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Détermine le nom du champ à utiliser pour l'unité
            
            Nouvelle version: 25/10/2007
            </summary>
            <remarks>
            A utiliser pour différencier entre le type des tables (DATA_VEHICLE ou WEB_PLAN)
            </remarks>
            <param name="webSession">Session du client</param>
            <param name="type">Type de la table</param>
            <returns>Nom du champ à utiliser pour la sélection de dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetUnitAlias(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Détermine le nom du champ à utiliser pour l'unité
            
            Nouvelle version: 25/10/2007
            </summary>
            <remarks>
            A utiliser pour différencier entre le type des tables (DATA_VEHICLE ou WEB_PLAN)
            </remarks>
            <param name="webSession">Session du client</param>
            <param name="type">Type de la table</param>
            <returns>Nom du champ à utiliser pour la sélection de dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetUnitAliasSum(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Détermine le nom du champ à utiliser pour l'unité
            
            Nouvelle version: 25/10/2007
            </summary>
            <remarks>
            A utiliser pour différencier entre le type des tables (DATA_VEHICLE ou WEB_PLAN)
            </remarks>
            <param name="webSession">Session du client</param>
            <param name="type">Type de la table</param>
            <returns>Nom du champ à utiliser pour la sélection de dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetDateFieldName(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Détermine le nom du champ à utiliser pour la sélection de dates
            
            Nouvelle version: 28/11/2006
            </summary>
            <remarks>
            A utiliser pour les modules d'alerte et d'analyse
            </remarks>
            <param name="webSession">Session du client</param>
            <returns>Nom du champ à utiliser pour la sélection de dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetDateFieldName(TNS.AdExpress.Constantes.Web.Module.Type,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Détermine le nom du champ à utiliser pour la sélection de dates
            
            Nouvelle version: 28/11/2006
            </summary>
            <remarks>
            A utiliser pour les modules d'alerte et d'analyse
            </remarks>
            <param name="moduleType">Type de module du client</param>
            <param name="detailPeriod">Type de détail de la période</param>
            <returns>Nom du champ à utiliser pour la sélection de dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetDateFieldName(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.PeriodBreakdownType)">
            <summary>
            Get Field to use for date
            </summary>
            <param name="period">Type of period</param>
            <returns>Date Filed Name matchnig the type of period</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getVehicleTableNameForSectorAnalysisResult(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean)">
            <summary>
            Détermine la table à traiter pour une Analyse sectorielle en fonction du vehicle
            </summary>
            <param name="vehicleType">Vehicle</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getVehicleTableNameForSectorAnalysisResultSegmentLevel(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean)">
            <summary>
            Détermine la table media/segment à traiter pour une Analyse sectorielle en fonction du vehicle  
            </summary>
            <param name="vehicleType">Vehicle</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetTablesForGad(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Détermine la table contenant les adresses Gad des annonceurs
            </summary>
            <exception cref="!:TNS.AdExpress.Web.Exceptions.SQLGeneratorException">Le niveau de détail produit demandé ne gère pas les données du gad</exception>
            <param name="webSession">Session du client</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetFieldsAddressForGad">
            <summary>
            Détermine le champ addresse du gad
            </summary>
            <returns>Champ addresse du gad</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetFieldsAddressForGad(System.String)">
            <summary>
            Détermine la table contenant les adresses Gad des annonceurs
            </summary>
            <param name="prefixe">Préfixe à utiliser pour la table du GAD</param>
            <returns>Champ addresse du gad</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetJointForGad(System.String)">
            <summary>
            Détermine les jointures à utiliser pour avoir l'adresse du gad pour un annonceur
            </summary>
            <param name="prefixeData">Préfixe à utiliser pour la de résultat</param>
            <returns>Jointure</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetJointForGad(System.String,System.String)">
            <summary>
            Détermine les jointures à utiliser pour avoir l'adresse du gad pour un annonceur
            </summary>
            <param name="prefixeGAD">Préfixe à utiliser pour la table du GAD</param>
            <param name="prefixeData">Préfixe à utiliser pour la de résultat</param>
            <returns>Jointure</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getTableNameForAnalysisResult(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Indique la table à utilisée pour la requête
            </summary>
            <param name="periodType">Type de période</param>
            <returns>La table correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getDateFieldNameForAnalysisResult(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Indique le champ à utilisée pour la date dans la requête
            </summary>
            <param name="periodType">Type de période</param>
            <returns>Le champ correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getUnitFieldNameForAnalysisResult(TNS.AdExpress.Constantes.Web.CustomerSessions.Unit)">
            <summary>
            Indique le champ à utilisée pour l'unité dans la requête
            </summary>
            <param name="unit">Type d'unité</param>
            <returns>Le champ correspondant au type d'unité</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getTableNameForAggregatedData(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Indique la table à utilisée pour la requête des données aggrégées
            </summary>
            <param name="periodType">Type de période</param>
            <returns>La table correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getTableNameForDashBoardResult(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Indique la table à utilisée pour la requête
            </summary>
            <param name="periodType">Type de période</param>
            <returns>La table correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetTableNameForTendency(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel,System.Boolean)">
            <summary>
            
            </summary>
            <param name="periodType"></param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetTrendTableInformation(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel,System.Boolean)">
            <summary>
            
            </summary>
            <param name="periodType"></param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetTrendTableInformation(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            
            </summary>
            <param name="periodType"></param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetTrendTotalTableInformtation(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel,System.Boolean)">
            <summary>
            Get table description for trends total according to the period selected by the client
            </summary>
            <param name="periodType">Period type selected</param>
            <returns>Tablz description</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetTotalTableNameForTendency(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel,System.Boolean)">
            <summary>
            
            </summary>
            <param name="periodType"></param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getMediaFieldsForTendencies(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Liste des champs pour le module tendance
            </summary>
            <param name="vehicleName">Nom du média</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getTableForTendencies(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Tables pour le module tendance
            </summary>
            <param name="vehicleName">Nom du vehicle</param>
            <returns>liste des tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getPeriodForTendencies(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel,System.String,System.String,System.String,System.String)">
            <summary>
            Choix période
            </summary>
            <param name="periodType">type de semaine (hebdomadaire,mensuel)</param>
            <param name="firstPeriodN">début de période de l'année N</param>
            <param name="endPeriodN">fin de période de l'année N</param>
            <param name="firstPeriodN1">début de période de l'année N-1</param>
            <param name="endPeriodN1">fin de période de l'année N-1</param>
            <returns>Conditions sur la période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getJointForTendencies(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Jointure pour le module
            </summary>
            <param name="webSession">Session client</param>
            <param name="vehicleName">Nom du vehicle</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getGroupByForTendencies(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Group by pour le module Tendance
            </summary>
            <param name="vehicleName">Nom du Vehicle</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getOrderByForTendencies(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Order by pour le module tendance
            </summary>
            <param name="vehicleName"></param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getMaxDateForPortofolio(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Fournit les champs pour avoir le max et le min des dates
            </summary>
            <param name="periodType">Type de période</param>
            <returns>les champs pour avoir le max et le min des dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetVehicleTableSQLForDetailResult(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Constantes.Web.Module.Type,System.Boolean)">
            <summary>
            Détermine la table à traiter pour avoir des données désagrégées en fonction du vehicle
            </summary>
            <param name="vehicleName">Vehicle</param>
            <param name="moduleType">Type de module</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetVehicleTableSQLForZoomDetailResult(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean)">
            <summary>
            Détermine la table à traiter pour un Zoom en fonction du vehicle
            </summary>
            <param name="vehicleName">Vehicle</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetVehicleTableSQLForSponsorshipResult(System.Boolean)">
            <summary>
            Détermine la table à traiter pour le parrainage TV
            </summary>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetVehicleTableSQLForAlertDetailResult(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean)">
            <summary>
            Détermine la table à traiter pour une Alerte en fonction du vehicle
            </summary>
            <param name="vehicleName">Vehicle</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetVehicleTableNameForDetailResult(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Constantes.Web.Module.Type,System.Boolean)">
            <summary>
            Détermine la table à traiter pour avoir des données désagrégées en fonction du vehicle
            </summary>
            <param name="vehicleName">Vehicle</param>
            <param name="moduleType">Type de module</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetVehicleTableNameForZoomDetailResult(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean)">
            <summary>
            Détermine la table à traiter pour un Zoom en fonction du vehicle
            </summary>
            <param name="vehicleName">Vehicle</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetVehicleTableNameForSponsorshipResult(System.Boolean)">
            <summary>
            Détermine la table à traiter pour le parrainage TV
            </summary>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetVehicleTableNameForAlertDetailResult(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean)">
            <summary>
            Détermine la table à traiter pour une Alerte en fonction du vehicle
            </summary>
            <param name="vehicleName">Vehicle</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetDataTableName(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.PeriodBreakdownType,System.Int64,System.Boolean)">
            <summary>
            Get data table to use in queries
            </summary>
            <param name="period">Type of period</param>
            <param name="vehicleId">Vehicle Id</param>
            <returns>Table matching the vehicle and the type of period</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetIdFieldsForProductDetail(TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedProductDetails,System.String)">
            <summary>
            Donne les champs à utilisé pour la colonne produit du tableau
            </summary>
            <param name="preformatedProductDetail">Niveau de détail produit</param>
            <param name="dataTablePrefixe">Préfixe de la table des données</param>
            <returns>Champs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getFieldsForProductDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Donne les champs à utilisé pour la colonne produit du tableau
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dataTablePrefixe">Préfixe de la table des données</param>
            <returns>Champs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getTablesForProductDetail(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Donne les champs à utiliser pour la colonne produit du tableau
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getJointAndLanguageForProductDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Donne les champs à utilisé pour la colonne produit du tableau
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dataTablePrefixe">Préfixe de la table des données</param>
            <param name="vehicleName">Type de vehicle</param>
            <returns>Jointures</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getOrderByForProductDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Retourne la liste des champs pour le order by
            </summary>
            <param name="webSession">session client</param>
            <param name="dataTablePrefixe">préfixe de la table des données</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetDataTable(TNS.AdExpress.Domain.Classification.VehicleInformation,TNS.AdExpress.Constantes.Web.Module.Type,System.Boolean)">
            <summary>
            Get Table to treat detailed data
            </summary>
            <param name="vehicleName">Vehicle</param>
            <param name="moduleType">Type de module</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetAlertTable(TNS.AdExpress.Domain.Classification.VehicleInformation,System.Boolean)">
            <summary>
            Get Alert Table
            </summary>
            <param name="v">Vehicle</param>
            <returns>Object Table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getUnitField(TNS.AdExpress.Constantes.Web.CustomerSessions.Unit)">
            <summary>
            Obtient le champ à utiliser en fonction de l'unité des tables désagrégées
            </summary>
            <param name="unit">Unité</param>
            <returns>Nom du champ</returns>
            <exception cref="T:TNS.AdExpress.Web.Core.Exceptions.SQLGeneratorException">
            Lancée au cas ou l'unité considérée n'est pas un cas traité
            </exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getTotalUnitField(TNS.AdExpress.Constantes.Web.CustomerSessions.Unit)">
            <summary>
            Obtient le champ à utiliser en fonction de l'unité des tables agrégées
            </summary>
            <param name="unit">Unité</param>
            <returns>Nom du champ</returns>
            <exception cref="T:TNS.AdExpress.Web.Core.Exceptions.SQLGeneratorException">
            Lancée au cas ou l'unité considérée n'est pas un cas traité
            </exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetUnitFieldsName(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.DB.TableType.Type,System.String)">
             <summary>
             Obtient les champs unités à utiliser en fonction du media
             </summary>
            <param name="webSession">Web session</param>
             <param name="type">Type de la table</param>
            <param name="dataTablePrefixe">préfixe de la table des données</param>
             <returns>NOms des champs coorespondant aux unités sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetUnitFieldName(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.PeriodBreakdownType)">
             <summary>
             Get unit field to use in query
             </summary>
            <param name="webSession">Web session</param>
             <param name="vehicleId">Vehicle id</param>
             <param name="periodType">Period type</param>
             <returns>Unit field name</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetUnitFieldsNameForPortofolio(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.DB.TableType.Type)">
            <summary>
            Obtient les champs unités à utiliser en fonction du media
            </summary>
            <param name="webSession">Web Session</param>
            <param name="type">Type de la table</param>
            <returns>NOms des champs coorespondant aux unités sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetUnitFieldsNameForPortofolio(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.DB.TableType.Type,System.String)">
            <summary>
            Obtient les champs unités à utiliser en fonction du media
            </summary>
            <param name="webSession">Web Session</param>
            <param name="type">Type de la table</param>
            <returns>NOms des champs coorespondant aux unités sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetUnitFieldsNameUnionForPortofolio(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les champs unités à utiliser en fonction du media
            </summary>
            <param name="webSession">Web Session</param>
            <returns>NOms des champs coorespondant aux unités sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetUnitFieldsForTendency(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String,System.String)">
            <summary>
            Obtient les champs unités à utiliser en fonction du media pour les tendances
            </summary>
            <param name="vehicleName">type du média</param>
            <param name="dataTablePrefixe">préfixe de la table des données</param>
            <param name="dataTotalTablePrefixe">préfixe de la table des données</param>
            <returns>NOms des champs coorespondant aux unités sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetJointForInsertDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Obtient les encarts pour le media presse
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dataTablePrefixe">Préfixe de la table des données</param>
            <returns>Jointures</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetJointForInsertDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,TNS.AdExpress.Constantes.DB.TableType.Type)">
            <summary>
            Obtient les encarts pour le media presse
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dataTablePrefixe">Préfixe de la table des données</param>
            <param name="type">Type de la table</param>
            <returns>Jointures</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getLevelProduct(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Retourne une condition sur le niveau de détail produit
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table</param>
            <param name="beginByAnd">débute par and</param>
            <returns>Code SQL Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.getLevelMedia(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Retourne une condition sur le niveau de détail média
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table</param>
            <param name="beginByAnd">débute par and</param>
            <returns>Code SQL Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetLevel2MediaFields(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le libellé du média de niveau 2
            </summary>
            <param name="webSession">session client</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.GetLevel2IdMediaFields(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le libellé du média de niveau 2
            </summary>
            <param name="webSession">session client</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.SQLGenerator.SaleTypeOutdoor(System.String,System.Int32)">
            <summary>
            For the Sale_Type value of outdoor
            </summary>
            <param name="saleType">SaleType</param>
            <param name="siteLanguage">Site language</param>
            <returns>value of saleType in string </returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Utilities.Text">
            <summary>
            Work on string
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Text.SuppressAccent(System.String)">
            <summary>
            Replace accuented caracters by the non accentued one
            </summary>
            <param name="text">String to process</param>
            <returns>String without accent</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.Utilities.Units">
            <summary>
            Utilities about units
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Units.ConvertUnitValueToString(System.Object,TNS.AdExpress.Constantes.Web.CustomerSessions.Unit,System.IFormatProvider)">
            <summary>
            Format value depending on the unit
            </summary>
            <param name="value">Value</param>
            <param name="unit">Unit</param>
            <param name="fp">Format provider (if null, current thread culture UI is used)</param>
            <returns>Formatted value</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Units.ConvertUnitValue(System.Object,TNS.AdExpress.Constantes.Web.CustomerSessions.Unit)">
            <summary>
            Format value depending on the unit
            </summary>
            <param name="value">Value</param>
            <param name="unit">Unit</param>
            <param name="fp">Format provider (if null, current thread culture UI is used)</param>
            <returns>Formatted value</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Units.ConvertUnitValueAndPdmToString(System.Object,TNS.AdExpress.Constantes.Web.CustomerSessions.Unit,System.Boolean,System.IFormatProvider)">
            <summary>
            Format value with specified unit format (PDM or not)
            </summary>
            <param name="value">Value</param>
            <param name="unit">Unit</param>
            <param name="pdm">Format as PDM if true</param>
            <returns>Formatted value</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Units.ConvertToKEuro(System.Object)">
            <summary>
            Format value from euro to keuro
            </summary>
            <param name="value">Value</param>
            <param name="decimals">Size of the decimal part</param>
            <returns>Formatted value</returns>
            <remarks>Divide value by 1000</remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Units.ConvertToPages(System.Object)">
            <summary>
            Get value as pages
            </summary>
            <param name="value">Value</param>
            <returns>Formattable value</returns>
            <remarks>Divide value by 1000</remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Units.ConvertToDuration(System.Object)">
            <summary>
            Get value (seconds : SSSSSSSSS) as duration (HHMMSS)
            </summary>
            <param name="value">Value</param>
            <returns>Formattable value</returns>
            <remarks>Convert number of seconds in numerical value set as HHMMSS</remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Units.getUnitsFromVehicleSelection(System.String)">
            <summary>
            Get allowed units depending on media selection
            </summary>
            <param name="vehicleSelection">List of media joined by commas</param>
            <returns>Allowed units</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Units.GetAllowedUnits(System.Collections.ArrayList,System.Collections.Generic.List{TNS.AdExpress.Constantes.Web.CustomerSessions.Unit})">
            <summary>
            Get allowed units 
            </summary>
            <param name="vehicleSelection">List of media joined by commas</param>
            <returns>Allowed units</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Units.getUnitsFromAppmPress">
            <summary>
            Get allowed units for appm
            </summary>
            <returns>Allowed units for appm</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.Utilities.Units.getInserts">
            <summary>
            Insets unit list
            </summary>
            <returns>Inset list</returns>
        </member>
    </members>
</doc>
