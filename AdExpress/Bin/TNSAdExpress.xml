<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TNS.AdExpress</name>
    </assembly>
    <members>
        <member name="T:TNS.AdExpress.DataAccess.Customer.RightDataAccess">
            <summary>
            Classe qui vérifie dans la base de données si les droits clients sont valides
            </summary>
        </member>
        <member name="F:TNS.AdExpress.DataAccess.Customer.RightDataAccess.htRight">
            <summary>
            clé : type de liste dans la nomenclature en accès ou en exception 
            valeur : liste correspondant à la clé 
            </summary>
        </member>
        <member name="F:TNS.AdExpress.DataAccess.Customer.RightDataAccess.idLogin">
            <summary>
            identifiant login
            </summary>		
        </member>
        <member name="F:TNS.AdExpress.DataAccess.Customer.RightDataAccess.login">
            <summary>
            login
            </summary>
        </member>
        <member name="F:TNS.AdExpress.DataAccess.Customer.RightDataAccess.password">
            <summary>
            mot de passe
            </summary>
        </member>
        <member name="F:TNS.AdExpress.DataAccess.Customer.RightDataAccess.sqlOracleDataReader1">
            <summary>
            OracleDataReader
            </summary>
        </member>
        <member name="F:TNS.AdExpress.DataAccess.Customer.RightDataAccess.sqlOracleCommand1">
            <summary>
            OracleCommand
            </summary>
        </member>
        <member name="F:TNS.AdExpress.DataAccess.Customer.RightDataAccess.nbLineBD">
            <summary>
            Nbre de lignes dans la base de données que l'on compare
            avec les listes des droits clients
            </summary>
        </member>
        <member name="F:TNS.AdExpress.DataAccess.Customer.RightDataAccess.rightDetermined">
            <summary>
            Vérifie si les droits ont été déterminés
            </summary>
        </member>
        <member name="F:TNS.AdExpress.DataAccess.Customer.RightDataAccess.rightValidated">
            <summary>
            Indique si l'utilisateur a le droit de se connecter
            </summary>
        </member>
        <member name="F:TNS.AdExpress.DataAccess.Customer.RightDataAccess.oracle">
            <summary>
            Chaîne de connection oracle
            </summary>
        </member>
        <member name="F:TNS.AdExpress.DataAccess.Customer.RightDataAccess.firstRequest">
            <summary>
            bool indiquant si c'est la première connection au site
            true si première connection
            </summary>
        </member>
        <member name="F:TNS.AdExpress.DataAccess.Customer.RightDataAccess.connection">
            <summary>
            Oracle connection
            </summary>
        </member>
        <member name="F:TNS.AdExpress.DataAccess.Customer.RightDataAccess.dateConnexion">
            <summary>
            date de connection
            </summary>		
        </member>
        <member name="F:TNS.AdExpress.DataAccess.Customer.RightDataAccess.dateModif">
            <summary>
            Date de modification des droits utilisateur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.#ctor(System.String,System.String)">
            <summary>
            Constructeur
            </summary>		
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.CanAccessToAdExpressDB(TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Vérifie l'existence du projet adExpress 
            avec au moins un module.
            Si true assigne idLogin
            </summary>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.CheckLoginDB(TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            vérifie le Login-mot de passe
            </summary>
            <returns>true si login-mot de passe correct, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.isRightModifiedDB">
            <summary>
            vérifie que les droits n'ont pas été changés
            </summary>
            <returns>true si les droits n'ont pas été changés</returns>
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.htRightProductUserBD">
            <summary>
            Requête produit
            </summary>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.htRightMediaUserBD">
            <summary>
            Requête media 
            </summary>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.htRightUserBD">
            <summary>
            Remplit les droits d'un utilisateur dans htRight
            </summary>
            <returns>htRight</returns>
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.htRightProductTemplateUserBD">
            <summary>
            Requête produit
            </summary>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.htRightMediaTemplateUserBD">
            <summary>
            Requête Media
            </summary>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.isProductTemplateExist">
            <summary>
            Vérifie l'existance d'un template pour un login dans la branche produit
            </summary>
            <returns>Retourne true si un template existe</returns>
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.isMediaTemplateExist">
            <summary>
            Vérifie l'existance d'un template pour un login dans la branche media
            </summary>
            <returns>Retourne true si un template existe</returns>
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.checkRightCohesionMedia">
             <summary>
            Méthode vérifiant la cohérence des droits client dans la branche media
             </summary>
             <returns>retourne false si il y a une incohérence</returns>
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.checkRightCohesionProduct">
            <summary>
            Méthode vérifiant la cohérence des droits client dans la branche produit
            </summary>
            <returns>retourne false si il y a une incohérence</returns>
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.checkRightCohesionCompany">
            <summary>
            Méthode vérifiant la cohérence des droits client dans la branche annonceur
            </summary>
            <returns>retourne false s'il y a une incohérence</returns>
        </member>
        <member name="M:TNS.AdExpress.DataAccess.Customer.RightDataAccess.listValue(System.String[],System.String[])">
            <summary>
            Retourne la liste des droits
            </summary>
            <param name="tab1"></param>
            <param name="tab2"></param>
            <returns></returns>
        </member>
        <member name="P:TNS.AdExpress.DataAccess.Customer.RightDataAccess.Connection">
            <summary>
            Obtient et modifie la connection oracle
            </summary>
        </member>
        <member name="P:TNS.AdExpress.DataAccess.Customer.RightDataAccess.Item(TNS.AdExpress.Constantes.Customer.Right.type)">
            <summary>
            Retourne un  string correspondant aux éléments d'une liste représentant
            un type de droit (famille,media,annonceur...). Ces listes sont soient en accès soient en exception.
            </summary>
            <param name="typeRight">Choix d'une liste en accès ou en exception</param>
            <returns>string d'une liste</returns>
        </member>
        <member name="P:TNS.AdExpress.DataAccess.Customer.RightDataAccess.OracleConnectionString">
            <summary>
            Obtient la chaîne de connexion oracle
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Common._OracleDataSource">
            <summary>
            Source de données Oracle
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Common._IDataSource">
            <summary>
            Source de données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Common._IDataSource.GetSource">
            <summary>
            Obtient la source de données
            </summary>
            <returns>Source de données</returns>
        </member>
        <member name="M:TNS.AdExpress.Common._IDataSource.DataSourceType">
            <summary>
            Obtient le type de la source de données
            </summary>
            <returns>Type de la source de données</returns>
        </member>
        <member name="M:TNS.AdExpress.Common._IDataSource.Open">
            <summary>
            Ouvre la source de données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Common._IDataSource.Close">
            <summary>
            Ferme la source de données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Common._IDataSource.Fill(System.String)">
            <summary>
            Execute
            </summary>
            <param name="command">Ligne de commande</param>
            <returns>Resultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Common._IDataSource.Update(System.String)">
            <summary>
            modifie un élément
            </summary>
            <param name="command">Ligne de commande</param>
        </member>
        <member name="M:TNS.AdExpress.Common._IDataSource.Insert(System.String)">
            <summary>
            Insérer un élément
            </summary>
            <param name="command">Ligne de commande</param>
        </member>
        <member name="M:TNS.AdExpress.Common._IDataSource.Delete(System.String)">
            <summary>
            Supprimer un élément
            </summary>
            <param name="command">Ligne de commande</param>
        </member>
        <member name="F:TNS.AdExpress.Common._OracleDataSource._source">
            <summary>
            Source de données
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Common._OracleDataSource._sourceType">
            <summary>
            Type de la source de données
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Common._OracleDataSource._disposed">
            <summary>
            Indique si dispose a été appellée
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Common._OracleDataSource._connectionString">
            <summary>
            Chaine de connection
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.#ctor(Oracle.DataAccess.Client.OracleConnection)">
            <summary>
            Constructeur
            </summary>
            <param name="source">Source de données</param>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="connectionString">Chaîne de connexion à la source de données</param>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.Dispose">
            <summary>
            Destructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.Dispose(System.Boolean)">
            <summary>
            Destructeur
            </summary>
            <param name="disposing">booleen</param>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.BuildConnection">
            <summary>
            Construit la connection Oracle
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.Fill(System.String,System.Boolean)">
            <summary>
            Execute
            </summary>
            <param name="command">Ligne de commande</param>
            <param name="afterError">true si l'execution est demandé après une erreur, false sinon</param>
            <returns>Resultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.NonQuery(System.String)">
            <summary>
            Requête de type ExecuteNonQuery
            </summary>
            <param name="command">Requête SQL</param>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.GetSource">
            <summary>
            Obtient la source de données
            </summary>
            <returns>Source de données</returns>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.DataSourceType">
            <summary>
            Obtient le type de la source de données
            </summary>
            <returns>Type de la source de données</returns>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.Open">
            <summary>
            Ouvre la source de données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.Close">
            <summary>
            Ferme la source de données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.Fill(System.String)">
            <summary>
            Execute
            </summary>
            <param name="command">Ligne de commande</param>
            <returns>Resultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.Update(System.String)">
            <summary>
            Modifie un élément
            </summary>
            <param name="command">Ligne de commande</param>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.Insert(System.String)">
            <summary>
            Ajoute un élément
            </summary>
            <param name="command">Ligne de commande</param>
        </member>
        <member name="M:TNS.AdExpress.Common._OracleDataSource.Delete(System.String)">
            <summary>
            Suppression d'un élément
            </summary>
            <param name="command">Ligne de commande</param>
        </member>
        <member name="P:TNS.AdExpress.Common._OracleDataSource.Source">
            <summary>
            Accès à la source de données
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Exceptions.AdExpressCustomerException">
            <summary>
            Description résumée de AdExpressCustomerExcpetion.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.AdExpressCustomerException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.AdExpressCustomerException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.AdExpressCustomerException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Exceptions.XmlReaderDataSourceException">
            <summary>
            Erreur de la source de données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.XmlReaderDataSourceException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.XmlReaderDataSourceException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.XmlReaderDataSourceException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Exceptions.AdExpressCustomerDBException">
            <summary>
            Exception de l'accès client à AdExpress
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.AdExpressCustomerDBException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.AdExpressCustomerDBException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.AdExpressCustomerDBException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.BusinessFacade.SqlGeneratorSystem">
            <summary>
            Description résumée de SqlGenerator.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.BusinessFacade.SqlGeneratorSystem.GetMediaRight(TNS.AdExpress.Rules.Customer.Right,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Média.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature support.
            </summary>
            <param name="customerLogin">Droit du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.BusinessFacade.SqlGeneratorSystem.GetProductRight(TNS.AdExpress.Rules.Customer.Right,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Produit.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature produit.
            </summary>		
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <param name="customerLogin">Droit client</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.BusinessFacade.SqlGeneratorSystem.GetProductRight(TNS.AdExpress.Rules.Customer.Right,System.Boolean)">
            <summary>
            Génère les droits clients Produit.
            Cette fonction est à utiliser si la nomenclature est à plat dans la requête.
            Les noms des tables sont:
               - sector: sc
               - subsector: ss
               - group_:gr
               - segment: sg
            Les préfixes sont définis dans TNS.AdExpress.Constantes.DB.Tables
            </summary>		
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <param name="customerLogin">Droit client</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.BusinessFacade.SqlGeneratorSystem.GetProductRight(TNS.AdExpress.Rules.Customer.Right,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Produit.
            </summary>		
            <param name="sectorPrefixe">Préfixe de la table sector</param>
            <param name="subsectorPrefixe">Préfixe de la table subsector</param>
            <param name="groupPrefixe">Préfixe de la table group_</param>
            <param name="segmentPrefixe">Préfixe de la table segment</param>
            <param name="customerLogin">Droit client</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.BusinessFacade.SqlGeneratorSystem.GetVehicleTableNameForDetail(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Détermine la table à utiliser en fonction du vehicle
            </summary>
            <param name="vehicleName">Vehicle</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="T:TNS.AdExpress.Rules.Customer.Right">
            <summary>
            Classe qui sauvegarde les droits des clients dans une hashtables
            et qui possède des méthodes pour vérifier la cohérence des droits
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Rules.Customer.Right.#ctor(System.String,System.String,TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Constructeur qui vérifie si l'accès au site est possible
            (couple login-password ok, accès au projet adExpress, inscription à au moins un module)
            </summary>
            <param name="login">login</param>
            <param name="password">mot de passe</param>
            <param name="source">Source de données</param>
        </member>
        <member name="M:TNS.AdExpress.Rules.Customer.Right.#ctor(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructeur qui sauvegarde les listes de droit des clients 
            passées en entrée dans une hashtable
            </summary>
            <param name="idLogin">Identifiant login</param>
            <param name="login">Login</param>
            <param name="password">Mot de passe</param>
            <param name="sector">Famille en accès</param>
            <param name="sectorException">Famille en exception</param>
            <param name="subSector">Classe en accès</param>
            <param name="subSectorException">Classe en exception</param>
            <param name="group">Groupe en accès</param>
            <param name="groupException">Groupe en exception</param>
            <param name="segment">variété en accès</param>
            <param name="segmentException">variété en exception</param>
            <param name="holdingCompany">Groupe de sociétés en accès</param>
            <param name="holdingCompanyException">Groupe de sociétés en exception</param>
            <param name="advertiser">Annonceur en accès</param>
            <param name="advertiserException">Annonceur en exception</param>
            <param name="vehicle">Média en accès</param>
            <param name="VehicleException">Média en exception</param>
            <param name="category">Catégorie en accès</param>
            <param name="categoryException">Catégorie en exception</param>
            <param name="media">support en accès</param>
            <param name="mediaException">support en exception</param>
        </member>
        <member name="M:TNS.AdExpress.Rules.Customer.Right.rightElement(TNS.AdExpress.Constantes.Customer.Right.type)">
            <summary>
            Méthode qui retourne un tableau de string correspondant aux éléments d'une liste représentant
            un type de droit (famille,media,annonceur...). Ces listes sont soient en accès soient en exception.
            </summary>
            <param name="typeRight">Choix d'une liste en accès ou en exception</param>
            <returns>tableau de string</returns>
        </member>
        <member name="M:TNS.AdExpress.Rules.Customer.Right.rightElementString(TNS.AdExpress.Constantes.Customer.Right.type)">
            <summary>
            Retourne une liste de droits séparée par des , .		
            </summary>
            <param name="typeRight">Choix d'une liste en accès ou en exception</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Rules.Customer.Right.getIdFrequency(System.Int64)">
            <summary>
            Méthode pour récupérer la fréquence d'un module
            </summary>
            <param name="idModule">identifiant du module</param>
            <returns>Valeur de la fréquence</returns>
        </member>
        <member name="M:TNS.AdExpress.Rules.Customer.Right.checkRightCohesion">
            <summary>
            Vérifie la cohérence des droits clients dans les 
            3 branches de la nomenclature (produit, média, annonceurs)
            </summary>
            <returns>retourne false si incohérence</returns>
        </member>
        <member name="M:TNS.AdExpress.Rules.Customer.Right.branchRightExist(TNS.AdExpress.Constantes.Classification.Branch.type)">
            <summary>
            Vérifie l'existence de droit dans une des trois branches
            </summary>
            <param name="branch"></param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Rules.Customer.Right.CheckLogin(TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Test l'accès du site
            </summary>
            <returns>True si le client a accès false sinon</returns>	
        </member>
        <member name="M:TNS.AdExpress.Rules.Customer.Right.CanAccessToAdExpress(TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Vérifie que pour un login-password donnée, le project adExpress 
            existe avec au moins un module.
            </summary>
            <returns>Si true assigne idLogin,false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Rules.Customer.Right.isRightModified">
            <summary>
            Vérifie que les droits n'ont pas été modifiés depuis le début
            de la connection au site web
            </summary>
            <returns>true si les droits sont modifiés,false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Rules.Customer.Right.rightUser(TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Méthode globale 
            </summary>
            <param name="source">Source de données</param>
            <remarks>Méthode n'est pas appelée</remarks>
        </member>
        <member name="M:TNS.AdExpress.Rules.Customer.Right.htRightUser">
            <summary>
            Remplit les droits d'un utilisateur dans htRight
            </summary>
            <returns>htRight</returns>
        </member>
        <member name="M:TNS.AdExpress.Rules.Customer.Right.getListIdVehicle">
            <summary>
            Retourne la liste des identifiants des vehicles accessibles en fonction des droits clients
            (utilisée dans les recap)
            </summary>
            <remarks>Un vehicle est accessible si au moins un vehicle une categorie au un support est ouvert</remarks>
            <returns></returns>
        </member>
        <member name="P:TNS.AdExpress.Rules.Customer.Right.IdLogin">
            <summary>
            Obtient Identifiant idlogin
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Rules.Customer.Right.Login">
            <summary>
            Obtient login
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Rules.Customer.Right.PassWord">
            <summary>
            Obtient mot de passe
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Rules.Customer.Right.RightValidated">
             <summary>
            Obtient et modifie le booléen indiquant si l'utilisateur a le droit de se connecter 
             </summary>
        </member>
        <member name="T:TNS.AdExpress.Common._XmlReaderDataSource">
            <summary>
            Description résumée de OracleDataSource.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Common._XmlReaderDataSource._source">
            <summary>
            Source de données
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Common._XmlReaderDataSource._sourceType">
            <summary>
            Type de la source de données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Common._XmlReaderDataSource.#ctor(System.Xml.XmlTextReader)">
            <summary>
            Constructeur
            </summary>
            <param name="source">Source de données</param>
        </member>
        <member name="M:TNS.AdExpress.Common._XmlReaderDataSource.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="filePath">Chemin de la source de données</param>
        </member>
        <member name="M:TNS.AdExpress.Common._XmlReaderDataSource.GetSource">
            <summary>
            Obtient la source de données
            </summary>
            <returns>Source de données</returns>
        </member>
        <member name="M:TNS.AdExpress.Common._XmlReaderDataSource.DataSourceType">
            <summary>
            Obtient le type de la source de données
            </summary>
            <returns>Type de la source de données</returns>
        </member>
        <member name="M:TNS.AdExpress.Common._XmlReaderDataSource.Open">
            <summary>
            Ouvre la source de données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Common._XmlReaderDataSource.Close">
            <summary>
            Ferme la source de données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Common._XmlReaderDataSource.Fill(System.String)">
            <summary>
            Execute
            </summary>
            <param name="command">Ligne de commande</param>
            <returns>Resultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Common._XmlReaderDataSource.Update(System.String)">
            <summary>
            Modifie un élément
            </summary>
            <param name="command">Ligne de commande</param>
        </member>
        <member name="M:TNS.AdExpress.Common._XmlReaderDataSource.Insert(System.String)">
            <summary>
            Ajoute un élément
            </summary>
            <param name="command">Ligne de commande</param>
        </member>
        <member name="M:TNS.AdExpress.Common._XmlReaderDataSource.Delete(System.String)">
            <summary>
            Supprime un élément
            </summary>
            <param name="command">Ligne de commande</param>
        </member>
        <member name="T:TNS.AdExpress.Exceptions.SqlGeneratorSystemException">
            <summary>
            Description résumée de AdvertiserListException.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.SqlGeneratorSystemException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.SqlGeneratorSystemException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.SqlGeneratorSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Exceptions.OracleDataSourceException">
            <summary>
            Erreur de la source de données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.OracleDataSourceException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.OracleDataSourceException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Exceptions.OracleDataSourceException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
    </members>
</doc>
