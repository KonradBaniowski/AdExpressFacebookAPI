<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TNS.AdExpress.Web</name>
    </assembly>
    <members>
        <member name="T:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI">
            <summary>
            DetailVersionsVehicleUI provide methods to get html code to display a set of version all from the same vehicle
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI._title">
            <summary>
            WebControl title
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI._versions">
            <summary>List of Versions</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI._vehicle">
             <summary>
             Media Classification considered in the web control
             </summary>
            <directed>True</directed>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI._webSession">
            <summary>  
            Customer web session
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI._nb_column">
            <summary>
            Number of versions on a line
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI._versionsUIs">
            <summary>
            Object genberating html code
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Hashtable,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Constructor
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="versions">List of verions details indexed by their Id</param>
            <param name="vehicle">Vehicle considered</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.GetHtml(System.Collections.ArrayList@)">
            <summary>
            Build Html code to display the set of version
            </summary>
            <returns>Html Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.GetAPPMHtml(TNS.FrameWork.DB.Common.IDataSource,System.String,System.Collections.ArrayList@)">
            <summary>
            Build Html code to display the set of version
            </summary>
            <returns>Html Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.PressSetUp">
            <summary>
            Initialise all webcontrols For Press
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.APPMSetUp(TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Initialise all webcontrols
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.TvSetUp">
            <summary>
            Initialise all webcontrols For TV
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.RadioSetUp">
            <summary>
            Initialise all webcontrols For RADIO
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.MDSetUp">
            <summary>
            Initialise all webcontrols For Direct Marketing
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.OutdoorSetUp">
            <summary>
            Initialise all webcontrols For Outdoor
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.PressBuildHtml(System.Text.StringBuilder)">
            <summary> 
            Render all versions controls
            </summary>
            <returns>Html code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.APPMBuildHtml(System.String)">
            <summary> 
            Render all versions controls
            </summary>
            <returns>Html code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.TvBuildHtml(System.Text.StringBuilder)">
            <summary> 
            Render all versions controls
            </summary>
            <returns>Html code</returns> 
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.RadioBuildHtml(System.Text.StringBuilder)">
            <summary> 
            Render all versions controls
            </summary>
            <returns>Html code</returns> 
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.MDBuildHtml(System.Text.StringBuilder)">
            <summary> 
            Render all versions controls
            </summary>
            <returns>Html code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.OutdoorBuildHtml(System.Text.StringBuilder)">
            <summary> 
            Render all versions controls
            </summary>
            <returns>Html code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.BuildVersionPath(System.String,System.String,System.String)">
            <summary>
            Build visual access path depending on the vehicle
            </summary>
            <param name="date">date to format YYYYMMDD</param>
            <param name="idMedia">Media Id</param>
            <returns>Full path to access an image</returns>
        </member>
        <!-- Commentaire XML incorrect ignoré pour le membre "M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.BuildVersionPath(System.String,System.String)" -->
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.GetItemContentList(System.Data.DataRow)">
            <summary>
            Renvoie la liste des item content
            </summary>
            <returns></returns>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.Session">
            <summary>
            Get / Set Customer web session
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.Vehicle">
            <summary>
            Get / Set Considered Vehicle
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.Title">
            <summary>
            Get / Set Web Control title
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.Nb_Columns">
            <summary>
            Get / Set Columns number
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.ExportVersionsVehicleUI.versions">
            <summary>Get / Set versions</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.IndicatorPalmaresUI">
            <summary>
            Utiliser pour le palmares 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorPalmaresUI.GetPalmaresIndicatorUI(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.PalmaresRecap.typeYearSelected,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,System.String,System.Boolean)">
            <summary>
            Affichage d'un tableau
            </summary>
            <param name="webSession">Session</param>		
            <param name="tableType"></param>
            <param name="typeYear">Année courante, année N-1</param>
            <param name="excel">Excel</param>
            <param name="itemType">type de champ</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorPalmaresUI.GetAllPalmaresIndicatorUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Affichage des quatres tableaux
            </summary>		
            <param name="webSession">Session client</param>
            <param name="excel">True si excel</param>
            <param name="itemType">type de l'élément à trier</param>
            <returns>tableaux palmares</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorPalmaresUI.GetAllPalmaresIndicatorExcelUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Génère le code pour la sortie Excel
            </summary>
            <param name="webSession">Session du client</param>
            <param name="itemType">type d'élément à trier</param>
            <returns>HTML pour Excel</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.FilesItemUI">
            <summary>
            Classe utilisé pour l'affichage des plaquettes Fichiers resultats
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.FilesItemUI.GetHtml(System.Web.UI.Page,System.Collections.ArrayList)">
            <summary>
            Fonction pour la construction du code html pour l'affichage des plaquettes Fichiers resultats
            </summary>
            <returns>Source html du résultat</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.CompetitorUI">
            <summary>
            Construit l'interface utilisateur pour l'alerte concurrentielle
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.CompetitorUI.productLevel1">
            <summary>
            Niveau 1
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.CompetitorUI.productLevel2">
            <summary>
            Niveau 2
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.CompetitorUI.productLevel3">
            <summary>
            Niveau 3
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorUI.GetHtml(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code html d'un module concurentiel
            </summary>
            <param name="page">Page utilisée pour montrer le résultat</param>
            <param name="tab">Tableau de données du résultat</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorUI.GetSynthesisHtml(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère le code html de la synthèse du module alerte concurentielle
            </summary>
            <param name="page">Page utilisée pour montrer le résultat</param>
            <param name="tab">Tableau de données du résultat</param>
            <param name="webSession">Session du client</param>
            <param name="excel">Vrai si resultat au format excel</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorUI.GetExcel(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code html pour le fichier Excel d'un module concurentielle
            </summary>
            <param name="page">Page utilisée pour montrer le résultat</param>
            <param name="tab">Tableau de données du résultat</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML pour fichier Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorUI.GetSynthesisExcel(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code excel pour la synthèse de l'alerte concurrentielle
            </summary>
            <param name="page">Page qui appele le résultat</param>
            <param name="tab">Tableau de résultat</param>
            <param name="webSession">Session du client</param>
            <returns>Source html du tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorUI.GetRawExcel(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code html pour le fichier Excel des données brutes d'un module concurentielle
            </summary>
            <param name="page">Page utilisée pour montrer le résultat</param>
            <param name="tab">Tableau de données du résultat</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML pour fichier Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorUI.DisplayCreationBoolean(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32)">
             <summary>
             Savoir si l'on affiche la creation
             </summary>
             <param name="webSession">Session du client</param>
            <param name="level">Niveau affichage</param>
             <returns>Texte du niveau de détail produi</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorUI.LevelForCreation(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le texte du niveau de détail produit
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Texte du niveau de détail produi</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.AnalyseFamilyInterestPlanUI">
            <summary>
            Description résumée de AnalyseFamilyInterestPlanUI.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.AnalyseFamilyInterestPlanUI.InterestFamilyPlan(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean)">
             <summary>
             familles d'intérêts Plan APPM
             </summary>
             <param name="webSession">session client</param>
             <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="idWave">Identifiant de la vague</param>
             <param name="dateBegin">date de début</param>
             <param name="dateEnd">date de fin</param>
             <param name="idBaseTarget">Identifiant de la cible de base</param>
             <param name="idAdditionalTarget">Identifiant de la cible sélectionnée</param>
             <param name="excel">le boolean excel</param>
             <returns>HTML string </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.AnalyseFamilyInterestPlanUI.GetExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Excel de familles d'intérêts plan APPM
            </summary>
            <param name="webSession">session client</param>
            <param name="dataSource">dataSource pour la creation de dataset </param>
            <param name="idWave">Identifiant de la vague</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="idBaseTarget">cible de base</param>
            <param name="idAdditionalTarget">cible supplementaire</param>
            <param name="excel">boolean pour excel</param>
            <returns>Excel pour familles d'intérêts</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.MarketShareRules">
            <summary>
            Classe métier des modules potentiels
            </summary>
            <remarks>
            Classe s'appuie sur la classe metier des modules concurrentiels
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MarketShareRules.GetPortofolioFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le tableau de résultat du portefeuille d'une alerte Concurrentielle
            </summary>
            <param name="webSession">Session du client</param>		
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MarketShareRules.GetStrenghsOrOpportunitiesFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Obtient le tableau de résultat du portefeuille d'une alerte Concurrentielle
            </summary>
            <param name="webSession">Session du client</param>
            <param name="computeStrenghs">Calcule les forces</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MarketShareRules.GetOpportunitiesFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le tableau de résultat du portefeuille d'une alerte Concurrentielle
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.DynamicTablesRules">
            <summary>
            Classe métier du module tableau dynamique (analyse sectorielle)
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicTablesRules.GetDataTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Redirige les données vers une méthode chargée de les structuré spéciofiquement en fonction du tableau 
            préformaté sélectionné
            </summary>
            <param name="webSession">Session utilisateur</param>
            <returns>Tableau d'objet contenant les données à livrer structurées suivant le tableau préformaté
            sélectionné</returns>
            <remarks>
            Utilise les méthodes:
            	TNS.AdExpress.Web.DataAccess.Results.DynamicTablesDataAccess.getData(WebSession)
            </remarks>
            <exception cref="M:TNS.AdExpress.Web.Exceptions.NoDataException.#ctor">Remontée si l'exception est lancée dans le dataAccess</exception>
            <exception cref="M:TNS.AdExpress.Web.Exceptions.DeliveryFrequencyException.#ctor">Remontée si l'exception est lancée dans le dataAccess</exception>
            <exception cref="M:System.Exception.#ctor">Remontée si l'exception est lancée dans le dataAccess</exception>
            <exception cref="M:TNS.AdExpress.Web.Exceptions.DynamicTableRulesException.#ctor">Lancée si aucun tableau préformatée n'est valide pour celui présent en session utilisateur</exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicTablesRules.BuildDataTableType_1_2(System.Data.DataSet,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Construit un tableau structuré de type 1 ou 2 en fonction des détails sélectionnés.
            Type 1 : (media) X (N [PDM, N-1, EVOL])
            Type 2 : (produit) X (N [PDV, N-1, EVOL])
            Etapes:
            	- Vérification de la présence de données dans dsData
            	- Construction des constantes nécessaires au traitement des données:
            		- personnalisation des éléments référents et concurrents
            		- index de la première colonne à contenir des données quantitatives
            		- tableau des index de nomenclature contenaznt pour chaque niveau de nomenclature des triplets
            		(index colonne de la nom dans dsData, ligne du niveau dans le tableau de resultat, Identifiant du niveau)
            </summary>
            <param name="dsData">DataSet issue de la couche BDD. Il contient déjà les données nécessaires à 
            l'édition du tableau en contion des niveaux de détails préformatés et du tableau considéré</param>
            <param name="webSession">Session utilisateur</param>
            <returns>Un tableau structurant les données de dsData pour un tableau de type 1 ou 2</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicTablesRules.Contains(System.String[],System.String)">
            <summary>
            Détermine si la valeur est contenue dans le tableau de string
            </summary>
            <param name="table">tableau de string</param>
            <param name="valueToFind">valeur recherchée</param>
            <returns>true si la chaine est contenue dans le tableau</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicTablesRules.DynamicDataTable(System.Data.DataSet,System.Int32,System.Int32)">
            <summary>
            Methode pour supprimer les lignes vides
            </summary>
            <param name="dsData">Dataset provenant de la requête</param>
            <param name="firstData">Première ligne avec les données</param>
            <returns>DataTable sans les lignes sans données</returns>
            <param name="advertiser">Existance de l'idAdvertiser dans la table 1 si il existe 0 sinon</param>
        </member>
        <member name="F:TNS.AdExpress.Web.Rules.Results.APPM.TargetColumns._grpIndex">
            <summary>
            GRP Column index for a target
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Rules.Results.APPM.TargetColumns._pdmIndex">
            <summary>
            PDM Column index for a target
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Rules.Results.APPM.TargetColumns._cgrpIndex">
            <summary>
            CGRP Column index for a target
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.TargetColumns.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="grp">grp</param>
            <param name="pdm">pdm</param>
            <param name="cgrp">cout grp</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.SupportPlanRules">
            <summary>
            Process data for the APPM module, tab "Valorisation and efficiency by media"
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.SupportPlanRules.GetData(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Int64,System.Int64,System.Int64)">
            <summary>
            Process data from database so as to get the desired information
            </summary>
            <param name="dataSource">Data Source</param>
            <param name="webSession">User Session</param>
            <param name="dateBegin">Period beginning</param>
            <param name="dateEnd">Period end</param>
            <param name="idBaseTarget">Default target</param>
            <param name="idAdditionaleTarget">Additionnale target</param>
            <param name="idWave">Study wave</param>
            <returns>DataSet ready to be displayed</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataAverageRules">
            <summary>
            Provides formatting rules for Sector Data Average
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataAverageRules.LINES_NUMBER">
            <summary>
            Nombre de lignes dans le tableau
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataAverageRules.COLUMNS_NUMBER">
            <summary>
            Nombre de colonnes dans le tableau
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataAverageRules.GetAverageFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Formats the date for sector Data synthesis 
            </summary>
            <param name="webSession">clients session</param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <returns>HTML string for the synthesis table</returns>		
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.Units">
            <summary>
            Fonctions de travail sur les unités
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Units.ConvertUnitValueToString(System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Unit)">
            <summary>
            Convertit la valeur de l'unité dans le format correspondant à l'unité
            </summary>
            <param name="unitValue">Valeur de l'unité</param>
            <param name="unit">Unité</param>
            <returns>Valeur convertie</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Units.ConvertUnitValueToString(System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Unit,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Convertit la valeur de l'unité dans le format correspondant à l'unité
            </summary>
            <param name="unitValue">Valeur de l'unité</param>
            <param name="unit">Unité</param>
            <param name="kEuroDecimals">nombre de chiffres après la virgule pour unité kilo euro</param>
            <param name="pagesDecimals">nombre de chiffres après la virgule pour unité pages</param>
            <param name="euroDecimals">nombre de chiffres après la virgule pour unité euro</param>
            <param name="grpDecimals">nombre de chiffres après la virgule pour unité grp</param>
            <param name="insertionDecimals">nombre de chiffres après la virgule pour unité insertion</param>
            <param name="mmcDecimals">nombre de chiffres après la virgule pour unité mm/col</param>
            <returns>Valeur convertie</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Units.ConvertUnitValueAndPdmToString(System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Unit,System.Boolean)">
            <summary>
            Convertit la valeur de l'unité dans le format correspondant à l'unité ainsi que les PDM
            </summary>
            <param name="unitValue">Valeur de l'unité</param>
            <param name="unit">Unité</param>
            <param name="pdm">pdm</param>
            <returns>Valeur convertie</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Units.ConvertUnitValueAndPdmToString(System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Unit,System.Boolean,System.Int32)">
            <summary>
            Convertit la valeur de l'unité dans le format correspondant à l'unité ainsi que les PDM
            </summary>
            <param name="unitValue">Valeur de l'unité</param>
            <param name="unit">Unité</param>
            <param name="pdm">pdm</param>
            <param name="decimals">nombre de chiffres après la virgule pour unité KEuro</param>
            <returns>Valeur convertie</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Units.ConvertToKEuro(System.String)">
            <summary>
            Converti une valeur Euro en KEuro
            </summary>
            <param name="unitValue">Valeur à traiter</param>
            <returns>Valeur converti</returns>
            <remarks>Division de la valeur par 1000</remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Units.ConvertToKEuro(System.String,System.Int32)">
            <summary>
            Converti une valeur Euro en KEuro
            </summary>
            <param name="unitValue">Valeur à traiter</param>
            <param name="decimals">Nombre de chiffres après la virgule</param>
            <returns>Valeur converti</returns>
            <remarks>Division de la valeur par 1000</remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Units.ConvertToPages(System.String)">
            <summary>
            Converti une valeur en Pages
            </summary>
            <param name="unitValue">Valeur à traiter</param>
            <returns>Valeur converti</returns>
            <remarks>Division de la valeur par 1000</remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Units.ConvertToPages(System.String,System.Int32)">
            <summary>
            Converti une valeur en Pages
            </summary>
            <param name="unitValue">Valeur à traiter</param>
            <param name="decimals">Nombre de chiffres après la virgule</param>
            <returns>Valeur converti</returns>
            <remarks>Division de la valeur par 1000</remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Units.getUnitsFromVehicleSelection(System.String)">
            <summary>
            Renvoie les unités disponibles en fonction des vehicule d'étude
            </summary>
            <param name="vehicleSelection">Liste des vehicule séprés par un virgule</param>
            <returns>Liste des unités disponibles</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Units.getUnitsFromAppmPress">
            <summary>
            Renvoie les unités disponibles de la press pour le module Appm
            </summary>
            <returns>Liste des unités Appm disponibles</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Units.getInserts">
            <summary>
            Renvoie la liste des encarts 
            </summary>
            <returns>liste des encarts</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.TvSponsorshipDataAccessException">
            <summary>
            Classe d'exception de la génération des données pour le parrainage télé
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.TvSponsorshipDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.TvSponsorshipDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.TvSponsorshipDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SynthesisDataAccessException">
            <summary>
            Bases de données synthèse
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SynthesisDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SynthesisDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SynthesisDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.NoDataException">
            <summary>
            Pas de données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.NoDataException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.NoDataException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.NoDataException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.SearchLevelDataAccess">
            <summary>
             Description résumée de SearchLevelDataAcess.
             </summary>
              <stereotype>utility</stereotype>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.SearchLevelDataAccess.CountItems(TNS.AdExpress.Constantes.Classification.DB.Table.name,System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Compte le nombre d'éléments contenant le terme contenu dans wordToSearch dans le niveau de nomenclature table
            </summary>
            <param name="table">Table de la nomenclature</param>
            <param name="wordToSearch">Terme recherché</param>
            <param name="webSession">Session du client</param>
            <returns>Le nombre d'élément de la nomenclature trouvé</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.PDVPlanDataAccess">
            <summary>
            This class calculates and returns the dateset for the Analysis of PDV of the Plan.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.PDVPlanDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean)">
            <summary>
             Calculates and returns the dataset for the APPM PDV Plan	 
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Starting date</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">Base Target</param>
            <param name="additionalTarget">Additional Target</param>
            <returns>dataset for synthesis of APPM</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.PDVPlanDataAccess.UniversgroupInvestment(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.String)">
            <summary>
            calculates the investment of the group for calculating PDV
            </summary>
            <param name="webSession">Clients Session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">start Date</param>
            <param name="dateEnd">End Date</param>
            <param name="baseTarget">Target of the base</param>
            <param name="additionalTarget">supplementary target</param>
            <param name="idGroup">id of the group for which pdv is to be calculated</param>
            <returns>Dataset containing investment of the group or competitor univers</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.PDVPlanDataAccess.GetGraphicsData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64)">
            <summary>
             Calculates and returns the dataset for the APPM PDV Plan Graphics	 
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Starting date</param>
            <param name="dateEnd">Ending date</param>
            <param name="additionalTarget">additional Target</param>
            <returns>dataset for synthesis of APPM</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.PDVPlanDataAccess.GetFields(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            This method returns the fields required for the selected univers
            </summary>
            <param name="webSession">Client session</param>	
            <param name="innerSelect">boolean that indicates that whether the fields are to be selected for
            inner select or the outer one</param>
            <returns>string of required fields</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.PDVPlanDataAccess.GetTables(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            This method returns the tables required for the selected univers
            </summary>
            <param name="webSession">Client session</param>
            <returns>string of required tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.PDVPlanDataAccess.GetJoins(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            This method returns the join conditions required for the selected univers
            </summary>		
            <param name="webSession">Client Session</param>
            <returns>string of required joins</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.PDVPlanDataAccess.GetGroupBy(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Fields method is used instead of this method for the time being as the same fields are required for the groupby condition
            This method returns the groupby fields required for the selected univers
            </summary>
            <param name="webSession">Client Session</param>
            <returns>string of required group by fields</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAnalysisUI">
            <summary>
            Interface Utilisateur d'un plan Media
            Cette classe génère suivant le format de sortie le code pour afficher 
            un plan media.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAnalysisUI.GetMediaPlanAnalysisWithMediaDetailLevelHtmlUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Crée le code HTML pour afficher une plan média
            </summary>
            <param name="tab">Tableau contenant les données</param>
            <param name="webSession">Session du client</param>
            <param name="page">Page qui affiche le Plan Média</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAnalysisUI.GetCreativeMediaPlanAnalysisHtmlUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Crée le code HTML pour afficher une plan média à partir de Creative Explorer
            </summary>
            <param name="tab">Tableau contenant les données</param>
            <param name="webSession">Session du client</param>
            <param name="page">Page qui affiche le Plan Média</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAnalysisUI.GetCreativeMediaPlanAnalysisExcelUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Crée le code HTML pour Excel pour afficher un plan media
            </summary>
            <param name="tab">Tableau contenant les données</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAnalysisUI.GetMediaPlanAnalysisHtmlUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Crée le code HTML pour afficher une plan média
            </summary>
            <param name="tab">Tableau contenant les données</param>
            <param name="webSession">Session du client</param>
            <param name="page">Page qui affiche le Plan Média</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAnalysisUI.GetMediaPlanAnalysisWithMediaDetailLevelExcelUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Crée le code HTML pour Excel pour afficher un plan media
            </summary>
            <param name="tab">Tableau contenant les données</param>
            <param name="webSession">Session du client</param>
            <param name="showValue">Valeurs dans les cellules</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAnalysisUI.GetMediaPlanAnalysisExcelUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Crée le code HTML pour Excel pour afficher un plan media
            </summary>
            <param name="tab">Tableau contenant les données</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.ProofUI">
            <summary>
            Classe pour la construction du code html de la fiche justificative
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.ProofUI.GetHtml(System.Web.UI.Page,TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.Int32,System.Int32,System.String)">
            <summary>
            Méthode qui construit le code html
            </summary>
            <param name="page">Page</param>
            <param name="dataSource">DataSource</param>
            <param name="webSession">Session</param>
            <param name="idMedia">Identifiant du media</param>
            <param name="idProduct">Identifiant du produit</param>
            <param name="date">Date</param>
            <param name="dateParution">Date parution</param>
            <param name="pageNumber">Numéro de la page</param>
            <returns>Code html</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.PeriodicityPlanChartUI">
            <summary>
            Classe pour construire les graphiques des périodicité plan
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PeriodicityPlanChartUI.#ctor">
            <summary>
            constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PeriodicityPlanChartUI.PeriodicityPlanChart(TNS.AdExpress.Web.UI.Results.APPM.APPMChartUI,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Graphiques périodicity plan
            </summary>
            <param name="appmChart">Objet Webcontrol</param>
            <param name="webSession">Session du client</param>
            <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="dateBegin">date du debut</param>
            <param name="dateEnd">date de fin</param>
            <param name="baseTarget">cible de base</param>
            <param name="additionalTarget">cible seléctionnée</param>
            <param name="typeFlash">Si flash true</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PeriodicityPlanChartUI.GetSeriesDataBase(System.Data.DataTable,System.String[]@,System.Double[]@)">
            <summary>
            Obtient les séries de valeurs des unités pour la cible de base à afficher graphiquement
            </summary>
            <param name="dt">table de données</param>
            <param name="xValues">libellés du graphique</param>
            <param name="yValues">valeurs pour graphique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PeriodicityPlanChartUI.GetSeriesDataAdditional(System.Data.DataTable,System.String[]@,System.Double[]@)">
            <summary>
            Obtient les séries de valeurs des unités pour la cible sélectionnée à afficher graphiquement
            </summary>
            <param name="dt">table de données</param>
            <param name="xValues">libellés du graphique</param>
            <param name="yValues">valeurs pour graphique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PeriodicityPlanChartUI.GetSeriesDataCgrp(System.Data.DataTable,System.String[]@,System.Double[]@,System.String[]@,System.Double[]@,System.Double@)">
            <summary>
            Obtient les séries de valeurs des unités pour la cible sélectionnée à afficher graphiquement
            </summary>
            <param name="dt">table de données</param>
            <param name="xValuesBase">libellés du graphique</param>
            <param name="yValuesBase">valeurs pour graphique</param>
            <param name="xValuesSelected">Liebllés sélectionnée</param>
            <param name="yValuesSelected">Valeur sélectionnée</param>
            <param name="maxScale">Echel maximum</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PeriodicityPlanChartUI.SetSeriesPeriodicity(System.Data.DataTable,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.Series,System.String[],System.Double[],System.Drawing.Color[],System.String,System.Boolean)">
            <summary>
            Crétion du graphique unité(grp,euro,isertion,page) 
            </summary>
            <param name="dt">tableau de résultats</param>
            <param name="chartArea">contenant objet graphique</param>
            <param name="series">séries de valeurs</param>
            <param name="xValues">séries de libellés</param>
            <param name="yValues">séries de valeurs</param>
            <param name="barColors">couleurs du graphique</param>
            <param name="typeFlash">sortie flash</param>
            <param name="chartAreaName">Nom du conteneur de l'image</param>
            <returns>séries de valeurs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PeriodicityPlanChartUI.SetSeriesBarPeriodicity(System.Data.DataTable,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.Series,System.String[],System.Double[],System.Drawing.Color,System.String,System.Double,System.Boolean)">
             <summary>
             Crétion du graphique unité Cgrp (histogramme)
             </summary>
             <param name="dt">tableau de résultats</param>
             <param name="chartArea">contenant objet graphique</param>
             <param name="series">séries de valeurs</param>
             <param name="xValues">séries de libellés</param>
             <param name="yValues">séries de valeurs</param>
            <param name="barColor">couleurs du graphique</param>
             <param name="chartAreaName">Nom du conteneur de l'image</param>
             <param name="maxScale">echelle maximum</param>
             <param name="typeFlash">sortie flash</param>
             <returns>séries de valeurs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PeriodicityPlanChartUI.InitializeComponent(TNS.AdExpress.Web.UI.Results.APPM.APPMChartUI,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.ChartArea,System.Boolean)">
            <summary>
            Initialise les styles du webcontrol pour média radio et télé
            </summary>
            <param name="appmChart">Objet Webcontrol</param>
            <param name="chartAreaUnit">conteneur de l'image répartition unité</param>
            <param name="chartAreaCgrp">conteneur de l'image répartition pour Cgrp</param>
            <param name="typeFlash">sortie flash</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PeriodicityPlanChartUI.InitializeComponentGrp(TNS.AdExpress.Web.UI.Results.APPM.APPMChartUI,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.ChartArea,System.Boolean)">
            <summary>
            Initialise les styles du webcontrol pour média radio et télé
            </summary>
            <param name="appmChart">Objet Webcontrol</param>
            <param name="chartAreaUnit">conteneur de l'image répartition unité</param>
            <param name="chartAreaUnitadditional">conteneur de l'image répartition pour cible selectionnée</param>
            <param name="chartAreaCgrp">conteneur de l'image répartition pour Cgrp</param>
            <param name="typeFlash">sortie flash</param>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI">
            <summary>
            Classe utilisée dans l'affichage des répertoires dans Mon Adexpress
            ou Mes Univers
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI._script">
            <summary>
            Script
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI._request">
            <summary>
            Type de la requête
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI._branch">
            <summary>
            Branche
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI._webSession">
            <summary>
            Session du client
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI._width">
            <summary>
            Largeur
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI._allowedLevels">
            <summary>
            Allowed universe levels
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI.#ctor">
            <summary>
            Constructeur de base 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI.type,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="webSession">Session du client</param>
            <param name="request">Type de requête (session ou univers)</param>
            <param name="width">Taille de la table</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="webSession">webSession</param>
            <param name="branch">advertiser, média, product, nothing</param>
            <param name="width">Taille de la table</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Int32,System.Collections.Generic.List{System.Int64})">
            <summary>
            Constructor
            </summary>
            <param name="webSession">web Session</param>
            <param name="branch">advertiser, média, product, nothing</param>
            <param name="width">Table width</param>
            <param name="allowedLevels">Allowed universe levels</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI.GetSelectionTableHtmlUI(System.Int32,System.String)">
            <summary>
            Méthode utilisée pour l'affichage d'un tableau contenant un type de répertoire 
            (Mon AdExpress, Mes Univers...)
            </summary>
            <param name="valueTable">valeur utilisée pour choisir le bon script</param>
            <param name="ListUniverseClientDescription">ID_UNIVERSE_CLIENT_DESCRIPTION</param>
            <returns>Retourne le tableau correspondant au choix fait au niveau du constructeur</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI.GetSelectionTableHtmlUI(System.Int32,System.String,System.Collections.Generic.List{System.Int64})">
            <summary>
            Méthode utilisée pour l'affichage d'un tableau contenant un type de répertoire 
            (Mon AdExpress, Mes Univers...)
            </summary>
            <param name="valueTable">valeur utilisée pour choisir le bon script</param>
            <param name="ListUniverseClientDescription">ID_UNIVERSE_CLIENT_DESCRIPTION</param>
            <param name="allowedLevels">Allowed levels</param>
            <returns>Retourne le tableau correspondant au choix fait au niveau du constructeur</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI.Script">
            <summary>
            Obtient le script javaScript
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI.type">
            <summary>
            Enumérateur type de requête
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI.type.mySession">
            <summary>
            Session dans Mon AdExpress
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.MyAdExpress.MySessionsUI.type.universe">
            <summary>
            Univers dans Mes Univers 
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Selections.Grp.WavesRules">
            <summary>
            Classe gérant la sélection automatique des vagues.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Selections.Grp.WavesRules.GetWaves(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Obtient la vague automatiquement en fonction de la période de début sélectionnée par l'utilisateur.
            </summary>
            <param name="webSession">session du client</param>
            <param name="dataSource">source de données</param>
            <returns>vague sélectionnée</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PeriodicityPlanChartUIException">
            <summary>
            IHM: Périodicité du plan
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PeriodicityPlanChartUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PeriodicityPlanChartUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PeriodicityPlanChartUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.FunctionsDataAccessException">
            <summary>
            Base de données: Fonctions
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FunctionsDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FunctionsDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FunctionsDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.FilesItemRulesException">
            <summary>
            Rules: Info/News
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FilesItemRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FilesItemRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FilesItemRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.DynamicSystemException">
            <summary>
            DynamicSystemException thrown whenever an error occured while accessing functionalities from dynamic analysis module
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicSystemException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicSystemException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.APPMMediaPlanDataAccessException">
            <summary>
            APPMMediaPlanUIExcpetion thrown while Executing the query for Media Plan: APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMMediaPlanDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMMediaPlanDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMMediaPlanDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanDataAccessException">
            <summary>
            AnalyseFamilyInterestPlanException thorwn whenever an error occures while accessing data for AnalyseFamilyInterest : APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.AdvertiserListException">
            <summary>
            Gestion des exceptions de AdvertiserList
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AdvertiserListException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AdvertiserListException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AdvertiserListException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Programs.ProgramTypeListDataAccess">
            <summary>
            Chargement de liste : genres émissions, émissions
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Programs.ProgramTypeListDataAccess.GetProgramTypeListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Charge la liste des genres d'émissions qui peuvent être sélectionnés
            </summary>
            <param name="webSession">WebSession</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Periods.PortofolioDateDataAccess">
            <summary>
            Classe d'accès aux données pour le module portefeuille
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Periods.PortofolioDateDataAccess.GetListDate(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String,System.Boolean)">
            <summary>
            Retourne la liste des dates
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant suppport</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <param name="conditionEndDate">Mettre une condition sur la date de fin</param>
            <returns></returns>	
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Periods.PortofolioDateDataAccess.LastPublication(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64)">
            <summary>
            Récupère la date de dernière parution d'un média
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Periods.PortofolioDateDataAccess.GetTable(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Donne la table à utiliser pour le vehicle indiqué
            </summary>
            <param name="idVehicle">Identifiant du vehicle</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand le cas du vehicle spécifié n'est pas traité
            </exception>
            <returns>Chaine contenant le nom de la table correspondante</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Medias.CountryListDataAccess">
            <summary>
            Charge la liste des pays.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.CountryListDataAccess.DetailCountryListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Retourne la liste des pays avec les supports associés
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Dataset avec 4 colonnes : id_country, title, id_media, media</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.CountryListDataAccess.keyWordCountryListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Retourne la liste des Pays avec les supports associés ayant une partie du mot keyWord 
            </summary>
            <param name="webSession">Session</param>
            <param name="keyWord">Mot clef</param>
            <param name="listMedia">Liste des supports (media) déjà sélectionnés</param>
            <returns>Données</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Grp.TargetListDataAccess">
            <summary>
            Traite les cibles AEPM  
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Grp.TargetListDataAccess.GetAEPMTargetListDataAccess(System.String,System.String)">
            <summary>
            Liste des cibles AEPM
            </summary>
            <param name="idWave">identifiant(s) de(s) vague(s)</param>
            <param name="connectionString">Chaîne de connexion</param>
            <returns>liste des cibles AEPM</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Grp.TargetListDataAccess.GetAEPMTargetListDataAccess(System.String,System.String,System.String)">
            <summary>
            Libellé de cibles AEPM
            </summary>
            <param name="idWave">identifiant(s) de(s) vague(s)</param>
            <param name="targets">Libellés cibles (séparés par une virgule)</param>
            <param name="connectionString">Chaîne de connection</param>
            <returns>Libellé des cibles AEPM</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Grp.TargetListDataAccess.GetAEPMTargetListFromIDSDataAccess(System.String,System.String,System.String)">
            <summary>
            Libellé de cibles AEPM
            </summary>
            <param name="idWave">identifiant(s) de(s) vague(s)</param>
            <param name="targets">identetifiants cibles (séparés par une virgule)</param>
            <param name="connectionString">Chaîne de connection</param>
            <returns>Libellé des cibles AEPM</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.VisualChoiceDataAccess">
            <summary>
            Obtient les données nécessaires au choix des visuels.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.VisualChoiceDataAccess.GetMediaListData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64)">
            <summary>
            Obtient la liste des supports actifs pour la sélection produit.
            </summary>
            <param name="webSession">session du client</param>
            <param name="dataSource">source de données</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>		
            <param name="additionalTarget">cible supplémentaire</param>
            <returns>données des types d'emplacements du plan</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.VisualChoiceDataAccess.GetVisualListData(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int32,System.Int32,System.Int64)">
             <summary>
             Méthode pour l'execution de la requête qui récupère les données de la fiche justificative
             </summary>
             <param name="dataSource">DataSource</param>
             <param name="webSession">Session</param>
             <param name="idMedia">Identifiant du media</param>
             <param name="dateBegin">date de début</param>
             <param name="dateEnd">date de fin</param>
            <param name="additionalTarget">cible supplémentaire</param>
             <returns>DataSet contenant les données</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer">
            <summary>
             Creative comparer
             </summary>
             <author>Guillaume.Ragneau</author>
             <since>lundi 13 août 2007 11:42:23</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer._caption">
            <summary>
            Filter Caption
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer._captionId">
            <summary>
            Filter Caption Id (used to display diffent captions depending on language
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer._id">
            <summary>
            Filter ID
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer._sort">
            <summary>
            Sort order
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer.#ctor(System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer.GetCaption">
            <summary>
            Get Filter Caption
            </summary>
            <returns>Filter Caption</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer.GetCaptionId">
            <summary>
            Get Filter Caption Id
            </summary>
            <returns>Filter Caption</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer.GetId">
            <summary>
            Get Filter Id
            </summary>
            <returns>Filter Id</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer.SetId(System.Int32)">
            <summary>
            Set Comparer Id
            </summary>
            <param name="id">Id of the comparer</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer.SetOrder(TNS.FrameWork.WebResultUI.TableControl.SortOrder)">
            <summary>
            Set Sort Order
            </summary>
            <param name="sort">Sort Order</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer.GetSortOrder">
            <summary>
            Get Sort Order
            </summary>
            <returns>Sort Order</returns>
        </member>
        <!-- Commentaire XML incorrect ignoré pour le membre "M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer.Compare(TNS.FrameWork.WebResultUI.TableControl.ITableElement,TNS.FrameWork.WebResultUI.TableControl.ITableElement)" -->
        <!-- Commentaire XML incorrect ignoré pour le membre "M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeComparer.Compare(TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)" -->
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.CreativeOutdoor">
            <summary>
             CreativeItem provides information for the display of a outdoor creative
             </summary>
              <author>G Ragneau</author>
              <since>09/08/2007</since>
              <stereotype>entity</stereotype>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem">
            <summary>
             CreativeItem provides information for the display of a creative
             </summary>
              <author>G Ragneau</author>
              <since>09/08/2007</since>
              <stereotype>entity</stereotype>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem._id">
            <summary>Version Id</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem._path">
            <summary>Version path</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem._advertiser">
            <summary>Annonceur</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem._product">
             <summary>Produit</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem._group">
             <summary>groupe de produit</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem._Budget">
            <summary>
            Creative budget
            </summary>
            <author>Guillaume.Ragneau</author>
            <since>lundi 13 août 2007</since>		
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem._mediaNb">
            <summary>
            Number of active media
            </summary>
            <author>Guillaume.Ragneau</author>
            <since>mardi 20 août 2007</since>		
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem._insertNb">
             <summary>
             Number of insertion of the creative
             </summary>
            <author>Guillaume.Ragneau</author>
            <since>mardi 20 août 2007</since>		
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem._adressId">
            <summary>
            Adresse pour le GAD
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem._session">
            <summary>
            Web Session
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem.#ctor(System.Int64)">
            <summary>Constructor</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem.Render(System.Text.StringBuilder)">
            <summary>
            Render Table Element
            </summary>
            <param name="output">Rendered code output</param>
            <author>Guillaume.Ragneau</author>
            <since>mardi 14 août 2007</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem.Render(System.Text.StringBuilder,System.String)">
            <summary>
            Render Table Element
            </summary>
            <param name="output">Rendered code output</param>
            <param name="cssStyle">Css Style of the element</param>
            <author>Guillaume.Ragneau</author>
            <since>mardi 14 août 2007</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem.GetInstance(System.Data.DataRow,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Build instanc of CreativeRadio using data containded in row
            </summary>
            <param name="row">Data container</param>
            <param name="session">Web Session</param>
            <returns>New CreativeItem Instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem.FieldInstance(System.Data.DataRow,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Fill instance with data
            </summary>
            <param name="row">Data Container</param>
            <param name="item">item to fill</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem.Id">
            <summary>Get / Set Id Version</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem.Path">
            <summary>Get / Set Version Path</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem.Advertiser">
            <summary>Get / Set Annonceur</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem.Product">
            <summary>Get / Set Produit</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem.Group">
            <summary>Get / Set groupe de produit</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem.Budget">
            <summary>
            Get / Set Budget
            </summary>
            <author>Guillaume.Ragneau</author>
            <since>lundi 13 août 2007</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem.MediaNb">
            <summary>
             Get / Set Number of active media
            </summary>
            <author>Guillaume.Ragneau</author>
            <since>mardi 20 août 2007</since>		
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem.InsertNb">
             <summary>
             Get / Set Number of insertion of the creative
             </summary>
            <author>Guillaume.Ragneau</author>
            <since>mardi 20 août 2007</since>		
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem.Session">
            <summary>
            Get / Set Web Session
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeOutdoor.#ctor(System.Int64)">
            <summary>Constructor</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeOutdoor.GetInstance(System.Data.DataRow,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Build instance of CreativeRadio using data containded in row
            </summary>
            <param name="row">Data container</param>
            <param name="session">Web Session</param>
            <returns>New CreativeItem Instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeOutdoor.FieldInstance(System.Data.DataRow,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Fill instance with data
            </summary>
            <param name="row">Data Container</param>
            <param name="item">item to fill</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeOutdoor.Render(System.Text.StringBuilder)">
            <summary>
            render creative
            </summary>
            <param name="output">Output</param>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Selections.Periods.RecapBusinessFacade">
            <summary>
            Traite les périodes des récaps
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Selections.Periods.RecapBusinessFacade.GetLastLoadedYear">
            <summary>
            Obtient la dernière année chargée dans la base de données pour les recap.
            </summary>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.RecapDataAccessException">Erreur lors de l'ouverture, fermeture de la base données ou de l'execution de la requête</exception>
            <returns>Dernière année chargée</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Selections.Periods.PortofolioDateUI">
            <summary>
            Classe utilisée dans l'affichage des dates
            pour les modules portefeuille
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Selections.Periods.PortofolioDateUI.ListMedia(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Affiche la liste des numéros médias
            </summary>
            <param name="webSession">Session Client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns>Code HTML pour la liste des numéros médias</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Selections.Periods.PortofolioDateUI.GetDayOfWeek(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Donne le jour de la semaine
            </summary>
            <param name="webSession">Session client</param>
            <param name="dayOfWeek">Jour de la semaine en anglais</param>
            <returns>Donne le jour de la semaine</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.IndicatorChartUI">
            <summary>
            Classe pour construire les graphiques
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.IndicatorChartUI.MEDIA_STRATEGY_HEIGHT_GRAPHIC">
            <summary>
            Hauteur d'un graphique stratégie média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorChartUI.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorChartUI.PalmaresBar(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.PalmaresRecap.typeYearSelected,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,System.Boolean)">
            <summary>
            Histogramme pour palmares
            </summary>
            <param name="webSession">Session client</param>
            <param name="typeYear">Type d'année</param>
            <param name="tableType">Type de table</param>
            <param name="flashType">si oui flash sinon image jpeg</param>		
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorChartUI.EvolutionBar(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,System.Boolean)">
            <summary>
            Affiche un histogramme
            </summary>
            <param name="webSession">Session</param>
            <param name="tableType">Annonceurs ou référence</param>
            <param name="typeFlash">si oui flash sinon image jpeg</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorChartUI.SeasonalityLine(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Boolean)">
            <summary>
            Saisonnalité
            </summary>
            <param name="webSession">Session du client</param>
            <param name="bigFormat">True si grand format</param>
            <param name="typeFlash">si oui flash sinon image jpeg</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorChartUI.MediaStrategyBar(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Graphiques Stratégie Média
            </summary>
            <param name="webSession">Session du client</param>
            <param name="typeFlash">Si flash true</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorChartUI.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overrided to add "param" tags for contextual menu managment
            </summary>
            <param name="writer">Writer</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorChartUI.AddHeader(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Ajoute en-tête
            </summary>
            <param name="webSession">Session client</param>
            <param name="isNotFlashType">type image</param>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.CompetitorMediaPlanAnalysisUI">
            <summary>
            Interface Utilisateur d'un plan Media Concurentiel
            Cette classe génère suivant le format de sortie le code pour afficher 
            un plan media concurentiel.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorMediaPlanAnalysisUI.GetMediaPlanAnalysisHtmlUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Crée le code HTML pour afficher une plan média
            </summary>
            <param name="tab">Tableau contenant les données</param>
            <param name="webSession">Session du client</param>
            <param name="page">Page qui affiche le Plan Média</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorMediaPlanAnalysisUI.GetMediaPlanAnalysisExcelUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Crée le code HTML pour Excel pour afficher un plan media
            </summary>
            <param name="tab">Tableau contenant les données</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.SynthesisUI">
            <summary>
            This class claculates the HTML table for the APPM synthesis.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.SynthesisUI.GetHTML(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            This method generates the HTML for the APPM Synthesis Tab
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.SynthesisUI.GetHTML(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.String,System.String,System.Boolean)">
            <summary>
            This method generates the HTML for the APPM Synthesis by version Tab
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <param name="idVersion">ID Version</param>
            <param name="firstInsertionDate">First insertion date</param>
            <param name="excel">Excel parameter for display the right clic information</param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.SynthesisUI.GetExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Excel de Synthèse APPM
            </summary>
            <param name="webSession">session client</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="baseTarget">cible de base</param>
            <param name="additionalTarget">cible supplementaire</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.SynthesisUI.GetExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.String,System.String,System.Boolean)">
            <summary>
            Excel de Synthèse APPM par version
            </summary>
            <param name="webSession">session client</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="baseTarget">cible de base</param>
            <param name="additionalTarget">cible supplementaire</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="idVersion">ID Version</param>
            <param name="firstInsertionDate">First insertion date</param>
            <param name="excel">Excel parameter for display the right clic information</param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.SynthesisUI.InvertStyle(System.String)">
            <summary>
            inverts the style for alternating rows
            </summary>
            <param name="style">the style string to be inverted</param>
            <returns>the inverted style</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.PeriodicityPlanUI">
            <summary>
            Périodicité Plan APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PeriodicityPlanUI.PeriodicityPlan(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean)">
             <summary>
             Périodicité Plan APPM
             </summary>
             <param name="webSession">session client</param>
             <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="idWave">Identifiant de la vague</param>
             <param name="dateBegin">date de début</param>
             <param name="dateEnd">date de fin</param>
             <param name="idBaseTarget">Identifiant de la cible de base</param>
             <param name="idAdditionalTarget">Identifiant de la cible sélectionnée</param>
             <param name="excel">le boolean excel</param>
             <returns>HTML string </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PeriodicityPlanUI.GetExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Excel de Périodicité plan APPM
            </summary>
            <param name="webSession">session client</param>
            <param name="dataSource">dataSource pour la creation de dataset </param>
            <param name="idWave">Identifiant de la vague</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="idBaseTarget">cible de base</param>
            <param name="idAdditionalTarget">cible supplementaire</param>
            <param name="excel">boolean pour excel</param>
            <returns>Excel pour périodicité</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.MediaPlanUI">
            <summary>
            This class is used to generate user interface for plan media in HTML and EXCEL format.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.MediaPlanUI.GetHTML(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean)">
            <summary>
            This method generates the HTML for the Media Plan.
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <param name="excel">boolean to indicate whether the HTML generated is for HTML table or Excel </param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.MediaPlanUI.GetZoomHTML(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.String,System.Int64,System.Int64,System.Boolean,System.String)">
            <summary>
            This method generates the HTML for the Media Plan by day.
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>		
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <param name="excel">boolean to indicate whether the HTML generated is for HTML table or Excel </param>
            <param name="url">link to next page</param>
            <param name="zoomDate">detail date</param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.MediaPlanUI.GetWithVersionHTML(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean)">
            <summary>
            This method generates the HTML for the Media Plan.
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <param name="isExported">boolean to indicate whether the HTML generated is for HTML table or Export in any other format </param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.MediaPlanUI.GetWithVersionExportHTML(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean,System.Text.StringBuilder@,System.Collections.ArrayList@)">
            <summary>
            This method generates the HTML for the Media Plan.
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <param name="isExported">boolean to indicate whether the HTML generated is for HTML table or Export in any other format </param>
            <param name="htmlHeader">Entête du fichier HTML</param>
            <param name="partieHTML">Liste des parties du code HTML</param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.MediaPlanUI.GetExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            This method generates the HTML for the excel of Media Plan.
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.MediaPlanUI.GetZoomExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.String,System.Int64,System.Int64,System.String)">
            <summary>
            This method generates the HTML for the excel of Media Plan detail by day.
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="zoomDate">detail date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>		
            <param name="url">url</param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.MediaPlanUI.GetSloganIdIndex(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient la colonne contenant le id_slogan
            Si le détail support ne contient pas le niveau slogan, elle retoune -1
            </summary>
            <param name="webSession">Session client</param>
            <returns>Colonne contenant l'id_slogan, -1 si pas de slogan</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Selections.Medias.MediaPublicationDatesRules">
            <summary>
            This class is used to format the data for publication dates of media
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Selections.Medias.MediaPublicationDatesRules.GetData">
            <summary>
            This method is used to construct Hashtable of date of publications with in the specified period 
            </summary>
            <returns>return the Hashtable of medias along with their publication dates</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.IndicatorSeasonalityRules">
            <summary>
            Classe métier de traitement des données issues de la base pour 
            l'indicateur saisonnalité (analyse sectorielle).
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSeasonalityRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Donne sur le total support de l'univers,marché ou famille, ou sur les
            annonceurs de références ou concurrents :
            -les investissements de l'année N
            -une évolution N vs N-1 (uniquement dans le ca d'une étude comparative)
            -le nombre de référence
            -le budget moyen par référence
            -le 1er annonceur en Ke et SOV (uniquement pour les lignes total produits éventuels)
            -la 1ere référence en Ke et SOV (uniquement pour les lignes total produits éventuels)
            </summary>
            <remarks>Cette méthode est utilisée pour la présentation tableau des données.</remarks>
            <param name="webSession">session du client</param>		
            <returns>tableau mensuel comparatif mois par mois</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSeasonalityRules.GetChartFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Donne sur le total support de l'univers,marché ou famille, ou sur les
            annonceurs de références ou concurrents :
            -les investissements de l'année N		
            </summary>
            <remarks>Cette méthode est utilisée pour la présentation graphique des données.</remarks>
            <param name="webSession">session du client</param>		
            <returns>tableau mensuel comparatif mois par mois</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSeasonalityRules.GetSeasonalityFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Fonction qui formate un DataSet en un tableau mensuel comparatif mois par mois des investissements 
            </summary>
            <param name="webSession">session du client</param>		
            <returns>Tableau formaté</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSeasonalityRules.GetSeasonalityTotalFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion)">
            <summary>
            Fonction qui formate un DataSet en un tableau mensuel comparatif mois par mois des investissements 
            Pour le total periode (univers ou famille ou marché)
            Renvoie aussi le premier annonceur et/ou la première référence
            </summary>
            <param name="webSession">session du client</param>
            <param name="comparisonCriterion">Critère de comparaison</param>		
            <returns>Tableau formaté</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSeasonalityRules.FillMonthIndexColum(System.Object[0:,0:],System.Int64,System.Int32,System.Int32,System.DateTime,System.Int64,System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Rempli le tableau d'objets avec les libéllés des mois sélectionnés
            </summary>
            <param name="tab">tableau bidimensionnelle d'object</param>
            <param name="nbTabLines">nombre maximale de lignes</param>
            <param name="beginmonth">premier du mois de la période sélectionnée</param>
            <param name="endmonth">dernier mois de la période sélectionnée</param>
            <param name="MONTH_COLUMN_INDEX">index de colonne pour le libéllé d'un mois</param>
            <param name="VALUE_MONTH_COLUMN_INDEX">index de colonne pour l'identifiant d'un mois</param>
            <param name="PeriodEndDate">fin de la période étudiée</param>
            <param name="webSession">Session client</param>
            <returns>tabelau objet 2 dimensions</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSeasonalityRules.GetGlobalParams(System.Data.DataTable,System.DateTime,System.DateTime,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Boolean)">
            <summary>
            Retourne le nombre d'annonceurs ou références , le 1er annonceur ou référence et son investissement
            </summary>
            <param name="dt">DataTable</param>
            <param name="PeriodBeginningDate">debut date etude</param>
            <param name="PeriodEndDate">fin date etude</param>
            <param name="webSession">Session du client</param>
            <param name="nbMaxColumn">nombre maximal de colonnes pour le tableau</param>	
            <param name="isAdvertCalculation">Est ce que le calcule concerne les annonceurs</param>	
            <returns> object[] avec nombre d'annonceurs , le 1er annonceur et son investissement</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSeasonalityRules.TotalInvestmentByMonth(System.Int32,System.Int32,System.Data.DataTable,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Calcul investissement total par mois
            </summary>
            <param name="monthID">ID mois</param>
            <param name="YearID">ID année etudiée</param>
            <param name="dt">source de données</param>
            <param name="webSession">Session client</param>
            <returns>investissement total par mois</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSeasonalityRules.GlobalCompute(System.Data.DataTable,System.Object[0:,0:],System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.DateTime,System.DateTime,System.Int32[])">
            <summary>
            calcule totaux investissement, evolution, nb référence, budget moyen
            </summary>
            <param name="dt">Datatable source de données</param>
            <param name="tab">tableau objet à 2 dimension</param>
            <param name="StartIndex">index debut tableau</param>
            <param name="webSession">session client</param>
            <param name="TotalRef">nombre total de références</param>
            <param name="PeriodBeginningDate">debut de la période étudiée</param>
            <param name="PeriodEndDate">fin de la période étudiée</param>
            <param name="TotNbRefByMonth">nombre total de références par mois</param>
            <returns>tableau (resultats) objet à 2 dimension</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSeasonalityRules.IsAdvertiserSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Verifie si des annonceurs (référence et/ou concurrents)ont été sélectionnés
            </summary>
            <param name="webSession">session du client</param>
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.GenericMediaPlanRules">
            <summary>
            Gestion metier des plans media
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.GenericMediaPlanRules.GetFormattedTableWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod,System.Int64)">
            <summary>
            Fonction qui formate un DataSet en un tableau qui servira à faire un Calendrier d'actions
            </summary>
            <param name="webSession">Session du client</param>
            <param name="period">PStudy perdio (begin, end and period type)</param>
            <param name="vehicleId">Vehicle Id</param>
            <returns>Tableau résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.GenericMediaPlanRules.GetAdNetTrackFormattedTableWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Fonction qui formate un DataSet en un tableau qui servira à faire un Calendrier d'actions AdNetTrack
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Tableau résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.GenericMediaPlanRules.GetFormattedTableWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Fonction qui formate un DataSet en un tableau qui servira à faire un Calendrier d'actions
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Tableau résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.GenericMediaPlanRules.GetFormattedTableWithMediaDetailLevelForZoom(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Fonction qui formate un DataSet en un tableau qui servira à faire un Calendrier d'actions
            </summary>
            <param name="webSession">Session du client</param>
            <param name="zoomDate">Zoom</param>
            <returns>Tableau résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.GenericMediaPlanRules.GetAdNetTrackFormattedTableWithMediaDetailLevelForZoom(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Fonction qui formate un DataSet en un tableau qui servira à faire un Calendrier d'actions pour AdNetTrack
            </summary>
            <param name="webSession">Session du client</param>
            <param name="zoomDate">Zoom</param>
            <returns>Tableau résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.GenericMediaPlanRules.GetFormattedTableWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.Boolean,System.Int64)">
            <summary>
            Fonction qui formate un DataSet en un tableau qui servira à faire un Calendrier d'actions
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginUserDate">Date utilisateur de début</param>
            <param name="endUserDate">Date utilisateur de fin</param>
            <param name="zoom">Mode Zoom</param>
            <param name="vehicleId">Vehicle Id</param>
            <returns>Tableau résultat</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.CompetitorRules">
            <summary>
            Traitements métiers des alertes concurrentielles
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Rules.Results.CompetitorRules.NB_COLUMNS_TO_ADD">
            <summary>
            Nombre de colonnes à ajouter aux tableaux de résultat
            </summary>
            <remarks>Début de ligne et fin de ligne</remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le tableau contenant l'ensemble des résultats
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetSynthesisData(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le tableau contenant la synthèse du nombre d’éléments produits Communs, Absents, Exclusifs. 
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.InitIndexAndValues(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.SelectionGroup[],TNS.AdExpress.Web.Common.Results.SelectionSubGroup[],System.Int32@,System.Collections.Hashtable,System.String@,System.Int32@,System.Data.DataTable)">
            <summary>
            Initialisation des tableaux d'indexes et valeurs sur les groupes de séléection et médias
            </summary>
            <param name="webSession">Session du client</param>
            <param name="groupMediaTotalIndex">(out) Tableau d'indexes des groupes de sélection</param>
            <param name="subGroupMediaTotalIndex">Liste des index des sous groupes de sélection</param>
            <param name="nbUnivers">(out)Nombre d'univers</param>
            <param name="mediaIndex">(out Tableau d'indexes des médias</param>
            <param name="mediaListForLabelSearch">(out)Liste des codes des médias</param>
            <param name="maxIndex">(out)Index des colonnes maximum</param>
            <param name="dtMedia">Liste des média avec le niveau de détail colonne correspondant</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetResultTable(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int64,TNS.AdExpress.Web.Common.Results.SelectionGroup[],TNS.AdExpress.Web.Common.Results.SelectionSubGroup[],System.Collections.Hashtable,System.String,System.Int32)">
            <summary>
            Formattage d'un tableau de résultat à partir d'un tableau de données
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tabData">Table de données</param>
            <param name="nbLineInTabData">Nombre de ligne dans le tableau</param>
            <param name="groupMediaTotalIndex">Liste des groupes de sélection</param>
            <param name="subGroupMediaTotalIndex">Liste des sous groupes de sélection</param>
            <param name="mediaIndex">Liste des Média</param>
            <param name="mediaListForLabelSearch">Liste des médias</param>
            <param name="nbUnivers">Nombre d'univers</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetNbLineFromPreformatedTableToResultTable(System.Object[0:,0:])">
            <summary>
            Obtient le nombre de ligne du tableau de résultat à partir d'un tableau préformaté
            </summary>
            <param name="tabData">Tableau préformaté</param>
            <returns>Nombre de ligne du tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetPreformatedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.SelectionGroup[],TNS.AdExpress.Web.Common.Results.SelectionSubGroup[],System.Collections.Hashtable,System.Int32@,System.Int64@,System.Int32@,System.String@)">
            <summary>
            Obtient le tableau de résultat préformaté pour une alerte Concurrentielle
            </summary>
            <param name="webSession">Session du client</param>
            <param name="groupMediaTotalIndex">Liste des index des groupes de sélection</param>
            <param name="subGroupMediaTotalIndex">Liste des index des sous groupes de sélection</param>
            <param name="mediaIndex">Liste des index des médias</param>
            <param name="nbCol">Nombre de colonnes du tableau de résultat</param>
            <param name="nbLineInNewTable">(out) Nombre de ligne du tableau de résultat</param>
            <param name="nbUnivers">(out)Nombre d'univers</param>
            <param name="mediaListForLabelSearch">(out)Liste des codes des médias</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetL1Id(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow)">
            <summary>
            Obtient l'identifiant du détail période de niveau 1
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">Ligne de la table de résultat</param>
            <returns>Identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetL2Id(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow)">
            <summary>
            Obtient l'identifiant du détail période de niveau 2
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">Ligne de la table de résultat</param>
            <returns>Identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetL3Id(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow)">
            <summary>
            Obtient l'identifiant du détail période de niveau 3
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">Ligne de la table de résultat</param>
            <returns>Identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetL1Label(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow)">
            <summary>
            Obtient le libellé du détail période de niveau 1
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">Ligne de la table de résultat</param>
            <returns>Identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetL2Label(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow)">
            <summary>
            Obtient le libellé du détail période de niveau 2
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">Ligne de la table de résultat</param>
            <returns>Identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetL3Label(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow)">
            <summary>
            Obtient le libellé du détail période de niveau 3
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">Ligne de la table de résultat</param>
            <returns>Identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetAdvertiserColumnIndex(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Détermine la colonne du détail annonceur
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Index de la colonne</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetDateBegin(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient la date de début de l'analyse en fonction du module
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Date de début</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetDateEnd(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient la date de fin de l'analyse en fonction du module
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Date de fin</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetProductActivity(TNS.FrameWork.WebResultUI.ResultTable,System.Data.DataTable,System.Int64,System.String,System.String,System.Collections.IList,System.Collections.IList)">
            <summary>
            Obtient l'activité publicitaire d'un produit
            </summary>
            <param name="tabResult">Tableau de résultats</param>
            <param name="dt">table de données</param>
            <param name="indexLineProduct">index ligne produit</param>
            <param name="filterExpression">expression de filtre</param>
            <param name="sort">expression de tri</param>
            <param name="referenceUniversMedia">liste supports de référence</param>
            <param name="competitorUniversMedia">liste supports conccurents</param>	
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorRules.GetSubTotalWithOneMediaIndexes(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,TNS.FrameWork.WebResultUI.ResultTable,TNS.AdExpress.Web.Common.Results.SelectionGroup[])">
            <summary>
            Liste des indexes de colonnes qui ont un seul support ou si 1 seul groupe
            </summary>
            <param name="webSession">Session du client</param>
            <param name="nbColInTabData">Nombre de colonnes dans la table de données source</param>
            <param name="resultTable">Tableau de résultat</param>
            <param name="groupMediaTotalIndex">Liste des groupes de supports</param>
            <returns>Indexes de colonnes qui ont un seul support</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.MediaPlanRules">
            <summary>
            This class formats the data for Media Plan APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.MediaPlanRules.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Formats the date for Media Plan Table 
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <param name="detailPeriod">period detail : monthly or weekly or daily</param>
            <returns>Formatted table for the PDV Analysis table</returns>		
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.MediaPlanRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Formats the date for Media Plan Table 
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <param name="detailPeriod">period detail : monthly or weekly or daily</param>
            <returns>Formatted table for the PDV Analysis table</returns>		
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.MediaPlanRules.GetFormattedDate(System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Obtient la date formatée en fonction du type de détail
            </summary>
            <param name="dayDate">date à convertir (YYYYMMDD)</param>
            <param name="detailPeriodType">type de détail date</param>
            <returns>Date formatée</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.MediaPlanRules.GetNbItemsToExtend(System.Int64,System.Int32,System.Int32,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Obtient le nombre de mois à étendre
            </summary>
            <param name="idMedia">Identifiant du media</param>
            <param name="parution">date de parution</param>
            <param name="periodicity">périodicité</param>
            <returns>Nombre de mois à étendre</returns>
            <param name="detailPeriodType">type de détail date</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.MediaPlanRules.GetLevelId(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow,System.Int32)">
            <summary>
            Obtient l'identifiant du niveau
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">ligne de données</param>
            <param name="level">Niveau de détail</param>
            <returns>identifiant du niveau</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.MediaPlanRules.GetLevelLabel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow,System.Int32)">
            <summary>
            Obtient le Libellé du niveau
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">ligne de données</param>
            <param name="level">Niveau de détail</param>
            <returns>Libellé du niveau</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PortofolioSystemException">
            <summary>
            Portefeuille d'un support
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioSystemException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioSystemException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PortofolioDetailMediaDataAccessException">
            <summary>
            Erreur lors du résultat du détail du portefeuille d'un support
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioDetailMediaDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioDetailMediaDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioDetailMediaDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaPublicationDatesRulesException">
            <summary>
            MediaPublicationDatesRulesException thrown while formatting the data 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPublicationDatesRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPublicationDatesRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPublicationDatesRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.LocationPlanTypesRulesException">
            <summary>
            Business Rules :  APPM Emplacement du plan
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.LocationPlanTypesRulesException.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.LocationPlanTypesRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.LocationPlanTypesRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.LocationPlanTypesDataAccessException">
            <summary>
            Base de données: APPM Emplacement du plan
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.LocationPlanTypesDataAccessException.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.LocationPlanTypesDataAccessException.#ctor(System.String)">
            <summary>
            constructeur
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.LocationPlanTypesDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAlertDataAccessException">
            <summary>
            Classe d'exception de la génération des données pour l'alert plan média concurentiel
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAlertDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAlertDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAlertDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.PortofolioAnalysisDataAccess">
            <summary>
            Classe d'accès aux données pour le portefeuille d'un support
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioAnalysisDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String,System.String)">
            <summary>
            Charge les données pour créer le détail du portefeuille d'un Media
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <param name="beginingDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>Données du portefeuille d'un Media</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioAnalysisDataAccess.GetDataForAnalysisPortofolio(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Recupère le total investissement, le nombre de pub, la durée des spot
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant media</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioAnalysisDataAccess.NumberProductAdvertiser(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Récupère le nombre de produits et d'annonceurs dans un support
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant media</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns>object [] en 0 le nombre de produit en 1 le nombre d'annonceurs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioAnalysisDataAccess.GetRequest(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Constantes.DB.TableType.Type)">
            <summary>
            Construction de la requête pour le chargement des données pour créer le détail du portefeuille d'un Media
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <param name="type">Type de la table à utiliser</param>
            <returns>Données du portefeuille d'un Media</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioAnalysisDataAccess.GetGenericData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Charge les données pour créer le détail du portefeuille d'un Media
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <returns>Données du portefeuille d'un Media</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioAnalysisDataAccess.GetRequestForAnalysisPortofolio(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,TNS.AdExpress.Constantes.DB.TableType.Type)">
            <summary>
            Construction de la requête pour recupèrer le total investissement, le nombre de pub, la durée des spot
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant media</param>
            <param name="type">Type de la table à utiliser</param>
            <returns></returns>
        </member>
        <!-- Commentaire XML incorrect ignoré pour le membre "M:TNS.AdExpress.Web.DataAccess.Results.PortofolioAnalysisDataAccess.GetGenericDataForAnalysisPortofolio(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64)" -->
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioAnalysisDataAccess.GetRequestForNumberProductAdvertiser(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,TNS.AdExpress.Constantes.DB.TableType.Type,System.Int32)">
            <summary>
            Récupère le nombre de produits et d'annonceurs dans un support
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant media</param>
            <param name="type">Type de la table à utiliser</param>
            <param name="index">Itération</param>
            <returns>object [] en 0 le nombre de produit en 1 le nombre d'annonceurs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioAnalysisDataAccess.NumberProductAdvertiser(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64)">
            <summary>
            Récupère le nombre de produits et d'annonceurs dans un support
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant media</param>
            <returns>object [] en 0 le nombre de produit en 1 le nombre d'annonceurs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioAnalysisDataAccess.GetProductSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Get product selection
            </summary>
            <remarks>
            Must beginning by AND
            </remarks>
            <param name="webSession">Client session</param>
            <param name="dataTablePrefixe">data table prefixe</param>
            <returns>product selection to add as condition into a sql query</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.MediaPlanDataAccess">
            <summary>
            Accès données plan media
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanDataAccess.GetDataWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les données d'un calendrier d'action pour une analyse plan média
            </summary>
            <remarks>A utiliser pour les analyses</remarks>
            <param name="webSession">Session du client</param>
            <returns>Données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanDataAccess.GetDataWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.String,System.String)">
            <summary>
            Obtient les données d'un calendrier d'action pour une analyse plan média
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleId">Identifiant du vehicle si cela est nécessaire</param>
            <param name="beginningDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>Données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanDataAccess.GetPluriMediaDataSetWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Charge les données pour créer un plan média pour chaque vehicle sélectionné dans la session
            sur la période spécifiée
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningDate">date de début de période au format YYYYMMDD</param>
            <param name="endDate">date de fin de période au formazt YYYYMMDD</param>
            <returns>Dataset contenant les données rapatriées de la base de données pour les vehicule sélectionné dans la session</returns>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
            Lancée en cas d'erreur sur un vehicle
            </exception>
            <remarks>
            Utilise les méthodes:
            	public string TNS.AdExpress.Web.Core.Sessions.WebSession.GetSelection(TreeNode univers, TNS.AdExpress.Constantes.Customer.Right.type level)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanDataAccess.GetPluriMediaDataSetWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les données pour créer un plan média plurimédia à partir  des données 
            de la session d'un client
            </summary>
            <remarks>A utiliser pour les alertes</remarks>
            <param name="webSession">Session du client</param>
            <returns>Données chargées</returns>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
            Lancée en cas d'erreur
            </exception>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanDataAccess.GetProductSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Donne la sélection produit
            </summary>
            <remarks>
            Commence obligatoirement par AND
            </remarks>
            <param name="webSession">Session client</param>
            <param name="dataTablePrefixe">Préfixe de la table des données</param>
            <returns>Sélection produit pour être ajouter à une requête SQL</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanDataAccess.GetUnitFieldName(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Indique le champ à utiliser pour l'unité dans la requête
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Le champ correspondant au type d'unité</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanDataAccess.GetDateFieldName(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Indique le champ à utilisée pour la date dans la requête
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Le champ correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanDataAccess.GetMediaTableName(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64)">
            <summary>
            Indique la table à utilisée pour la requête
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleId">Identifiant du media</param>
            <returns>La table correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanDataAccess.GetMediaFields(TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails)">
            <summary>
            Obtient les champs correspondants au détail media demandée par le client.
            Les champs demandées corespondent à l'identifiant et le libellé du niveau support
            </summary>
            <param name="preformatedMediaDetail">Niveau du détail media demandé</param>
            <returns>Chaîne contenant les champs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanDataAccess.GetOrderMediaFields(TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails)">
            <summary>
            Obtient les champs correspondants au détail media demandée par le client.
            Les champs demandées corespondent à l'identifiant et le libellé du niveau support
            </summary>
            <param name="preformatedMediaDetail">Niveau du détail media demandé</param>
            <returns>Chaîne contenant les champs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanDataAccess.GetMediaTable(TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails)">
            <summary>
            Obtient les nom des tables à utiliser lors d'un détail media
            </summary>
            <param name="preformatedMediaDetail">Niveau du détail media demandé</param>
            <returns>Chaîne contenant les tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanDataAccess.GetMediaJoinConditions(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Obtient les nom des tables à utiliser lors d'un détail media
            </summary>
            <param name="webSession">Session client</param>
            <param name="dataTablePrefixe">Prefixe de la table de résultat</param>
            <param name="beginByAnd">La condition doit commencée par And</param>
            <returns>Chaîne contenant les tables</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess">
            <summary>
            Extrait le détail des insertions publicitaires dans un support, une catégorie, un média correspondant
            à la sélection utilisateur (nomenclatures produits et média, période) présente dans une session
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetAdNetTrackData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Specialized.ListDictionary,System.Int32,System.Int32,System.Int64)">
            <summary>
            Extrait le détail des insertions publicitaires dans un média de niveau 1, 2,3,4 correspondant
            à la sélection utilisateur (nomenclatures produits et média, période) présente dans une session:
            	Extraction de la table attaquée et des champs de sélection à partir du vehicle
            	Construction et exécution de la requête
            	
            </summary>
            <param name="webSession">Session du client</param>		
            <param name="dateBegin">Date de début de l'étude</param>
            <param name="dateEnd">Date de fin de l'étude</param>
            <param name="mediaList">list des détails médias </param>
            <param name="idVehicle">Identifiant du média (Vehicle) sélectionné par le client</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand on ne sait pas quelle table attaquer, quels champs sélectionner ou quand une erreur Oracle s'est produite
            </exception>
            <returns>DataSet contenant le résultat de la requête</returns>
            <remarks>
            Utilise les méthodes:
            	- <code>private static string GetFields(DBClassificationConstantes.Vehicles.names idVehicle,WebSession webSesssion,bool isMediaDetail)</code> : obtient les champs de la requête.
            	- <code>private static string GetTables(DBClassificationConstantes.Vehicles.names idVehicle,WebConstantes.CustomerSessions.PreformatedDetails.PreformatedMediaDetails preformatedMediaDetail)</code> : obtient les tables de données pour la requête
            	- <code>private static void GetJoinConditions(WebSession webSession,StringBuilder sql,DBClassificationConstantes.Vehicles.names idVehicle,string dataTablePrefixe,bool beginByAnd)</code> : obtient les jointures de la requête
            	- <code> public static string TNS.AdExpress.Web.DataAccess.GetInsertionsOrder(DBClassificationConstantes.Vehicles.names idVehicle,WebSession webSesssion,bool isMediaDetail,string prefixeMediaPlanTable)</code> : obtient liodre de tri des résultats
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetMDData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Specialized.ListDictionary,System.Int32,System.Int32,System.Int64,System.Boolean)">
            <summary>
            Extrait les versions du media marketing direct détaillées par catégorie/support/semaine
            	Extraction de la table attaquée et des champs de sélection à partir du vehicle
            	Construction et exécution de la requête
            	
            </summary>
            <param name="webSession">Session du client</param>		
            <param name="dateBegin">Date de début de l'étude</param>
            <param name="dateEnd">Date de fin de l'étude</param>
            <param name="mediaList">list des détails médias </param>
            <param name="idVehicle">Identifiant du média (Vehicle) sélectionné par le client</param>
            <param name="export">True s'il s'agit d'un export</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand on ne sait pas quelle table attaquer, quels champs sélectionner ou quand une erreur Oracle s'est produite
            </exception>
            <returns>DataSet contenant le résultat de la requête</returns>
            <remarks>
            Utilise les méthodes:
            	- <code>private static string GetFields(DBClassificationConstantes.Vehicles.names idVehicle,WebSession webSesssion,bool isMediaDetail)</code> : obtient les champs de la requête.
            	- <code>private static string GetTables(DBClassificationConstantes.Vehicles.names idVehicle,WebConstantes.CustomerSessions.PreformatedDetails.PreformatedMediaDetails preformatedMediaDetail)</code> : obtient les tables de données pour la requête
            	- <code>private static void GetJoinConditions(WebSession webSession,StringBuilder sql,DBClassificationConstantes.Vehicles.names idVehicle,string dataTablePrefixe,bool beginByAnd)</code> : obtient les jointures de la requête
            	- <code> public static string TNS.AdExpress.Web.DataAccess.GetInsertionsOrder(DBClassificationConstantes.Vehicles.names idVehicle,WebSession webSesssion,bool isMediaDetail,string prefixeMediaPlanTable)</code> : obtient liodre de tri des résultats
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetRequest(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Specialized.ListDictionary,System.Int32,System.Int32,System.Int64)">
            <summary>
            Construit la requête sql pour la méthode GetAdNetTrackData
            </summary>
            <param name="webSession">Session du client</param>		
            <param name="dateBegin">Date de début de l'étude</param>
            <param name="dateEnd">Date de fin de l'étude</param>
            <param name="mediaList">list des détails médias </param>
            <param name="idVehicle">Identifiant du média (Vehicle) sélectionné par le client</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand on ne sait pas quelle table attaquer, quels champs sélectionner ou quand une erreur Oracle s'est produite
            </exception>
            <returns>string contenant la requête</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetRequest(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Specialized.ListDictionary,System.Int32,System.Int32,System.Int64,System.Boolean)">
            <summary>
            Construit la requête sql pour la méthode GetAdNetTrackData
            </summary>
            <param name="webSession">Session du client</param>		
            <param name="dateBegin">Date de début de l'étude</param>
            <param name="dateEnd">Date de fin de l'étude</param>
            <param name="mediaList">list des détails médias </param>
            <param name="idVehicle">Identifiant du média (Vehicle) sélectionné par le client</param>
            <param name="export">True si la requête renvoie les données pour un export</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand on ne sait pas quelle table attaquer, quels champs sélectionner ou quand une erreur Oracle s'est produite
            </exception>
            <returns>DataSet contenant le résultat de la requête</returns>
            <remarks>
            Utilise les méthodes:
            	- <code>private static string GetFields(DBClassificationConstantes.Vehicles.names idVehicle,WebSession webSesssion,bool isMediaDetail)</code> : obtient les champs de la requête.
            	- <code>private static string GetTables(DBClassificationConstantes.Vehicles.names idVehicle,WebConstantes.CustomerSessions.PreformatedDetails.PreformatedMediaDetails preformatedMediaDetail)</code> : obtient les tables de données pour la requête
            	- <code>private static void GetJoinConditions(WebSession webSession,StringBuilder sql,DBClassificationConstantes.Vehicles.names idVehicle,string dataTablePrefixe,bool beginByAnd)</code> : obtient les jointures de la requête
            	- <code> public static string TNS.AdExpress.Web.DataAccess.GetInsertionsOrder(DBClassificationConstantes.Vehicles.names idVehicle,WebSession webSesssion,bool isMediaDetail,string prefixeMediaPlanTable)</code> : obtient liodre de tri des résultats
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Specialized.ListDictionary,System.Int32,System.Int32,System.Int64)">
            <summary>
            Extrait le détail des insertions publicitaires dans un média de niveau 1, 2,3,4 correspondant
            à la sélection utilisateur (nomenclatures produits et média, période) présente dans une session:
            	Extraction de la table attaquée et des champs de sélection à partir du vehicle
            	Construction et exécution de la requête
            	
            </summary>
            <param name="webSession">Session du client</param>
            <param name="mediaList">Liste des médias</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <param name="idVehicle">Identifiant du média</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand on ne sait pas quelle table attaquer, quels champs sélectionner ou quand une erreur Oracle s'est produite
            </exception>
            <returns>DataSet contenant la liste des insertions par média</returns>		
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetIdsVehicle(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64)">
            <summary>
            Obtient le média (vehicle) correspondant à la catégorie et/ou support sélectionné.
            </summary>
            <param name="webSession">session du client</param>
            <param name="idCategory">Identifiant catégorie</param>
            <param name="idMedia">Identifiant support</param>
            <returns>Média (vehicle)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetIdsVehicle(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.String,System.String,System.String,System.String)">
             <summary>
             Obtient le média (vehicle) correspondant aux accroches.
             </summary>
             <param name="webSession">session du client</param>
            <param name="idSlogan">identifiant accroche</param>	
            <param name="idVehicle">Identifiant du média</param>
            <param name="tableName">Table de données</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
             <returns>Identifiant Média (vehicle)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetIdsVehicle(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Specialized.ListDictionary,System.String,System.String,System.String,System.String)">
             <summary>
             Obtient le média (vehicle) correspondant au niveau de détail sélectionné
             </summary>
             <param name="webSession">session du client</param>
             <param name="mediaImpactedList">Liste des médias impactés</param>		
            <param name="idVehicle">identifiant du média</param>
            <param name="tableName">Table de données</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
             <returns>Identifiant Média (vehicle)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetIdsVehicle(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64)">
            <summary>
            Obtient le média (vehicle) correspondant aux accroches.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idSlogan">Identifiant accroche</param>	
            <returns>Identifiant Média (vehicle)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetSqlFields(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obetient les champs de la requête
            </summary>
            <param name="webSession"></param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetFields(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Collections.Specialized.ListDictionary,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Donne les champs à traiter pour le détail des insertions.
            </summary>
            <param name="idVehicle">Identifiant du média</param>
            <param name="mediaList">list des détails médias </param>
            <param name="webSesssion">Session  du client</param>
            <param name="prefixeMediaPlanTable">prfixe table média (vehicle)</param>
            <returns>Chaine contenant les champs à traiter</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetMDFields(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Collections.Specialized.ListDictionary,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Donne les champs à traiter pour les créations du Marketing Direct.
            </summary>
            <param name="idVehicle">Identifiant du média</param>
            <param name="mediaList">list des détails médias </param>
            <param name="webSesssion">Session  du client</param>
            <param name="prefixeMediaPlanTable">prfixe table média (vehicle)</param>
            <param name="withPrefix">Ajouter des préfixes ou non</param>
            <returns>Chaine contenant les champs à traiter</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetSqlFields(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Text.StringBuilder,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean@,System.Collections.ArrayList)">
            <summary>
            Donne les champs à traiter pour le détail des insertions.
            </summary>
            <param name="idVehicle">Identifiant du média</param>
            <param name="webSesssion">Session  du client</param>
            <param name="hasDetailLevelSelect">Indique si des niveaux de détaillés ont été sélectionnés</param>
            <returns>Chaine contenant les champs à traiter</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetMediaFields(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails,System.String)">
            <summary>
            Obtient les champs correspondants au détail media demandé par le client.
            Les champs demandées corespondent aux libellés des niveaux de média sélectionnés
            </summary>
            <param name="webSession">Session du client</param>
            <param name="preformatedMediaDetail">Niveau du détail media demandé</param>
            <param name="prefixeMediaPlanTable">prefixe table plan média</param>
            <returns>Chaîne contenant les champs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetSqlTables(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.Collections.ArrayList)">
             <summary>
            Obtient les tables correspondants au détail media demandée par le client. 
             </summary>
             <param name="idVehicle">Identifiant du média</param>
             <param name="webSession">Session du client</param>
             <param name="sql">Chaine sql</param>
             <param name="detailLevelList">Liste des niveaux de détail</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetTables(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Collections.Specialized.ListDictionary,TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails,TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
            Obtient les tables correspondants au détail media demandée par le client. 
             </summary>
             <param name="idVehicle">Identifiant du média (vehicle)</param>
             <param name="mediaList">list des détails médias </param>
             <param name="preformatedMediaDetail">Niveau de détail média</param>
             <param name="webSession">Session du client</param>
             <returns>Chaîne contenant les tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetMDTables(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Collections.Specialized.ListDictionary,TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails,TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
            Obtient les tables correspondants au détail media demandée par le client. 
             </summary>
             <param name="idVehicle">Identifiant du média (vehicle)</param>
             <param name="mediaList">list des détails médias </param>
             <param name="preformatedMediaDetail">Niveau de détail média</param>
             <param name="webSession">Session du client</param>
             <returns>Chaîne contenant les tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetMediaTables(TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails)">
            <summary>
            Obtient les tables médias correspondants au détail media demandée par le client. 
            </summary>
            <param name="preformatedMediaDetail">Niveau du détail media demandé</param>
            <returns>Chaîne contenant les tables médias</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetSqlTables(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obetient les tables de la requête
            </summary>
            <param name="webSession">Session client</param>
            <returns>Tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetJoinConditions(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Collections.Specialized.ListDictionary,System.String,System.Boolean)">
            <summary>
            Obtient les jointures à utiliser lors d'un détail media
            </summary>
            <param name="webSession">Session client</param>
            <param name="sql">requete sql</param>
            <param name="idVehicle">Identifiant média (vehicle)</param>
            <param name="mediaList">list des détails médias </param>
            <param name="dataTablePrefixe">prefixe table média</param>
            <param name="beginByAnd">Vrai si la condition doit commencée par And</param>
            <returns>requete sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetMDJoinConditions(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Specialized.ListDictionary,System.Text.StringBuilder,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String,System.Boolean)">
            <summary>
            Obtient les jointures à utiliser lors d'un détail media
            </summary>
            <param name="webSession">Session client</param>
            <param name="mediaList">list des détails médias </param>
            <param name="sql">requete sql</param>
            <param name="idVehicle">Identifiant média (vehicle)</param>
            <param name="dataTablePrefixe">prefixe table média</param>
            <param name="beginByAnd">Vrai si la condition doit commencée par And</param>
            <returns>requete sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetMediaJoinConditions(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Obtient les jointures média à utiliser lors d'un détail media
            </summary>
            <param name="webSession">Session client</param>
            <param name="dataTablePrefixe">Prefixe de la table de résultat</param>
            <param name="beginByAnd">Vrai si la condition doit commencée par And</param>
            <returns>Chaîne contenant les tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.AddPressSpecificField(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Obtient un champ de données spécifique pour la presse
            </summary>
            <param name="webSession">Session du client</param>
            <param name="wpPrefixe">prefixe table</param>
            <returns>Champ</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.AddSloganField(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Ajoute le champ slogan si nécessaire
            </summary>
            <param name="webSession">Session client</param>
            <param name="sql">Chaine de caractères</param>
            <param name="idVehicle">Identifiant du média</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.getMDSpecificField(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Collections.Specialized.ListDictionary,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean,System.Boolean)">
            <summary>
            Donne les champs à traiter pour les créations du Marketing Direct.
            </summary>
            <param name="idVehicle">Identifiant du média</param>
            <param name="mediaList">list des détails médias </param>
            <param name="webSesssion">Session  du client</param>
            <param name="prefixeMediaPlanTable">prfixe table média (vehicle)</param>
            <returns>Chaine contenant les champs à traiter</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.getMDSpecificGroupBy(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Collections.Specialized.ListDictionary,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean,System.Boolean)">
            <summary>
            Donne les champs à traiter pour les créations du Marketing Direct.
            </summary>
            <param name="idVehicle">Identifiant du média</param>
            <param name="mediaList">list des détails médias </param>
            <param name="webSesssion">Session  du client</param>
            <param name="prefixeMediaPlanTable">prfixe table média (vehicle)</param>
            <returns>Chaine contenant les champs à traiter</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetSqlGroupByFields(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean@,System.Collections.ArrayList)">
            <summary>
            Regroupe les données de la requête
            </summary>
            <param name="webSession">Session du client</param>
            <param name="sql">Chaine sql</param>
            <param name="idVehicle">Identifiant du média</param>
            <param name="hasDetailLevelGroupBy">Indique s'il faut regrouper les niveaux de détail</param>
            <param name="detailLevelList">Liste des niveaux de détail</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetMDGroupByFields(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Collections.Specialized.ListDictionary,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Donne les champs à traiter pour les créations du Marketing Direct.
            </summary>
            <param name="idVehicle">Identifiant du média</param>
            <param name="mediaList">list des détails médias </param>
            <param name="webSesssion">Session  du client</param>
            <param name="prefixeMediaPlanTable">prfixe table média (vehicle)</param>
            <returns>Chaine contenant les champs à traiter</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetSqlOrderFields(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean@,System.Collections.ArrayList)">
            <summary>
            Obtient les chaines pour ordonner les données
            </summary>
            <param name="webSession">Session du client</param>
            <param name="sql">Chaine sql</param>
            <param name="idVehicle">Idnetifiant du média</param>
            <param name="hasDetailLevelOrder">Indique s'il faut ordonner les données</param>
            <param name="detailLevelList">Liste des niveaux de détail</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetMDOrderByFields(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Collections.Specialized.ListDictionary,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Donne les champs à traiter pour les créations du Marketing Direct.
            </summary>
            <param name="idVehicle">Identifiant du média</param>
            <param name="mediaList">list des détails médias </param>
            <param name="webSesssion">Session  du client</param>
            <param name="prefixeMediaPlanTable">prfixe table média (vehicle)</param>
            <returns>Chaine contenant les champs à traiter</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.GenericMediaPlanDataAccess">
            <summary>
            Accès données plan media
            	/// </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaPlanDataAccess.GetAdNetTrackData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.String,System.String)">
            <summary>
            Obtient les données d'un calendrier d'action AdNetTrack
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleId">Identifiant du vehicle si cela est nécessaire</param>
            <param name="beginningDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>Données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaPlanDataAccess.GetDataWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les données d'un calendrier d'action pour une analyse plan média
            </summary>
            <remarks>A utiliser pour les analyses</remarks>
            <param name="webSession">Session du client</param>
            <returns>Données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaPlanDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.String,System.String)">
            <summary>
            Obtient les données d'un calendrier d'action pour une analyse plan média
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleId">Identifiant du vehicle si cela est nécessaire</param>
            <param name="beginningDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>Données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaPlanDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.String,System.String,System.String,TNS.AdExpress.Web.Core.Sessions.GenericDetailLevel)">
            <summary>
            Obtient les données d'un calendrier d'action pour une analyse plan média
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleId">Identifiant du vehicle si cela est nécessaire</param>
            <param name="beginningDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <param name="additionalConditions">Conditions addionnelles</param>
            <param name="detailLevel">Generic detail level to use for the request</param>
            <returns>Données</returns>
            <remarks>
            Les conditions addtionnelles doivent commencer par le mot clé AND
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaPlanDataAccess.GetPluriMediaDataSetWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Charge les données pour créer un plan média pour chaque vehicle sélectionné dans la session
            sur la période spécifiée
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningDate">date de début de période au format YYYYMMDD</param>
            <param name="endDate">date de fin de période au formazt YYYYMMDD</param>
            <returns>Dataset contenant les données rapatriées de la base de données pour les vehicule sélectionné dans la session</returns>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
            Lancée en cas d'erreur sur un vehicle
            </exception>
            <remarks>
            Utilise les méthodes:
            	public string TNS.AdExpress.Web.Core.Sessions.WebSession.GetSelection(TreeNode univers, TNS.AdExpress.Constantes.Customer.Right.type level)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaPlanDataAccess.GetPluriMediaDataSetWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les données pour créer un plan média plurimédia à partir  des données 
            de la session d'un client
            </summary>
            <remarks>A utiliser pour les alertes</remarks>
            <param name="webSession">Session du client</param>
            <returns>Données chargées</returns>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
            Lancée en cas d'erreur
            </exception>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaPlanDataAccess.GetProductSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Get product selection
            </summary>
            <remarks>
            Must beginning by AND
            </remarks>
            <param name="webSession">Client session</param>
            <param name="dataTablePrefixe">data table prefixe</param>
            <returns>product selection to add as condition into a sql query</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaPlanDataAccess.GetUnitFieldName(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Indique le champ à utiliser pour l'unité dans la requête
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Le champ correspondant au type d'unité</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaPlanDataAccess.GetDateFieldName(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Indique le champ à utilisée pour la date dans la requête
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Le champ correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaPlanDataAccess.GetPeriodicity(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel,System.Int64)">
             <summary>
             Indique le champ à utilisée pour la date dans la requête
             </summary>
            <param name="detailPeriod">Detail period type</param>
            <param name="vehicleId">Vehicle Id</param>
             <returns>Le champ correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaPlanDataAccess.GetMediaTableName(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64)">
            <summary>
            Indique la table à utilisée pour la requête
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleId">Identifiant du media</param>
            <returns>La table correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaPlanDataAccess.UseOrder(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel,System.Int64)">
             <summary>
             Indique la table à utilisée pour la requête
             </summary>
            <param name="detailPeriod">Detail period type</param>
            <param name="vehicleId">Vehicle Id</param>
             <returns>La table correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaPlanDataAccess.GetFieldOrderForDataView(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Get field names for SQL Order code
            </summary>
            <param name="webSession">Customer Session</param>
            <returns>field names</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.ZoomMediaPlanDataAccess">
            <summary>
            Données zoom plan média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.ZoomMediaPlanDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
             Calculates and returns the dataset for the Media Plan 	 
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Starting date</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">Base Target</param>
            <param name="additionalTarget">Additional Target</param>
            <returns>dataset for synthesis of APPM</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem">
            <summary>
            Accès aux données du GAD
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem._company">
            <summary>
            Nom de la société
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem._street">
            <summary>
            Adresse de la société
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem._street2">
            <summary>
            Adresse 2 de la société
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem._codePostal">
            <summary>
            Code postal de la société
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem._town">
            <summary>
            Ville de la société
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem._phone">
            <summary>
            Téléphone de la société
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem._fax">
            <summary>
            Fax de la société
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem._email">
            <summary>
            Email de la société
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem._docMarketingId">
            <summary>
            Identifiant de l'annonceur pour le line vers le site du Doc Marketing
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem._docMarketingKey">
            <summary>
            Clé à utiliser pour débloquer l'accès vers le site du Doc Marketing
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idAddress">Identifiant de l'adresse</param>
        </member>
        <member name="P:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem.Company">
            <summary>
            Obtient le nom de la société
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem.Street">
            <summary>
            Obtient l'adresse de la société
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem.Street2">
            <summary>
            Obtient l'adresse 2 de la société
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem.CodePostal">
            <summary>
            Obtient le nom de la société
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem.Town">
            <summary>
            Obtient la ville de la société
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem.Phone">
            <summary>
            Obtient le téléphone de la société
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem.Fax">
            <summary>
            Obtient le fax de la société
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem.Email">
            <summary>
            Obtient l'email de la société
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem.DocMarketingId">
            <summary>
            Identifiant de l'annonceur pour le lien vers le site du Doc Marketing
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.BusinessFacade.Results.GadSystem.DocMarketingKey">
            <summary>
            Clé à utiliser pour débloquer l'accès vers le site du Doc Marketing
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Global.Loading.LoadingSystem">
            <summary>
            Accès au code du chargement de la page (Loading flash)
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Global.Loading.LoadingSystem.GetHtmlDiv(System.Int32,System.Web.UI.Page)">
            <summary>
            Enregistre le code flash dans la page et renvoie le code html d'affichage
            </summary>
            <param name="languageId">Langue du flash</param>
            <param name="page">Page recevant le code</param>
            <returns>Code HTML généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Global.Loading.LoadingSystem.GetHtmlCloseDiv">
            <summary>
            Construit le script de fermeture du flash d'attente
            </summary>
            <returns>Code html de la fermeture du flash</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.ResultWebPage">
            <summary>
            Page mère des page Web de résultats
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.WebPage">
            <summary>
            Classe de base d'une page Web d'AdExpress.
            <seealso cref="T:TNS.AdExpress.Web.UI.ErrorEventArgs"/>
            </summary>
            <remarks>
            Cette page doit être utilisée lorsque le client est connecté.
            En effet, dans le constructeur elle charge la session du client via la QueryString "idSession".
            </remarks>
            <example>
            <code>
            public class AlertDateSelection : TNS.AdExpress.Web.UI.WebPage{
            
            	// Constructeur
            	public AlertDateSelection():base(){
            	}
            	
            	// Evènement de chargement de la page
            	private void Page_Load(object sender, System.EventArgs e){
            		try{
            		...
            		}
            		catch(System.Exception exc){
            			if (exc.GetType() != typeof(System.Threading.ThreadAbortException)){
            				this.OnError(new TNS.AdExpress.Web.UI.ErrorEventArgs(this,exc,webSession));
            			}
            		}
            	}
            	
            }
            </code>
            </example>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.CustomerWebException">Exception lancée lors d'une erreur, s'il on est en mode debug.</exception>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.WebPage._webSession">
            <summary>
             objet WebSession
             </summary>
              <supplierCardinality>1</supplierCardinality>
              <directed>True</directed>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.WebPage._siteLanguage">
            <summary>
            Langue du site
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.WebPage._nextUrl">
            <summary>
            Url suivante
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.WebPage._nextUrlOk">
            <summary>
            Indique si l'url de la prochaine page est disponible ou non
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.WebPage._currentModule">
            <summary>
            Information sur le module en cours
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.WebPage._errorArgs">
            <summary>
            Argument de l'exception levée s'il y a une erreur
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.WebPage._selectionError">
            <summary>
            ?????
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.WebPage._formatFile">
            <summary>
            Type de format (html,excel)
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.WebPage._dataSource">
            <summary>
            Source de données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.WebPage.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.WebPage.WebPage_Load(System.Object,System.EventArgs)">
            <summary>
            Chargement de la page
            </summary>
            <param name="sender">Objet source</param>
            <param name="e">Arguments</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.WebPage.WebPage_Unload(System.Object,System.EventArgs)">
            <summary>
            Déchargement de la page
            </summary>
            <param name="sender">Objet source</param>
            <param name="e">Arguments</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.WebPage.OnError(System.EventArgs)">
            <summary>
            Evènement d'erreur
            </summary>
            <param name="e">Argument</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.WebPage.manageCustomerError(System.Object)">
            <summary>
            Traite l'affichage d'erreur en fonction du mode compilation
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.WebPage.OnInit(System.EventArgs)">
            <summary>
            Initialisation
            </summary>
            <param name="e">Arguments</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ResultWebPage.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ResultWebPage.CanShowResult">
            <summary>
            On vérifie que toutes les variables ont été sélectionnées
            </summary>
            <returns>0 si tous est sélectionné, sinon l'identifiant de l'élément manquant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ResultWebPage.ResultWebPage_Load(System.Object,System.EventArgs)">
            <summary>
            Page Loading
            </summary>
            <param name="sender">Source Object</param>
            <param name="e">Arguments</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ResultWebPage.GetNextUrlFromMenu">
            <summary>
            Get next URL from contextual menu
            </summary>
            <returns>Next URL</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsPluriMediaUI">
            <summary>
            VersionsPluriMediaUI provide methods to get html code to display a set of version depending on the vehicles criterions
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsPluriMediaUI.ALLOW_PLURI">
            <summary>
            Specifi wether plurimedia is allowed are not
            </summary>
            <author>gragneau</author>
            <since>jeudi 20 juillet 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsPluriMediaUI._webSession">
            <summary>
            Customer web session
            </summary>
            <author>gragneau</author>
            <since>jeudi 20 juillet 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsPluriMediaUI._versions">
            <summary>
            Versions to display
            </summary>
            <author>gragneau</author>
            <since>jeudi 20 juillet 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsPluriMediaUI._vehicles">
            <summary>
            Considered Vehicles
            </summary>
            <author>gragneau</author>
            <since>jeudi 20 juillet 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsPluriMediaUI.ALLOWED_VEHICLES">
            <summary>
            Vehicles which are allowed to be displayed in the component
            </summary>
            <author>gragneau</author>
            <since>jeudi 20 juillet 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsPluriMediaUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Hashtable)">
            <summary>
            Constructor
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="versions">List of verions details indexed by their Id</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsPluriMediaUI.GetHtml">
            <summary>
            Build Html code to display the set of version
            </summary>
            <returns>Html Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsPluriMediaUI.GetHtmlExport(System.Collections.ArrayList@)">
            <summary>
            Build Html code to display the set of version for the export UI
            </summary>
            <returns>Html Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsPluriMediaUI.GetAPPMHtmlExport(TNS.FrameWork.DB.Common.IDataSource,System.String,System.Collections.ArrayList@)">
            <summary>
            Build Html code to display the set of version for the export UI
            </summary>
            <returns>Html Code</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsPluriMediaUI.Session">
            <summary>
            Get / Set Customer web session
            </summary>
            <author>gragneau</author>
            <since>jeudi 20 juillet 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsPluriMediaUI.versions">
            <summary>Get / Set versions</summary>
             <author>gragneau</author>
             <since>jeudi 20 juillet 2006</since>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionPressUI">
            <summary>VersionPressWebControl provide methods to get html code to display a version of the vehicle Press</summary>
              <author>gragneau</author>
              <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI">
            <summary>
            VersionDetailUI provides process methods to get html code to display a version
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI._webSession">
            <summary>
            Objet session
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI._version">
            <summary>Version to display</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI._exportVersion">
            <summary>Version details to display</summary>
             <author>rkaina</author>
             <since>lundi 21 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI._exportAPPMVersion">
            <summary>APPM Version details to display</summary>
             <author>rkaina</author>
             <since>lundi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI._exportMDVersion">
            <summary>
            MD Version to display
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI._exportOutdoorVersion">
            <summary>
            Outdoor Version to display
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.VersionItem)">
            <summary>
            Constructor
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="version">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.ExportVersionItem)">
            <summary>
            Constructor with exportVersion
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="exportVersion">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem)">
            <summary>
            Constructor with exportVersion for APPM
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="exportAPPMVersion">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.ExportMDVersionItem)">
            <summary>
            Constructor with exportVersion for MD
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="exportMDVersion">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.ExportOutdoorVersionItem)">
            <summary>
            Constructor with exportVersion for MD
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="exportOutdoorVersion">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.GetHtml(System.Text.StringBuilder)">
            <summary>Render Version</summary>
            <param name="output"> Le writer HTML vers lequel écrire </param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.GetHtmlPressExport(System.Text.StringBuilder,System.Int64,System.Boolean)">
            <summary>Render Version For Press Export UI</summary>
            <param name="output">Le writer HTML vers lequel écrire </param>
            <param name="index">l'index est utilsé pour traiter le cas des verions avec plus de 4 visuels</param>
            <param name="withDetail">Utiliser pour l'affichage des informations sur la version</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.GetHtmlAPPMExport(System.Text.StringBuilder,System.Int64,System.Boolean)">
            <summary>Render Version For Export UI</summary>
            <param name="output">Le writer HTML vers lequel écrire </param>
            <param name="index">l'index est utilsé pour traiter le cas des verions avec plus de 4 visuels</param>
            <param name="withDetail">Utiliser pour l'affichage des informations sur la version</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.GetHtmlTvExport(System.Text.StringBuilder,System.Int64,System.Boolean)">
            <summary>Render Version For Tv Export UI</summary>
            <param name="output">Le writer HTML vers lequel écrire </param>
            <param name="index">l'index est utilsé pour traiter le cas des verions avec plus de 4 visuels</param>
            <param name="withDetail">Utiliser pour l'affichage des informations sur la version</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.GetHtmlRadioExport(System.Text.StringBuilder,System.Int64,System.Boolean)">
            <summary>Render Version For Radio Export UI</summary>
            <param name="output">Le writer HTML vers lequel écrire </param>
            <param name="index">l'index est utilsé pour traiter le cas des verions avec plus de 4 visuels</param>
            <param name="withDetail">Utiliser pour l'affichage des informations sur la version</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.GetHtmlMDExport(System.Text.StringBuilder,System.Int64,System.Boolean)">
            <summary>Render Version For MD Export UI</summary>
            <param name="output">Le writer HTML vers lequel écrire </param>
            <param name="index">l'index est utilsé pour traiter le cas des verions avec plus de 4 visuels</param>
            <param name="withDetail">Utiliser pour l'affichage des informations sur la version</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.GetHtmlOutdoorExport(System.Text.StringBuilder,System.Int64,System.Boolean)">
            <summary>Render Version For Outdoor Export UI</summary>
            <param name="output">Le writer HTML vers lequel écrire </param>
            <param name="index">l'index est utilsé pour traiter le cas des verions avec plus de 4 visuels</param>
            <param name="withDetail">Utiliser pour l'affichage des informations sur la version</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.RenderImage(System.Text.StringBuilder)">
            <summary>Render Version Visual</summary>
              <author>gragneau</author>
              <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.RenderSynthesis(System.Text.StringBuilder)">
            <summary>Render Version SYnthesis</summary>
              <author>gragneau</author>
              <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.RenderImageExport(System.Text.StringBuilder)">
            <summary>Render Version Visual</summary>
              <author>rkaina</author>
              <since>mercredi 06 septembre 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.RenderImageExport(System.Text.StringBuilder,System.Int64)">
            <summary>Render Version Visual For Export UI</summary>
            <param name="output"></param>
            <param name="index">l'index est utilsé pour traiter le cas des verions avec plus de 4 visuels</param>
              <author>rkaina</author>
              <since>vendredi 18 août 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.RenderAPPMImageExport(System.Text.StringBuilder,System.Int64)">
            <summary>Render Version Visual For Export UI</summary>
            <param name="output"></param>
            <param name="index">l'index est utilsé pour traiter le cas des verions avec plus de 4 visuels</param>
              <author>rkaina</author>
              <since>vendredi 18 août 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.GetMailContentList(System.String,System.String)">
            <summary>
            Renvoie le code Html de la liste des mail content pour le CA
            </summary>
            <param name="label">Label</param>
            <param name="mailContent">Liste des mails content</param>
            <returns></returns>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.Version">
            <summary>Get / Set Version</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.Session">
            <summary>Get / Set WebSession</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.ExportVersion">
            <summary>Get / Set Export Version</summary>
             <author>rkaina</author>
             <since>Lundi 21 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.ExportAPPMVersion">
            <summary>Get / Set Export Version for APPM</summary>
             <author>rkaina</author>
             <since>Lundi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.ExportMDVersion">
            <summary>Get / Set Export Version for MD</summary>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionDetailUI.ExportOutdoorVersion">
            <summary>Get / Set Export Version for MD</summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionPressUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.VersionItem)">
            <summary>
            Constructor
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="version">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionPressUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.ExportVersionItem)">
            <summary>
            Constructor with exportVersion
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="exportVersion">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionPressUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem)">
            <summary>
            Constructor with exportVersion For APPM
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="exportAPPMVersion">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionPressUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.ExportMDVersionItem)">
            <summary>
            Constructor with exportVersion For MD
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="exportMDVersion">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionPressUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.ExportOutdoorVersionItem)">
            <summary>
            Constructor with exportVersion For MD
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="exportOutdoorVersion">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionPressUI.RenderImage(System.Text.StringBuilder)">
            <summary>Render Version Visual</summary>
              <author>gragneau</author>
              <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionPressUI.RenderImageExport(System.Text.StringBuilder,System.Int64)">
            <summary>Render Version Visual For Export UI</summary>
            <param name="output"></param>
            <param name="index">l'index est utilsé pour traiter le cas des verions avec plus de 4 visuels</param>
              <author>rkaina</author>
              <since>vendredi 18 août 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionPressUI.RenderAPPMImageExport(System.Text.StringBuilder,System.Int64)">
            <summary>Render Version Visual For Export UI</summary>
            <param name="output"></param>
            <param name="index">l'index est utilsé pour traiter le cas des verions avec plus de 4 visuels</param>
              <author>rkaina</author>
              <since>vendredi 18 août 2006</since>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.MediaPlanAnalysisUI">
            <summary>
            Interface Utilisateur d'un plan Media
            Cette classe génère suivant le format de sortie le code pour afficher 
            un plan media.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanAnalysisUI.GetMediaPlanAnalysisWithMediaDetailLevelHtmlUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Crée le code HTML pour afficher une plan média
            </summary>
            <param name="tab">Tableau contenant les données</param>
            <param name="webSession">Session du client</param>
            <param name="page">Page qui affiche le Plan Média</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanAnalysisUI.GetCreativeMediaPlanAnalysisHtmlUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Crée le code HTML pour afficher une plan média à partir de Creative Explorer
            </summary>
            <param name="tab">Tableau contenant les données</param>
            <param name="webSession">Session du client</param>
            <param name="page">Page qui affiche le Plan Média</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanAnalysisUI.GetCreativeMediaPlanAnalysisExcelUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Crée le code HTML pour Excel pour afficher un plan media
            </summary>
            <param name="tab">Tableau contenant les données</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanAnalysisUI.GetMediaPlanAnalysisHtmlUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Crée le code HTML pour afficher une plan média
            </summary>
            <param name="tab">Tableau contenant les données</param>
            <param name="webSession">Session du client</param>
            <param name="page">Page qui affiche le Plan Média</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanAnalysisUI.GetMediaPlanAnalysisWithMediaDetailLevelExcelUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Crée le code HTML pour Excel pour afficher un plan media
            </summary>
            <param name="tab">Tableau contenant les données</param>
            <param name="webSession">Session du client</param>
            <param name="showValue">Valeurs dans les cellules</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanAnalysisUI.GetMediaPlanAnalysisExcelUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Crée le code HTML pour Excel pour afficher un plan media
            </summary>
            <param name="tab">Tableau contenant les données</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI">
            <summary>
            Génère le code HTML des tableaux présentants le détails des insertions d'un support, d'une catégorie ou dun média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetUIPress(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String,System.String,System.String)">
            <summary>
            Construit le code HTML du tableau présentant le détail des insertions Presse avec les créations associées
            	data vide : message d'erreur
            	data non vide :
            		Génération du code nécessaire à l'appel de l'export excel
            		Script d'ouverture d'une PopUp de zoom sur une création Presse
            		Construction du tableau HTML présentant le détail des insertions avec la hiérarchie 
            		vehicle > Catégorie > Support > date > page
            </summary>
            <param name="data">Tableau des données insertions</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page de résultat</param>
            <param name="periodBeginning">Période de début des calcul</param>
            <param name="periodEnd">Période de fin des calculs</param>
            <param name="idVehicle">Identifiant du média</param>
            <returns>Code HTML des insertions Presse</returns>
            <remarks>
            Utilise les méthodes : 
            	TNS.AdExpress.Web.Functions.Script.OpenPressCreation()
            	private static string GetUIEmpty(int language)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetUIRadio(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String,System.String,System.String)">
            <summary>
            Retourne le code html affichant le détails des insertions radio:
            	data vide : code HTML d'un message d'erruer
            	data non vide : code HTML du tableau présentant le détail radio insertion par insertion
            		Génération du code d'export Excel
            		Enregistrement du script d'ouverture de "AccessDownloadCreationsPopUp.aspx"
            		Rappel des paramètres
            		Génération du tableau des insertions ordonnées par Catégorie > Support > Date
            </summary>
            <param name="data">Tableau contenant les données à afficher</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page de retour</param>
            <param name="periodBeginning">Période de début des calculs</param>
            <param name="periodEnd">Période de fin des calculs</param>
            <param name="idVehicle">Identifiant du vehicule</param>
            <returns>Code html généré</returns>
            <remarks>
            Utilise les méthodes:
            	TNS.AdExpress.Web.Functions.Script.OpenDownload()
            	private static string GetUIEmpty(int language)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetUITV(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String,System.String,System.String)">
            <summary>
            Retourne le code html affichant le détails des insertions TV:
            	data vide : code HTML d'un message d'erruer
            	data non vide : code HTML du tableau présentant le détail TV insertion par insertion
            		Génération du code d'export Excel
            		Enregistrement du script d'ouverture de "AccessDownloadCreationsPopUp.aspx"
            		Rappel des paramètres
            		Génération du tableau des insertions ordonnées par Catégorie > Support > Date
            </summary>
            <param name="data">Tableau contenant les données à afficher</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page de retour</param>
            <param name="periodBeginning">Période de début des calculs</param>
            <param name="periodEnd">Période de fin des calculs</param>
            <param name="idVehicle">Identifiant du vehicule</param>
            <returns>Code html généré</returns>
            <remarks>
            Utilise les méthodes:
            	TNS.AdExpress.Web.Functions.Script.OpenDownload()
            	private static string GetUIEmpty(int language)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetUIOutDoor(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String,System.String,System.String)">
            <summary>
            Retourne le code html affichant le détails des insertions de la publicité extérieure:
            	data vide : code HTML d'un message d'erruer
            	data non vide : code HTML du tableau présentant le détail de la publicité extérieure insertion par insertion
            		Génération du code d'export Excel
            		Enregistrement du script d'ouverture de "AccessDownloadCreationsPopUp.aspx"
            		Rappel des paramètres
            		Génération du tableau des insertions ordonnées par Catégorie > Support > Date
            </summary>
            <param name="data">Tableau contenant les données à afficher</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page de retour</param>
            <param name="periodBeginning">Période de début des calculs</param>
            <param name="periodEnd">Période de fin des calculs</param>
            <param name="idVehicle">Identifiant du vehicule</param>
            <returns>Code html généré</returns>
            <remarks>
            Utilise les méthodes:
            	TNS.AdExpress.Web.Functions.Script.OpenDownload()
            	private static string GetUIEmpty(int language)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetUIMD(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String,System.String,System.String,System.Collections.Specialized.ListDictionary)">
            <summary>
            Construit le code HTML du tableau présentant les versions du Marketing direct
            	data vide : message d'erreur
            	data non vide :
            		Génération du code nécessaire à l'appel de l'export excel
            		Script d'ouverture d'une PopUp de zoom sur une création MD
            		Construction du tableau HTML présentant le détail des insertions avec la hiérarchie 
            		vehicle > Catégorie > Support > semaine
            </summary>
            <param name="data">Tableau des données insertions</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page de résultat</param>
            <param name="periodBeginning">Période de début des calcul</param>
            <param name="periodEnd">Période de fin des calculs</param>
            <param name="idVehicle">Identifiant du média</param>
            <returns>Code HTML des insertions Presse</returns>
            <remarks>
            Utilise les méthodes : 
            	TNS.AdExpress.Web.Functions.Script.OpenPressCreation()
            	private static string GetUIEmpty(int language)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetMediaInsertionsCreationsResultsUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.String,System.Web.UI.Page,System.String,System.String,System.Boolean@)">
            <summary>
            Construction du code HTML affichant le détail des insertions d'un média (vehicle) quelqconque sur une certaine période respectant le type de période présent dans la session
            	Extraction des données
            	Construction du code HTML en fonction du média considéré
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idMediaLevel1">Identifiant du média de niveau 1</param>
            <param name="idMediaLevel2">Identifiant du média de niveau 2</param>
            <param name="idMediaLevel3">Identifiant du média de niveau 3</param>
            <param name="idMediaLevel4">Identifiant du média de niveau 4</param>
            <param name="idAdvertiser">Identifiant annonceur</param>
            <param name="page">Page</param>
            <param name="idVehicle">Identifiant du média (vehicle) choisi depuis l'onglet de sélection du média (TV,Radio,Presse,Affichage)</param>
            <param name="zoomDate">période de l'étude</param>
            <param name="uiEmpty">Boulean utilsé pour savoir si on a des résultats (et afficher ainsi le composant ou pas)</param>
            <remarks>
            Utilise les méthodes:
            	<code>public static object[,] MediaInsertionsCreationsRules.GetData(WebSession webSession,string idMediaLevel1,string idMediaLevel2,string idMediaLevel3,string idAdvertiser ,int dateBegin, int dateEnd,bool isMediaDetail,string idVehicleFromTab,ListDictionary mediaImpactedList)</code>
            	<code>private static string GetUIPress(object[,] data, WebSession webSession, Page page, string periodBeginning, string periodEnd, string excelUrl,bool isMediaDetail)</code>
            	<code>private static string GetUIRadio(object[,] data, WebSession webSession, Page page, string periodBeginning, string periodEnd, string excelUrl, string idVehicle,bool isMediaDetail)</code>
            	<code>private static string GetUITV(object[,] data, WebSession webSession, Page page, string periodBeginning, string periodEnd, string excelUrl, string idVehicle,bool isMediaDetail)</code>
            	<code>GetUIOutDoor(object[,] data, WebSession webSession, Page page, string periodBeginning, string periodEnd, string excelUrl, string idVehicle,bool isMediaDetail)</code>
            </remarks>
            <returns>Code HTML détail des insertions</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetUIEmpty(System.Int32)">
            <summary>
            Génère le code html précisant qu'il n 'y a pas de données à afficher
            </summary>
            <param name="language">Langue du site</param>
            <returns>Code html Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetUIEmpty(System.Int32,System.Int32)">
            <summary>
            Génère le code html précisant qu'il n 'y a pas de données à afficher
            </summary>
            <param name="language">Langue du site</param>
            <param name="code">code traduction</param>
            <returns>Code html Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetMediaInsertionsCreationsExcelUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.UI.Page,System.String@)">
            <summary>
            Construction du code HTML destiné à l'export excel affichant le détail des insertions d'un média (vehicle) quelqconque sur une certaine période respectant le type de période présent dans la session
            	Extraction des données
            	Construction du code HTML en fonction du média considéré
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idMediaLevel1">Identifiant du média de niveau 1</param>
            <param name="idMediaLevel2">Identifiant du média de niveau 2</param>
            <param name="idMediaLevel3">Identifiant du média de niveau 3</param>
            <param name="idMediaLevel4">Identifiant du média de niveau 4</param>
            <param name="idAdvertiser">Identifiant annonceur</param>
            <param name="page">Page</param>
            <param name="idVehicle">Identifiant du média (vehicle) choisi depuis l'onglet de sélection du média (TV,Radio,Presse,Affichage)</param>		
            <param name="period">Période de l'étude</param>
            <remarks>
            Utilise les méthodes:
            	<code>public static object[,] MediaInsertionsCreationsRules.GetData(WebSession webSession,string idMediaLevel1,string idMediaLevel2,string idMediaLevel3,string idAdvertiser ,int dateBegin, int dateEnd,bool isMediaDetail,string idVehicleFromTab,ListDictionary mediaImpactedList)</code>
            	<code>private static string GetUIPress(object[,] data, WebSession webSession, Page page, string periodBeginning, string periodEnd, string excelUrl,bool isMediaDetail)</code>
            	<code>private static string GetUIRadio(object[,] data, WebSession webSession, Page page, string periodBeginning, string periodEnd, string excelUrl, string idVehicle,bool isMediaDetail)</code>
            	<code>private static string GetUITV(object[,] data, WebSession webSession, Page page, string periodBeginning, string periodEnd, string excelUrl, string idVehicle,bool isMediaDetail)</code>
            	<code>GetUIOutDoor(object[,] data, WebSession webSession, Page page, string periodBeginning, string periodEnd, string excelUrl, string idVehicle,bool isMediaDetail)</code>
            </remarks>
            <returns>Code HTML détail des insertions</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetUIPressExcel(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String,System.String,System.Collections.Specialized.ListDictionary,System.Int32)">
            <summary>
            Génère le code HTML nécessaire à l'export du détail des insertions presses:
            	data vide : Code HTML spécifiant une erreur (cas normalement impossible)
            	data non vide : 
            		Génération du tableau ordonné par catégorie > support > date > page
            </summary>
            <param name="data">Tableau de données</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page résultat</param>
            <param name="periodBeginning">Période de début d'affichage</param>
            <param name="periodEnd">Période de fin d'affichage</param>
            <param name="mediaImpactedList">Liste de medias impactés</param>
            <param name="idVehicle">Identifiant du media sélectionné</param>
            <returns>Code html Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetUIRadioExcel(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String,System.String,System.Collections.Specialized.ListDictionary,System.Int32)">
            <summary>
            Génère le code HTML nécessaire à l'export du détail des insertions radio:
            	data vide : Code HTML spécifiant une erreur (cas normalement impossible)
            	data non vide : 
            		Génération du tableau ordonné par catégorie > support > date > page
            </summary>
            <param name="data">Tableau de données</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page résultat</param>
            <param name="periodBeginning">Période de début d'affichage</param>
            <param name="periodEnd">Période de fin d'affichage</param>
            <param name="mediaImpactedList">Liste de medias impactés</param>
            <param name="idVehicle">Identifiant du media sélectionné</param>
            <returns>Code html Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetUITVExcel(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String,System.String,System.Collections.Specialized.ListDictionary,System.Int32)">
            <summary>
            Génère le code HTML nécessaire à l'export du détail des insertions TV:
            	data vide : Code HTML spécifiant une erreur (cas normalement impossible)
            	data non vide : 
            		Génération du tableau ordonné par catégorie > support > date > page
            </summary>
            <param name="data">Tableau de données</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page résultat</param>
            <param name="periodBeginning">Période de début d'affichage</param>
            <param name="periodEnd">Période de fin d'affichage</param>
            <param name="mediaImpactedList">Liste de medias impactés</param>
            <param name="idVehicle">Identifiant du media sélectionné</param>
            <returns>Code html Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetUIOutDoorExcel(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String,System.String,System.Collections.Specialized.ListDictionary,System.Int32)">
            <summary>
            Génère le code HTML nécessaire à l'export du détail des insertions Publicité extérieure:
            	data vide : Code HTML spécifiant une erreur (cas normalement impossible)
            	data non vide : 
            		Génération du tableau ordonné par catégorie > support > date > page
            </summary>
            <param name="data">Tableau de données</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page résultat</param>
            <param name="periodBeginning">Période de début d'affichage</param>
            <param name="periodEnd">Période de fin d'affichage</param>
            <param name="mediaImpactedList">Liste de medias impactés</param>
            <param name="idVehicle">Identifiant du media sélectionné</param>
            <returns>Code html Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetUIMDExcel(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String,System.String,System.Collections.Specialized.ListDictionary,System.Int32)">
            <summary>
            Génère le code HTML nécessaire à l'export des versions du marketing direct:
            	data vide : Code HTML spécifiant une erreur (cas normalement impossible)
            	data non vide : 
            </summary>
            <param name="data">Tableau de données</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page résultat</param>
            <param name="periodBeginning">Période de début d'affichage</param>
            <param name="periodEnd">Période de fin d'affichage</param>
            <param name="mediaImpactedList">Liste de medias impactés</param>
            <param name="idVehicle">Identifiant du media sélectionné</param>
            <returns>Code html Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetUIEmptyExcel(System.Int32,System.Int32)">
            <summary>
            Génère le code html sprécisant qu'il n'y a pas de données à afficher
            </summary>
            <param name="language">Langue du site</param>
            <param name="nbCol">Nombre de colonne que le tableau aurait du avoir en cas de présence de données</param>
            <returns>Code html généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.IsNewDetailLevel(TNS.AdExpress.Web.Core.DetailLevelItemInformation,System.Object[0:,0:],System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Vérifie s'il s'agit d'un nouveau niveau de détail
            </summary>
            <param name="detailLevelItemInformation">Element de niveau de détail</param>		
            <param name="data">Tableau de résultats</param>
            <param name="dataRowIndex">Index ligne de données</param>
            <param name="dataColumnIndex">Index Colonne de données</param>	
            <param name="currentLineIndex">index ligne en cours</param>
            <param name="oldLabelLevel">ancien libellé élémént</param>
            <returns>Vrai si nouveau niveau de détail</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetMailDetailPNA(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int32)">
            <summary>
            Renvoie le code Html correspondant aux critères d'une version PNA
            </summary>
            <param name="webSession">WebSession</param>
            <param name="data">Les données</param>
            <param name="i">l'index dans la table de données</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetMailDetailCAGENRAL(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int32,System.String[])">
            <summary>
            Renvoie le code Html correspondant aux critères d'une version CA Genral
            </summary>
            <param name="webSession">WebSession</param>
            <param name="data">Les données</param>
            <param name="i">l'index dans la table de données</param>
            <param name="mailContent">Mail Content List</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetMailDetailCAPRESSE(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int32,System.String[])">
            <summary>
            Renvoie le code Html correspondant aux critères d'une version CA Presse
            </summary>
            <param name="webSession">WebSession</param>
            <param name="data">Les données</param>
            <param name="i">l'index dans la table de données</param>
            <param name="mailContent">Mail Content List</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetMailDetailCAGESTION(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int32,System.String[])">
            <summary>
            Renvoie le code Html correspondant aux critères d'une version CA Gestion
            </summary>
            <param name="webSession">WebSession</param>
            <param name="data">Les données</param>
            <param name="i">l'index dans la table de données</param>
            <param name="mailContent">Mail Content List</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetMailDetailPNAExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int32,System.String,System.Collections.ArrayList)">
            <summary>
            Renvoie le code Html correspondant aux critères d'une version PNA
            </summary>
            <param name="webSession">WebSession</param>
            <param name="data">Les données</param>
            <param name="i">l'index dans la table de données</param>
            <param name="classe">style utilisé</param>
            <param name="prefixe">prefixe</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetMailDetailCAGENRALExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int32,System.String,System.Collections.ArrayList)">
            <summary>
            Renvoie le code Html correspondant aux critères d'une version CA Genral
            </summary>
            <param name="webSession">WebSession</param>
            <param name="data">Les données</param>
            <param name="i">l'index dans la table de données</param>
            <param name="classe">style utilisé</param>
            <param name="prefixe">prefixe</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetMailDetailCAGESTIONExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int32,System.String,System.Collections.ArrayList)">
            <summary>
            Renvoie le code Html correspondant aux critères d'une version CA Gestion
            </summary>
            <param name="webSession">WebSession</param>
            <param name="data">Les données</param>
            <param name="i">l'index dans la table de données</param>
            <param name="classe">style utilisé</param>
            <param name="prefixe">prefixe</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaInsertionsCreationsResultsUI.GetMailDetailCAPRESSExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int32,System.String,System.Collections.ArrayList)">
            <summary>
            Renvoie le code Html correspondant aux critères 'mail content' d'une version CA
            </summary>
            <param name="webSession">WebSession</param>
            <param name="data">Les données</param>
            <param name="i">l'index dans la table de données</param>
            <param name="classe">style utilisé</param>
            <param name="prefixe">prefixe</param>
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.IndicatorSynthesisUI">
            <summary>
            Classe d'affichage des données de la synthèse des indicateurs sectorielles.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorSynthesisUI.GetIndicatorSynthesisHtmlUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Boolean)">
            <summary>
            Présente au format HTML la synthèse des indicateurs sectorielles.
            </summary>
            <param name="webSession">Sesssion du client</param>
            <param name="excel">Vrai si sortie au format excel</param>
            <param name="pdf">Vrai si sortie au format Pdf</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorSynthesisUI.GetIndicatorSynthesisExcelUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Présente au format Excel la synthèse des indicateurs sectorielles.
            </summary>
            <param name="webSession">Sesssion du client</param>
            <param name="excel">Vrai si sortie au format excel</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorSynthesisUI.IsUnitValue(System.Int32,System.Int32)">
            <summary>
            Vérifie si une valeur est de type unité (KEuro,euro,...)
            </summary>
            <param name="lineIndex">index ligne du tableau</param>
            <param name="columnIndex">index colonne du tableau</param>
            <returns>Vrai si type unité.</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorSynthesisUI.IsPercentageValue(System.Int32,System.Int32)">
            <summary>
            Vérifie si une valeur est en % (PDV,Evolution,...)
            </summary>
            <param name="lineIndex">index ligne du tableau</param>
            <param name="columnIndex">index colonne du tableau</param>
            <returns>Vrai si pourcentage.</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorSynthesisUI.IsNumberValue(System.Int32,System.Int32)">
            <summary>
            Vérifie si une valeur est un nombre (KEuro,euro,...)
            </summary>
            <param name="lineIndex">index ligne du tableau</param>
            <param name="columnIndex">index colonne du tableau</param>
            <returns>Vrai si nombre.</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorSynthesisUI.AddSeparator(System.Boolean,System.Boolean)">
            <summary>
            Separateur de lignes du tableau HTML.
            </summary>	
            <param name="excel">Vrai si format excel</param>
            <param name="comparativeStudy">Vrai s iétude comparative</param>
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.IndicatorEvolutionUI">
            <summary>
            Génère le code HTML pour l'indicateur Evolution
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorEvolutionUI.GetEvolutionIndicatorUI(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,System.Boolean)">
            <summary>
            Affichage d'un tableau Référence ou Annonceur
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tableType">Type du tableau</param>
            <param name="excel">True si excel</param>
            <returns>Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorEvolutionUI.GetAllEvolutionIndicatorUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Affichage de l'ensemble des tableaux
            </summary>
            <param name="webSession">Session du client</param>
            <param name="excel">True si excel</param>
            <returns>Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorEvolutionUI.GetAllEvolutionIndicatorExcelUI(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Sortie Excel de l'indicateur Evolution
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML pour Excel</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.DynamicTablesUI">
            <summary>
            Classe UI du module tableau dynamique (analyse sectorielle)
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicTablesUI.GetDynamicTableUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Lance l'affichage correspondant au tableau demandé
            </summary>
            <param name="webSession">Session du client</param>
            <param name="excel">Format Excel</param>
            <returns>UI du tableau</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicTablesUI.GetDynamicTableUI_1_2(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.Object[0:,0:],System.Boolean)">
            <summary>
            Tableau de types 1 et 2
            </summary>
            <param name="webSession">Session du client</param>
            <param name="html">Chaine HTML</param>
            <param name="data">Données</param>
            <param name="excel">True si sortie Excel, false sinon</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicTablesUI.GetDynamicTableUI_3_4_10_11(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.Object[0:,0:],System.Boolean,System.Boolean)">
            <summary>
            Tableau de types 3 et 4, 10 et 11
            </summary>
            <param name="webSession">Session du client</param>
            <param name="html">Chaine HTML</param>
            <param name="data">Données</param>
            <param name="extendedToMonths"></param>
            <param name="excel">True si sortie Excel, false sinon</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicTablesUI.GetDynamicTableUI_5(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.Object[0:,0:],System.Boolean)">
            <summary>
            Tableau de type 5
            </summary>
            <param name="webSession">Session du client</param>
            <param name="html">Chaine HTML</param>
            <param name="data">Données</param>
            <param name="excel">True si sortie Excel, false sinon</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicTablesUI.GetDynamicTableUI_6_7_8_9(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.Object[0:,0:],System.Boolean)">
            <summary>
            Tableau de types 6, 7, 8, 9
            </summary>
            <param name="webSession">Session du client</param>
            <param name="html">Chaine HTML</param>
            <param name="data">Données</param>
            <param name="excel">True si sortie Excel, false sinon</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicTablesUI.NoData(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Pas de données
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicTablesUI.UnvalidFrequencyDelivery(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Fréquence de livraison des données invalide
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicTablesUI.GetDynamicTableExcelUI(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Sortie Excel
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Code Source pour Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicTablesUI.NumericDataAppend(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.Double,System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>
            Afficher une valeur numérique
            </summary>
            <param name="webSession">Session client</param>
            <param name="html">Code Html à remplire</param>
            <param name="data">Données</param>
            <param name="multiYearLine">True si année multiple</param>
            <param name="lineLabel">Ligne du libellé</param>
            <param name="excel">True si Excel</param>
            <param name="totalLine">Ligne Total</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicTablesUI.NumericDataAppend(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.Double,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Afficher une valeur numérique
            </summary>
            <param name="webSession">Session du client</param>
            <param name="html">Html à remplire</param>
            <param name="data">Données</param>
            <param name="evolution">True si evolution</param>
            <param name="percentage">True si pourcentage</param>
            <param name="dataLineUpperbound">?Bonne Question?</param>
            <param name="currenCol">Colonne courrante</param>
            <param name="first_data_column">Première colonne</param>
            <param name="excel">True si EXcel, False sinon</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicTablesUI.IsMultiYearLine(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Test si une ligne est une ligne multiAnnée ou non
            </summary>
            <param name="line">Ligne</param>
            <param name="first_data_line">Première ligne</param>
            <param name="nb_year">Nombre d'année</param>
            <param name="nb_option">Numéro de l'option</param>
            <returns>True si une ligne est une ligne multiAnnée, False sinon</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.SupportPlanUI">
            <summary>
            Build the user interface for the APPM module, tab "Valorisation and efficiency by media"
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.SupportPlanUI.GetHtml(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Int64,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Generate HTML Code so as to display the detail of the insertions
            </summary>
            <param name="dataSource">Data Source</param>
            <param name="webSession">User session</param>
            <param name="dateBegin">Beginning of the study</param>
            <param name="dateEnd">End  of the study</param>
            <param name="idBaseTarget">Default target</param>
            <param name="idAdditionaleTarget">Other target</param>
            <param name="idWave">Study wave</param>
            <param name="excel">Specify if it must fit excel code</param>
            <returns>HTML Code</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.AnalyseFamilyInterestPlanChartUI">
            <summary>
            Classe pour construire les graphiques des périodicité plan
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.AnalyseFamilyInterestPlanChartUI.#ctor">
            <summary>
            constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.AnalyseFamilyInterestPlanChartUI.InterestFamilyPlanChart(TNS.AdExpress.Web.UI.Results.APPM.APPMChartUI,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Graphiques Famille d'interêts
            </summary>
            <param name="appmChart">Objet Webcontrol</param>
            <param name="webSession">Session du client</param>
            <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="dateBegin">date du debut</param>
            <param name="dateEnd">date de fin</param>
            <param name="baseTarget">cible de base</param>
            <param name="additionalTarget">cible seléctionnée</param>
            <param name="typeFlash">Si flash true</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.AnalyseFamilyInterestPlanChartUI.getSeriesDataBase(System.Data.DataTable,System.String[]@,System.Double[]@)">
            <summary>
            Obtient les séries de valeurs des unités pour la cible de base à afficher graphiquement
            </summary>
            <param name="dt">table de données</param>
            <param name="xValues">libellés du graphique</param>
            <param name="yValues">valeurs pour graphique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.AnalyseFamilyInterestPlanChartUI.getSeriesDataAdditional(System.Data.DataTable,System.String[]@,System.Double[]@)">
            <summary>
            Obtient les séries de valeurs des unités pour la cible sélectionnée à afficher graphiquement
            </summary>
            <param name="dt">table de données</param>
            <param name="xValues">libellés du graphique</param>
            <param name="yValues">valeurs pour graphique</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.AnalyseFamilyInterestPlanChartUI.getSeriesDataCgrp(System.Data.DataTable,System.String[]@,System.Double[]@,System.String[]@,System.Double[]@,System.Double@)">
            <summary>
            Obtient les séries de valeurs des unités pour la cible sélectionnée à afficher graphiquement
            </summary>
            <param name="dt">table de données</param>
            <param name="xValuesBase">libellés du graphique</param>
            <param name="yValuesBase">valeurs pour graphique</param>
            <param name="xValuesSelected">Liebllés sélectionnée</param>
            <param name="yValuesSelected">Valeur sélectionnée</param>
            <param name="maxScale">Echelle de l'axe X du graphe</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.AnalyseFamilyInterestPlanChartUI.setSeriesInterestFamily(System.Data.DataTable,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.Series,System.String[],System.Double[],System.Drawing.Color[],System.String,System.Boolean)">
            <summary>
            Crétion du graphique unité(grp,euro,isertion,page) 
            </summary>
            <param name="dt">tableau de résultats</param>
            <param name="chartArea">contenant objet graphique</param>
            <param name="series">séries de valeurs</param>
            <param name="xValues">séries de libellés</param>
            <param name="yValues">séries de valeurs</param>
            <param name="barColors">couleurs du graphique</param>
            <param name="typeFlash">sortie flash</param>
            <param name="chartAreaName">Nom du conteneur de l'image</param>
            <returns>séries de valeurs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.AnalyseFamilyInterestPlanChartUI.setSeriesBarInterestFamily(System.Data.DataTable,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.Series,System.String[],System.Double[],System.Drawing.Color,System.String,System.Double,System.Boolean)">
             <summary>
             Crétion du graphique unité Cgrp (histogramme)
             </summary>
             <param name="dt">tableau de résultats</param>
             <param name="chartArea">contenant objet graphique</param>
             <param name="series">séries de valeurs</param>
             <param name="xValues">séries de libellés</param>
             <param name="yValues">séries de valeurs</param>
            <param name="barColor">couleurs du graphique</param>
            <param name="chartAreaName">Nom du conteneur de l'image</param>
            <param name="maxScale">echelle maximum</param>
             <param name="typeFlash">sortie flash</param>
             <returns>séries de valeurs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.AnalyseFamilyInterestPlanChartUI.InitializeComponent(System.Data.DataTable,TNS.AdExpress.Web.UI.Results.APPM.APPMChartUI,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.ChartArea,System.Boolean)">
            <summary>
            Initialise les styles du webcontrol pour média radio et télé
            </summary>
            <param name="dt">tableau de données</param>
            <param name="appmChart">Objet Webcontrol</param>
            <param name="chartAreaUnit">conteneur de l'image répartition unité</param>
            <param name="chartAreaUnitadditional">conteneur de l'image répartition pour cible selectionnée</param>
            <param name="chartAreaCgrp">conteneur de l'image répartition pour Cgrp</param>
            <param name="typeFlash">sortie flash</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.AnalyseFamilyInterestPlanChartUI.InitializeComponent(System.Data.DataTable,TNS.AdExpress.Web.UI.Results.APPM.APPMChartUI,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.ChartArea,System.Boolean)">
            <summary>
            Initialise les styles du webcontrol pour média radio et télé
            </summary>
            <param name="dt">tableau de données</param>
            <param name="appmChart">Objet Webcontrol</param>
            <param name="chartAreaUnit">conteneur de l'image répartition unité</param>
            <param name="chartAreaCgrp">conteneur de l'image répartition pour Cgrp</param>
            <param name="typeFlash">sortie flash</param>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.PopUpWebPage">
            <summary>
            Page mère des page Web de résultats s'affichant dans des popup
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.PopUpWebPage.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.MediaPlanRules">
            <summary>
            Gestion metier des plans media
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanRules.GetFormattedTableWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Fonction qui formate un DataSet en un tableau qui servira à faire un Calendrier d'actions
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Tableau résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanRules.GetFormattedTableWithMediaDetailLevelForZoom(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Fonction qui formate un DataSet en un tableau qui servira à faire un Calendrier d'actions
            </summary>
            <param name="webSession">Session du client</param>
            <param name="zoomDate">Zoom</param>
            <returns>Tableau résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanRules.GetFormattedTableWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.Boolean)">
            <summary>
            Fonction qui formate un DataSet en un tableau qui servira à faire un Calendrier d'actions
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginUserDate">Date utilisateur de début</param>
            <param name="endUserDate">Date utilisateur de fin</param>
            <param name="zoom">Mode Zoom</param>
            <returns>Tableau résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanRules.GetNbLevel(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le nombre d'élément dans le détail media
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanRules.GetL1Id(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow)">
            <summary>
            Obtient l'identifiant du détail media de niveau 1
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">Ligne de la table de résultat</param>
            <returns>Identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanRules.GetL2Id(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow)">
            <summary>
            Obtient l'identifiant du détail media de niveau 2
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">Ligne de la table de résultat</param>
            <returns>Identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanRules.GetL3Id(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow)">
            <summary>
            Obtient l'identifiant du détail media de niveau 3
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">Ligne de la table de résultat</param>
            <returns>Identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanRules.GetL4Id(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow)">
            <summary>
            Obtient l'identifiant du détail media de niveau 4
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">Ligne de la table de résultat</param>
            <returns>Identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanRules.GetL1Label(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow)">
            <summary>
            Obtient le libellé du détail media de niveau 1
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">Ligne de la table de résultat</param>
            <returns>Identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanRules.GetL2Label(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow)">
            <summary>
            Obtient le libellé du détail media de niveau 2
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">Ligne de la table de résultat</param>
            <returns>Identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanRules.GetL3Label(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow)">
            <summary>
            Obtient le libellé du détail media de niveau 3
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">Ligne de la table de résultat</param>
            <returns>Identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanRules.GetL4Label(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataRow)">
            <summary>
            Obtient le libellé du détail media de niveau 4
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dr">Ligne de la table de résultat</param>
            <returns>Identifiant</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.InfoNewsRules">
            <summary>
            Traitement des listes de fichiers pour infos/news 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.InfoNewsRules.GetData(System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le tableau de résultat d'infos/news
            </summary>
            <param name="name">Nom de la plaquette</param>
            <param name="webSession">Session</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.InfoNewsRules.VerifCharacter(System.String)">
            <summary>
            Fonction qui teste la présence d'un caractère spécifié dans une chaine
            </summary>
            <param name="name">Chaine à tester</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.InfoNewsRules.FormatFileName(System.String,System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Formatage du nom du fichier en libellé MOIS ANNEE
            </summary>
            <param name="name">Nom de la plaquette</param>
            <param name="fileName">Nom du fichier</param>
            <param name="webSession">Session</param>
            <returns>Libellé</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.DashBoardRules">
            <summary>
            Classe métier du module tableaux de bord 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.GetDataTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère un tableau de bord en fonction de la sélection effectuée par le client. 
            </summary>
            <param name="webSession">Session utilisateur</param>		
            <remarks>
            Utilise les méthodes:
            	- DashBoardDataAccess.getData(webSession,yearN,yearN1) : obtient les données à traiter
            	- BuildDataTable(ds,webSession,vehicleType) : construit le tableau de bord <code>object[,] tab</code>	
            </remarks>
            <returns>Tableau contenant les données à livrer structurées suivant le tableau préformaté
            sélectionné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.BuildDataTable(System.Data.DataSet,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Construit un tableau structuré de type 1 à 12 en fonction des détails sélectionnés.		
            Etapes:
            	- Vérification de la présence de données dans dsData
            	- Construction des constantes nécessaires au traitement des données:		
            		- index de la première colonne à contenir des données quantitatives
            		- tableau des index de nomenclature contenant pour chaque niveau de nomenclature des triplets
            		(index colonne de la nom dans dsData, ligne du niveau dans le tableau de resultat, Identifiant du niveau)
            </summary>
            <param name="dsData">DataSet issue de la couche BDD. Il contient déjà les données nécessaires à 
            l'édition du tableau en fonction des niveaux de détails préformatés et du tableau considéré</param>
            <param name="webSession">Session utilisateur</param>
            <param name="vehicleType">type du média</param>
            <returns>Un tableau structurant les données de dsData pour un tableau de type 1 ou 2</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataSet,System.Object[0:,0:],TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Collections.Hashtable)">
            <summary>
            Obtient le tableau de résultats en fonction de la sélection utilisateur
            </summary>
            <param name="webSession">session du client</param>
            <param name="dsData">table de données</param>
            <param name="tab">tableau de résultats à remplir</param>
            <param name="vehicleType">type du média sélectionné</param>
            <param name="sectorHashtable">Liste identifiant des familles à afficher en colonne pour tableau Media\Famille</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.BuildDataTableRepartition(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Object[0:,0:]@,System.Int32@,System.Int32@,System.String,System.String,System.Int32[],System.Boolean,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Int32)">
            <summary>
            Remplit des valeurs dans les cellules du tableau de résultats
            pour le type répartition sélectionné : tableaux 4 à 12
            </summary>
            <param name="webSession">session du client</param>
            <param name="dt">table de données</param>
            <param name="tab">tableau de résultats</param>
            <param name="row">index ligne tableau de résultats</param>
            <param name="col">index colonne tableau de résultats</param>
            <param name="criteriaPeriodN">critère de sélection sur table de données période N</param>
            <param name="criteriaPeriodN1">critère de sélection sur table de données période N-1</param>
            <param name="coordCellTab">coordonnées  de la dernière cellule traitée</param>
            <param name="isTotalLine">vrai si ligne totale</param>	
            <param name="vehicleType">type de média</param>
            <param name="yearN1">année précédente</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.GetDataTableType_4_5_7_8_10_11(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Object[0:,0:]@,System.Int32@,System.Int32@,System.Int32[],System.Boolean,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Int32)">
            <summary>
            Construit lese tableaux de bord Media ou familles X Repartition 
            </summary>
            <param name="webSession">session du client</param>
            <param name="dt">table de données</param>
            <param name="tab">tableau de résultats</param>
            <param name="row">index ligne tableau de résultats</param>
            <param name="col">index colonne tableau de résultats</param>
            <param name="coordCellTab">coordonnées  de la dernière cellule traitée</param>
            <param name="isTotalLine">vrai si ligne totale</param>	
            <param name="vehicleType">type de média</param>
            <param name="yearN1">année précédente</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.BuildDataTableType_Media_X_Sector(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Object[0:,0:]@,System.Int32@,System.Int32@,System.Int32[],System.Collections.Hashtable,System.Int32)">
            <author>D. Mussuma</author>
              <since>22/06/2006</since>	
             <summary>
             Construit le tableau de résultats Media par famille de produits.
             </summary>				
             <param name="webSession">session du client</param>
             <param name="dt">table de données</param>
             <param name="tab">tableau de résultats</param>
             <param name="row">index ligne tableau de résultats</param>
             <param name="col">index colonne tableau de résultats</param>
             <param name="coordCellTab">Coordonnées d'un cellule du tableau de résultats</param>		
             <param name="sectorHashtable">Liste identifiants des familles</param>
             <param name="year">année N</param>
             <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.FillLineTableType_Media_X_Sector(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Object[0:,0:]@,System.Int32@,System.Int32@,System.String,System.String,System.String,System.Int32[],System.Boolean,System.Collections.Hashtable)">
            <author>D. Mussuma</author>
              <since>22/06/2006</since>		
             <summary>
             Remplit une ligne du tableau de résultats avec en ligne les données concernant un média sur une période définie.
             </summary>	
             <param name="webSession">session du client</param>
             <param name="dt">table de données</param>
             <param name="tab">tableau de résultats</param>
             <param name="row">index ligne tableau de résultats</param>
             <param name="col">index colonne tableau de résultats</param>
            <param name="operation">Operation Sql</param>
             <param name="criteriaN">Critère de sélection période N</param>
             <param name="criteriaN1">Critère de sélection période N-1</param>
             <param name="coordCellTab">coordonnées  de la dernière cellule traitée</param>
             <param name="isTotalLine">vrai si ligne totale</param>	
             <param name="sectorHashtable">Liste identifiants des familles associés à leur index de colonne dans le tableau de résultats</param>
             <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.FillCellTableType_Media_X_Sector(System.Object[0:,0:],System.Int32,System.Data.DataRow,System.Int32,System.Collections.Hashtable,System.String)">
            <summary>
            Remplit une cellule d'un tableau de type media par famille
            </summary>
            <param name="tab">tableau de résultats</param>
            <param name="row">index ligne du tableau</param>
            <param name="dr">ligne de données </param>
            <param name="year">année</param>
            <param name="sectorHashtable">liste des identifiants de familles associés à leur indexcolonne dans le tableau de résulats</param>
            <param name="unitLabel">libellé unité courant</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.BuildDataTableType_4_5_6(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Object[0:,0:]@,System.Int32@,System.Int32@,System.String,System.String,System.String,System.Int32[],System.Boolean,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Remplit des valeurs dans les cellules du tableau de résultats
            pour le type répartition format : tableaux 4 , 5 et 6
            </summary>
            <param name="webSession">session du client</param>
            <param name="dt">table de données</param>
            <param name="tab">tableau de résultats</param>
            <param name="row">index ligne tableau de résultats</param>
            <param name="col">index colonne tableau de résultats</param>
            <param name="operation">operation a effectuer</param>
            <param name="criteriaN">critère de sélection sur table de données période N</param>
            <param name="criteriaN1">critère de sélection sur table de données période N-1</param>
            <param name="coordCellTab">coordonnées  de la dernière cellule traitée</param>
            <param name="isTotalLine">vrai si ligne totale</param>	
            <param name="vehicleType">Type de média</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.BuildDataTableType_7_8_9(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Object[0:,0:]@,System.Int32@,System.Int32@,System.String,System.String,System.String,System.Int32[],System.Boolean,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Remplit des valeurs dans les cellules du tableau de résultats
            pour le type répartition format : tableaux 7 , 8 et 9
            </summary>
            <param name="webSession">session du client</param>
            <param name="dt">table de données</param>
            <param name="tab">tableau de résultats</param>
            <param name="row">index ligne tableau de résultats</param>
            <param name="col">index colonne tableau de résultats</param>
            <param name="criteriaN">critère de sélection sur table de données période N</param>
            <param name="criteriaN1">critère de sélection sur table de données période N-1</param>
            <param name="coordCellTab">coordonnées  de la dernière cellule traitée</param>
            <param name="isTotalLine">vrai si ligne totale</param>	
            <param name="operation">operation à effectuer sur les données</param>
            <param name="vehicleType">type du média sélectionné</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.BuildDataTableType_10_11_12(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Object[0:,0:]@,System.Int32@,System.Int32@,System.String,System.String,System.String,System.Int32[],System.Boolean,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Remplit des valeurs dans les cellules du tableau de résultats
            pour le type répartition format : tableaux 10 , 11 et 12
            </summary>
            <param name="webSession">session du client</param>
            <param name="dt">table de données</param>
            <param name="tab">tableau de résultats</param>
            <param name="row">index ligne tableau de résultats</param>
            <param name="col">index colonne tableau de résultats</param>
            <param name="criteriaN">critère de sélection sur table de données période N</param>
            <param name="criteriaN1">critère de sélection sur table de données période N-1</param>
            <param name="coordCellTab">coordonnées  de la dernière cellule traitée</param>
            <param name="isTotalLine">vrai si ligne totale</param>	
            <param name="operation">operation à effectuer sur les données</param>
            <param name="vehicleType">type du média sélectionné</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.GetDataTableType_6_9_12(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Object[0:,0:]@,System.Int32@,System.Int32@,System.Int32[],System.Boolean,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Int32)">
            <summary>
            Construit lese tableaux de bord Unité X Repartition 
            </summary>
            <param name="webSession">session du client</param>
            <param name="dt">table de données</param>
            <param name="tab">tableau de résultats</param>
            <param name="row">index ligne tableau de résultats</param>
            <param name="col">index colonne tableau de résultats</param>	
            <param name="coordCellTab">coordonnées  de la dernière cellule traitée</param>
            <param name="isTotalLine">vrai si ligne totale</param>	
            <param name="vehicleType">type de média</param>
            <param name="yearN1">année précédente</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.FillTabUnits(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Object[0:,0:]@,System.Int32@,System.Int32@,System.String,System.String,System.Int32[],System.Boolean,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Remplit des valeurs dans les cellules du tableau de résultats
            </summary>
            <param name="webSession">session du client</param>
            <param name="dt">table de données</param>
            <param name="tab">tableau de résultats</param>
            <param name="row">index ligne tableau de résultats</param>
            <param name="col">index colonne tableau de résultats</param>		
            <param name="criteriaPeriodN">critère de sélection sur table de données période N</param>
            <param name="criteriaPeriodN1">critère de sélection sur table de données période N-1</param>
            <param name="coordCellTab">coordonnées  de la dernière cellule traitée</param>
            <returns>coordonnées des index de la dernière cellule traitée</returns>
            <param name="isTotalLine">vrai si ligne totale</param>	
            <param name="vehicleType">type de média</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.FillTabUnitByPeriod(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Object[0:,0:]@,System.Int32@,System.Int32@,System.String,System.String,System.Int32[],System.Boolean,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Int32,System.Int32)">
            <summary>
            Remplit des valeurs dans les cellules du tableau de résultats 
            pour chauqe colonne correspondant à 1 mois ou une semaine
            </summary>
            <param name="webSession">session du client</param>
            <param name="dt">table de données</param>
            <param name="tab">tableau de résultats</param>
            <param name="row">index ligne</param>
            <param name="col">index colonne </param>
            <param name="criteriaN">critère période N</param>
            <param name="criteriaN1">critère période N1</param>
            <param name="coordCellTab">coordonnées de la cellule de l'élément parent</param>
            <param name="isTotalLine">vrai si ligne totale</param>
            <param name="vehicleType">type du média</param>
            <param name="yearN1">année précédente</param>
            <param name="year">année courante</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.InsertValue(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:]@,System.Int32@,System.Int32@,System.Int32[],System.Boolean,System.Boolean)">
            <summary>
            Insert des valeurs dans les cellules du tableau de résultats
            </summary>
            <param name="webSession">session du client</param>		
            <param name="tab">tableau de résultats</param>
            <param name="row">index ligne tableau de résultats</param>
            <param name="col">index colonne tableau de résultats</param>
            <param name="coordCellTab">coordonnées de la cellule de l'élément parent</param>
            <param name="isTotalLine">vrai si ligne totale</param>
            <param name="incrementRow">change de ligne</param>		
            <returns>coordonnées des index de la fdernière cellule traitée</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.InsertValue(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Object[0:,0:]@,System.Int32@,System.Int32@,System.String,System.String,System.String,System.Int32[],System.Boolean,System.Boolean)">
            <summary>
            Insert des valeurs dans les cellules du tableau de résultats
            </summary>
            <param name="webSession">session du client</param>
            <param name="dt">table de données</param>
            <param name="tab">tableau de résultats</param>
            <param name="row">index ligne tableau de résultats</param>
            <param name="col">index colonne tableau de résultats</param>
            <param name="operation">operation sql sur table de données</param>
            <param name="criteriaPeriodN">critère de sélection sur table de données période N</param>
            <param name="criteriaPeriodN1">critère de sélection sur table de données période N-1</param>
            <param name="coordCellTab">coordonnées de la cellule de l'élément parent</param>
            <param name="isTotalLine">vrai si ligne totale</param>
            <param name="incrementRow">change de ligne</param>		
            <returns>coordonnées des index de la dernière cellule traitée</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.SetTabLinesPeriodLabel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int32,System.Int32,System.Int32,System.Boolean)">
             <summary>
            Insert libellés période dans ligne du tableau de résultats 
             </summary>
             <param name="webSession">session du client </param>
             <param name="tab">tableau de résultats</param>
             <param name="row">index ligne tableau de résultats</param>
             <param name="col">index colonne tableau de résultats</param>
             <param name="year">année</param>
             <param name="isPreviousYear">vrai si année précédente</param>
             <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.IsDetailPeriod(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Verifie qu'une periode doit être detaillé
            </summary>
            <param name="webSession">client</param>
            <returns>vraie si la periode est sélectionnée et faux sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.ComputeTabPDMOrPDV(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:]@,System.Int32,System.Int32)">
            <summary>
            Calcul du PDM  ou PDV pour le tableau de résultats
            </summary>
            <param name="webSession">session du client</param>
            <param name="tab">tableau de résultats</param>
            <param name="row">index ligne tableau de résultats</param>
            <param name="col">index colonne tableau de résultats</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.ComputePercentage(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:]@,System.Int32,System.Int32)">
            <summary>
            Calcul le pourcentage de répartition par rapport au total
            </summary>
            <param name="webSession">session du client</param>
            <param name="tab">tableau de résultats</param>
            <param name="row">index ligne tableau de résultats</param>
            <param name="col">index colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.GetL2Id(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Retourne Identifiant De l'élément de nomenclature média ou produit sélectionné de niveau 2
            </summary>
            <param name="webSession">session du client</param>
            <returns>élément sélectionné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.GetL2Label(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Retourne Identifiant l'élément de nomenclature média ou produit sélectionné de niveau 2
            </summary>
            <param name="webSession">session du client</param>
            <returns>élément sélectionné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.GetL3Id(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Retourne idebtifiant de l'élément de nomenclature média ou produit sélectionné de niveau 3
            </summary>
            <param name="webSession">session du client</param>
            <returns>élément sélectionné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.GetL3Label(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Retourne l'élément de nomenclature média ou produit sélectionné de niveau 3
            </summary>
            <param name="webSession">session du client</param>
            <returns>élément sélectionné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.IsLevel3(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Retourne l'élément de nomenclature média ou produit sélectionné de niveau 3
            </summary>
            <param name="webSession">session du client</param>
            <returns>élément sélectionné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.HasTotalLines(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Vérifie si le tableau doit afficher des lignes avec le total des éléments
            de la nomenclatture média ou produit sélectionnée
            </summary>
            <param name="webSession">session du client</param>
            <returns>vrai si doit afficher les lignes des totaux</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.GetSizedTable(System.Data.DataSet,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Obtient un tableau dimensionné
            </summary>
            <param name="dsData">groupe de données</param>
            <param name="webSession">session du client</param>
            <param name="vehicleType">type de média</param>
            <returns>tableau dimensionné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.UnitsCount(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Donne le nombre de colonnes unités du tableau
            </summary>
            <param name="webSession">session du client</param>
            <param name="vehicleType">type de média</param>
            <returns>nombre de colonnes média du tableau</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.RowsCount(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataSet,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Donne le nombre de lignes  du tableau
            </summary>
            <param name="webSession">session du client</param>
            <param name="dsData">groupe de données</param>
             <param name="vehicleType">type de média</param>
            <returns>nombre de lignes  du tableau</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.RowsCount(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Nombre de lignes  du tableau en fonction des options d'analyse
            </summary>
            <param name="webSession">session du client</param>
            <param name="Evolution">vrai si evolution </param>
            <param name="PDM">vrai si PDM</param>
            <param name="PDV">vrai si PDV</param>	
            <param name="countElement">nombre d'élément média </param>
            <returns> Nombre de lignes  du tableau en fonction des options d'analyse</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.CountMedia(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataSet,System.Int32@,System.Int32@)">
            <summary>
            Compte le nombre de média
            </summary>
            <param name="webSession">session du client</param>
            <param name="dsData">groupe de données</param>
            <param name="countInterestCenter">nombre de centre d'intérêts</param>
            <param name="countMedia">nombre de support</param>					
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.CountSector(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataSet)">
            <summary>
            Compte le nombre de familles
            </summary>
            <param name="dsData">groupe de données</param>
            <param name="webSession">session du client</param>	
            <returns>nombre de familles</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.CountMonthOrWeek(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Compte le nombre de mois ou de semaine à afficher
            </summary>
            <param name="webSession">session du cleint</param>
            <returns>nombre de mois ou de semaine à afficher</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.CountRepartition(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Compte le nombre de Colonne pour un type de répatition
            </summary>
            <param name="webSession">session du client</param>
            <param name="vehicleType">type de média</param>
            <returns>nombre de Colonne pour un type de répatition</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.CountRepartition(TNS.AdExpress.Constantes.Web.Repartition.repartitionCode,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Compte le nombre de Colonne pour un type de répatition
            </summary>
            <param name="repartitionCode">type de répartition</param>
            <param name="vehicleType">type de média</param>
            <returns>nombre de répatition</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.SetTabLabel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Data.DataTable,System.Collections.Hashtable)">
            <summary>
            Insert les libellés du tableau
            </summary>
            <param name="webSession">session du client</param>
            <param name="tab">tableau </param>
            <param name="vehicleType">type de média</param>
            <param name="dt">Table de données résultats</param>
            <param name="sectorHashTable">Liste identifiant des familles à afficher en colonne pour tableau Media\Famille</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.SetTabLinesLabel(System.Object[0:,0:],System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Insert identifiant et libellé d'un l'élément
            déans une cellule du tableau de résultats
            </summary>
            <param name="tab"> tableau de résultats</param>
            <param name="id"> identifiant</param>
            <param name="name">libellé d'un l'élément</param>
            <param name="row">index ligne tableau de résultats</param>	
            <param name="colId">identifiant colonne</param>	
            <param name="colName">libellé colonne</param>
            <returns> tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DashBoardRules.CriteriaPeriod(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String@,System.String@,System.Int32,System.Boolean)">
            <summary>
            Formatte les dates sélectionnés sous forme YYYYMMDD
            </summary>
            <param name="webSession">session du client</param>
            <param name="PeriodBeginningDate">période de début</param>
            <param name="PeriodEndDate">période de fin</param>
            <param name="isPreviousYear">vrai si année précédente</param>		
            <param name="year">année sélectionné</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.PDVPlanRules">
            <summary>
            This class is used to format the data for constructing PDV Plan table and charts.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.PDVPlanRules.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Formats the date for APPM PDV Plan Table 
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <param name="graphics">Boolean that indicates whether the rules are to be constructed for graphics or table</param>
            <returns>Formatted table for the PDV Analysis table</returns>		
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.PDVPlanRules.GetGraphicsData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64)">
            <summary>
            Formats the data for APPM PDV Plan Charts 
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="additionalTarget">additional target</param>
            <returns>Formatted table for the PDV Analysis Graph</returns>		
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.Script">
            <summary>
            Fonctions javascript
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Functions.Script.GET_SELECTION_JS_REGISTER">
            <summary>
            Register name for GetHelpJS javascript
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.GetSelectionDetailJS">
            <summary>
            Get Java script for help popup
            </summary>
            <returns>Javascript Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.AddJsEvent">
            <summary>
            Ajout un Evènement JavaScript
            </summary>
            <remarks>Nom du script AddJsEvent</remarks>
            <returns>Script</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.SaveGenericDetailLevelFromList(System.String,System.String,System.String)">
            <summary>
            Permet d'ajouter un élément de la liste des niveaux de détail enregistrés
            </summary>
            <remarks>
            Le script est à enregistrer sous le nom SaveGenericDetailLevelFromList
            </remarks>
            <param name="listName">Nom de la liste</param>
            <param name="optionText">Texte à ajouter</param>
            <param name="optionValue">Valeur à ajouter</param>
            <returns>JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.RemoveGenericDetailLevelFromList(System.String,System.String)">
            <summary>
            Permet de supprimer un élément de la liste des niveaux de détail enregistrés
            </summary>
            <remarks>
            Le script est à enregistrer sous le nom RemoveGenericDetailLevelFromList
            </remarks>
            <param name="listName">Nom de la liste</param>
            <param name="indexToRemove">Index de la liste à supprimer</param>
            <returns>JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.Popup">
            <summary>
            JavaScript d'ouverture d'une popup dondt l'url, la largeur et la hauteur sont à préciser à l'appel du script
            </summary>
            <returns>Code JavaScript</returns>
        </member>
        <member name="F:TNS.AdExpress.Web.Functions.Script.RESIZABLE_POPUP_REGISTER">
            <summary>
            Key register for popupOpenBis
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.ReSizablePopUp">
            <summary>
            PopUp Opening Javascript, height an width to set up
            </summary>
            <returns>JavaScript Code</returns>
        </member>
        <member name="F:TNS.AdExpress.Web.Functions.Script.NEW_WINDOW_REGISTER">
            <summary>
            Key register for OpenNewWindow
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenNewWindow">
            <summary>
            New windows javascript
            </summary>
            <returns>Javascript Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.DynamicMediaPlan">
            <summary>
            JavaScript qui permet de rendre dynamique les calendriers d'action
            Fermeture des catégories
            Zoom sur un support
            </summary>
            <remarks>
            Le script est à enregistrer sous le nom DynamicMediaPlan
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.MyAdExpress(System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Affiche le détail d'une sélection dans mon AdExpress
            </summary>
            <remarks>
            Le script est à enregistrer sous le nom myAdExpress
            </remarks>
            <param name="idSession">identifiant de la session Mon AdExpress</param>
            <param name="webSession">Session Client</param>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.InsertHidden">
            <summary>
            Insert l'identifiant de la session dans les champs hidden
            </summary>
            <remarks>
            Le script est à enregistrer sous le nom insertHidden
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.ShowHideContent">
            <summary>
            Javascript permettant d'ouvrir/Fermer des blocs div.
            </summary>
            <remarks>
            Le script est à enregistrer sous le nom ShowHideContent
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.ShowHideContent1(System.Int32)">
            <summary>
            Javascript permettant d'ouvrir/Fermer des blocs div.
            </summary>
            <remarks>
            Le script est à enregistrer sous le nom showHideContent1 
            </remarks>
            <param name="i">Identifiant</param>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenPressCreation">
            <summary>
            Construit le code HTML de la fonction JavaScript qui permet d'ouvrir une création Press
            </summary>
            <remarks>
            Enregistrer sous openPressCreation
            </remarks>
            <returns>Code HTML du script</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenDownload">
            <summary>
            Ouvre la popUp qui permet de lire ou de télécharger une création radio ou tv
            </summary>
            <remarks>
            A enregistrer sous openDownload
            </remarks>
            <returns>Code javascript généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenAlertsDownload(System.String)">
            <summary>
            Ouvre la popUp qui permet de lire ou de télécharger une création radio ou tv
            </summary>
            <remarks>
            A enregistrer sous openAlertsDownload
            </remarks>
            <returns>Code javascript généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenCreation">
            <summary>
            Script d'ouverture de la popUp de détail des insertions.
            </summary>
            <remarks>
            Script à enregistrer sous le nom openCreation
            </remarks>
            <returns>Code du scriptopenCreation</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenInsertions">
            <summary>
            Script d'ouverture de la popUp de détail des insertions.
            </summary>
            <remarks>
            Script à enregistrer sous le nom OpenInsertions
            </remarks>
            <returns>Code du scriptopenCreation</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenCreatives">
            <summary>
            Script d'ouverture de la popUp de détail des versions
            </summary>
            <remarks>
            Script à enregistrer sous le nom OpenCreatives
            </remarks>
            <returns>Code du scriptopenCreation</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenCreationByParution">
            <summary>
            Script d'ouverture de la popUp de détail des insertions.
            </summary>
            <remarks>
            Script à enregistrer sous le nom openCreationByParution
            </remarks>
            <returns>Code du scriptopenCreation</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenCreationCompetitorAlert">
            <summary>
            Script d'ouverture d'une popup de détail des insertions pour l'alerte concurrentielle
            </summary>
            <remarks>
            Script à enregistrer sous le nom OpenCreationCompetitorAlert
            </remarks>
            <returns>Code du script</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenMediaPlanAlert">
            <summary>
            Script d'ouverture d'une popup de plan média alerte
            </summary>
            <remarks>
            Script à enregistrer sous le nom OpenMediaPlan
            </remarks>
            <returns>Code du script</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.ErrorCloseScript(System.String)">
            <summary>
            Script qui permet à un code serveur d'envoyer une erreur au client et de fermer la page responsable de l'erreur
            </summary>
            <param name="msg">Message d'erreur</param>
            <returns>Code Javascript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.CloseScript">
            <summary>
            Script qui permet fermer la fenêtre
            </summary>
            <remarks>Nom; closeSript</remarks>
            <returns>Code Javascript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.Alert(System.String)">
            <summary>
            Script affichant un message d'erreur
            </summary>
            <param name="msg">Message d'erreur</param>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.AlertWithWindowClose(System.String)">
            <summary>
            Script affichant un message d'erreur
            </summary>
            <param name="msg">Message d'erreur</param>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenExcel">
            <summary>
            Construit un JavaScript ouvrant le détail des insertions dans une PopUp Excel
            </summary>
            <remarks>
            Enregistré sous openExcel
            </remarks>
            <returns>Code Javascript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenMediaDetailExcel">
            <summary>
            Construit un JavaScript ouvrant le détail des insertions dans une PopUp Excel
            </summary>
            <remarks>
            Enregistré sous openMediaDetailExcel
            </remarks>
            <returns>Code Javascript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenExcelByParution">
            <summary>
            Construit un JavaScript ouvrant le détail des insertions dans une PopUp Excel
            </summary>
            <remarks>
            Enregistré sous openExcel
            </remarks>
            <returns>Code Javascript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenGad">
            <summary>
            Construit un javascript pur le GAD
            </summary>
            <remarks>
            Enregistré sous openGad
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenExcelCompetitorAlert">
            <summary>
            Construit un JavaScript ouvrant le détail des insertions dans une PopUp Excel pour une alerte concurrentiel
            </summary>
            <remarks>
            Enregistré sous openExcelCompetitorAlert
            </remarks>
            <returns>Code Javascript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenExcelMediaPlanAlert">
            <summary>
            Construit un JavaScript ouvrant le détail des insertions dans une PopUp Excel pour une alerte plan média
            </summary>
            <remarks>
            Enregistré sous openExcelCompetitorAlert
            </remarks>
            <returns>Code Javascript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenValueExcelMediaPlanAlert">
            <summary>
            Construit un JavaScript ouvrant le détail des unités dans une PopUp Excel pour une alerte plan média
            </summary>
            <remarks>
            Enregistré sous openExcelCompetitorAlert
            </remarks>
            <returns>Code Javascript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenExcelMediaPlanAnalysis">
            <summary>
            Construit un JavaScript ouvrant le détail des insertions dans une PopUp Excel pour une alerte plan média
            </summary>
            <remarks>
            Enregistré sous openExcelCompetitorAnalysis
            </remarks>
            <returns>Code Javascript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenValueExcelMediaPlanAnalysis">
            <summary>
            Construit un JavaScript ouvrant le détail des insertions dans une PopUp Excel pour une alerte plan média
            </summary>
            <remarks>
            Enregistré sous openExcelCompetitorAnalysis
            </remarks>
            <returns>Code Javascript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenExcelZoomMediaPlanAlert">
            <summary>
            Construit un JavaScript ouvrant le détail des insertions dans une PopUp Excel pour une alerte plan média
            </summary>
            <remarks>
            Enregistré sous openExcelZoomMediaPlanAlert
            </remarks>
            <returns>Code Javascript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenValueExcelZoomMediaPlanAlert">
            <summary>
            Construit un JavaScript ouvrant le détail des insertions dans une PopUp Excel pour une alerte plan média
            </summary>
            <remarks>
            Enregistré sous openExcelZoomMediaPlanAlert
            </remarks>
            <returns>Code Javascript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.TrapEnter(System.String)">
            <summary>
            JavaScript permettant d'intercepter l'évènement "enter" et de faire un appel serveur imputé à un contrôle quelconque passé en paramètre.
            </summary>
            <remarks>
            Enregistré sous le nom trapEnter
            </remarks>
            <param name="validatedComponent">Composant qui sera vu comme le responsable du postBack</param>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.AllSelection">
            <summary>
            Sélectionne toutes les cases d'un père
            </summary>
            <remarks>
            Enregistrer sous allSelection
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.Integration">
            <summary>
            Coche toutes les cases fils lors de la sélection 
            d'un case intégration automatique
            </summary>
            <remarks>
            Enregistrer sous integration
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.AllLevelSelection">
            <summary>
            Script permettant de sélectionner toutes les éléments d'un niveau dans la sélection
            </summary>
            <remarks>
            Enregistrer sous allSelectionRef
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.DivDisplayer">
            <summary>
            Javascript permettant d'ouvrir/Fermer un div 
            </summary>
            <remarks>
            Le script est à enregistrer sous le nom DivDisplayer
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.DivDisplayerOption(System.String)">
            <summary>
            Javascript permettant d'ouvrir/Fermer un div 
            </summary>
            <remarks>
            Le script est à enregistrer sous le nom DivDisplayer
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.ExpandColapseAllDivs">
            <summary>
            Javascript permettant d'ouvrir/Fermer un tableau de div
            </summary>
            <remarks>
            Le script est à enregistrer sous le nom ExpandColapseAllDivs
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.SelectAllChilds">
            <summary>
            Script permettant de sélectionner toutes les variétés dans sélection
            de groupe
            </summary>
            <remarks>
             Enregistrer sous SelectAllSegments
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.AllGroupIntegration">
            <summary>
            Script permettant de gérer le cochage des cases pour l integration automatique
            de groupe
            </summary>
            <remarks>
            Enregistrer sous AllGroupIntegration et fait appel à la méthode GroupIntegration(chkName)
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.GroupIntegration">
            <summary>
            Script permettant de gérer le cochage des cases pour l integration automatique
            de groupe
            </summary>
            <remarks>
            Enregistrer sous GroupIntegration
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.SaveUniverseOpen(System.String,TNS.AdExpress.Constantes.Classification.Branch.type,System.Int64)">
            <summary>
            Script permettant d'ouvrir la fenetre modale d'enregistrement d'un univers
            Elle est ouverte par la fenetre appelante mais se ferme independemment de cette derniere
            Le script est destinée à être placé dans un lien ou un onClick, onLoad...
            Pas d'enregistrement
            </summary>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.InsertIdMySession4">
            <summary>
            Génération du code html d'un script de
            Gestion de la sélection d'un radioButton dans le chargement des univers
            </summary>
            <remarks>
            A enregistrer sous insertIdMySession4
            </remarks>
            <returns>Code html DU SCRIPT</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.CheckAllChilds">
            <summary>
            Script permettant de gérer le cochage des cases pour le choix des médias
            Le choix étant exclusif (un media ou la case plurimedia)
            </summary>
            <remarks>
            Enregistrer sous CheckAllChilds
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.ImageDropDownListScripts(System.Boolean)">
            <summary>
            Gestion de l'ImageDropDownList
            </summary>
            <remarks>
            CommonImageDropDownListScripts
            </remarks>	
            <param name="pictShow">Image à montrer</param>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.SelectExclusiveAllChilds">
            <summary>
            Script permettant de sélectionner exclusivement un ensemble de checkbox		
            </summary>
            <remarks>
            Enregistrer sous SelectExclusiveAllChilds
            </remarks>
            <returns>CodeJavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.PortofolioCreation">
            <summary>	
            Ouverture d'une popup pour le chemin de fer	
            </summary>
            <remarks>
            Enregistré sous portofolioCreation
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.PortofolioCreationWithAnchor">
            <summary>	
            Ouverture d'une popup pour le chemin de fer	avec positionnement de la publicité dans son contexte
            </summary>
            <remarks>
            Enregistré sous portofolioCreation
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.PortofolioOneCreation">
            <summary>		 
            Ouverture d'une popup pour une image d'un support
            </summary>
            <remarks>
            Enregistré sous portofolioOneCreation
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.PortofolioDetailMedia">
            <summary>		 
            Ouverture d'une popup pour le detail portefeuille d'un support
            </summary>
            <remarks>
            Enregistré sous portofolioDetailMedia
            </remarks>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenPortofolioDetailMediaPopUpExcel">
            <summary>
            Construit un JavaScript ouvrant le détail des insertions dans une PopUp Excel
            </summary>
            <remarks>
            Enregistré sous OpenPortofolioDetailMediaPopUpExcel		
            </remarks>
            <returns>Code Javascript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.RedirectError(System.String)">
            <summary>
            Script de redirection vers la page d'erreur du site
            </summary>
            <returns>Code du script</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.SelectPeriod(System.String,System.String,System.String)">
            <summary>
            Active la période (cumulée,mensuelle,hebdomadaire) sélectionnée par l'utilisateur
            et désactive lez concurrents.
            </summary>
            <param name="monthID">ID du Contrôle des périodes mensuelles </param>
            <param name="weekID">ID du Contrôle des périodes hebdomadaires</param>
            <param name="cumulID">ID du Contrôle des périodes cumulée</param>
            <returns>script choix d'une période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.GenerateNumber">
            <summary>
            Génère un nombre à partir de la date
            </summary>
            <returns>Nombre généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.PopUpInsertion(System.Boolean)">
            <summary>
            Generate the code so as to open a popup
            </summary>
            <param name="excel">Specify if the webpage is on HTML or Excel format</param>
            <returns>JavaScript Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.OpenPopUpJustificatif">
            <summary>
            Ouvre une pop up pour les justificatifs
            </summary>
            <returns>JavaScript Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.ViewAdZoom">
            <summary>
            Affiche une image, par rapport à un évèment onMouseOver venant d'une imagette
            </summary>
            <returns>JavaScript Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.PreloadImages(System.String[],System.String)">
            <summary>
            Précharge des images
            </summary>
            <param name="fileList">Liste des nom de fichier image</param>
            <param name="path">Chemin</param>
            <returns>Javascript code</returns>
            <remarks>Le nom des images commence par ImgN, où N étant le numéro</remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.GoToAnchorImage">
            <summary>
            Positionnement de l'image dans son contexte
            </summary>
            <returns>Javascript code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.GetObjectWindowsMediaPlayerRender(System.Int32)">
            <summary>
            Script d'ouveture d'un fichier Media Payer
            </summary>
            <returns>Script</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.GetObjectRealPlayer">
            <summary>
            Script d'ouveture d'un fichier Real Payer
            </summary>
            <returns>Script</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Script.PostBack(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Vérifie s'il faut afficher le choix de sélectyion comparative ou non
            </summary>
            <param name="IsDynamicModule">Indique si on est dans le module dynamique</param>
            <param name="calendarButtonId">Le boutton valider du calendrier</param>
            <param name="ListButtonId">Le boutton valider des listes</param>
            <param name="comparativeLinkId">Le boutton qui affiche la sélection comparative</param>
            <param name="weekListId">La liste des semaines</param>
            <param name="dateSelectedItemId">Le hidden input qui contient les informations sur le calendrier</param>
            <param name="dayListId">La liste de jours</param>
            <param name="monthListId">la liste des mois</param>
            <param name="previousWeekCheckBox">Dernière semaine</param>
            <param name="previousDayCheckBox">Dernier jour</param>
            <param name="currentYearCheckBox">Année courante</param>
            <param name="previousMonthCheckBox">Mois précédent</param>
            <param name="previousYearCheckBox">Année précédente</param>
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.MediaDetailLevel">
            <summary>
            Fonctions des niveaux de détail média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.MediaDetailLevel.LevelMediaToHtmlString(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le texte du niveau de détail support
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Texte du niveau de détail support</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.MediaDetailLevel.LevelMediaToExcelString(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le texte du niveau de détail support
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Texte du niveau de détail support</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.MediaDetailLevel.IsLevel2InterestCenter(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Vérifie si le niveau 2 de détail média concerne les centres d'intérêts 
            </summary>
            <param name="webSession">session du client</param>
            <returns>vrai si centres d'intérêts </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.MediaDetailLevel.GetImpactedMedia(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Obtient la liste des média impacté par le détail média.
            </summary>
            <param name="webSession">Session du client</param>	
            <param name="idMediaLevel1">Identifiant du media niveau 1</param>
            <param name="idMediaLevel2">Identifiant du media niveau 2</param>
            <param name="idMediaLevel3">Identifiant du media niveau 3</param>
            <param name="idMediaLevel4">Identifiant du media niveau 4</param>
            <returns>liste des média </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.MediaDetailLevel.GetFilters(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Obtient la liste des filtres dans les niveaux de détails génériques.
            Similaire à GetImpactedMedia mais utilise le collections génériques typées
            </summary>
            <param name="webSession">Session du client</param>	
            <param name="idLevel1">Identifiant du niveau 1</param>
            <param name="idLevel2">Identifiant du niveau 2</param>
            <param name="idLevel3">Identifiant du niveau 3</param>
            <param name="idLevel4">Identifiant du niveau 4</param>
            <returns>liste des niveaux de détails uimpliqués dans les filtres </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.MediaDetailLevel.GetMediaList">
            <summary>
            Obtient la liste de niveaux de détail média
            </summary>
            <returns>liste de niveaux de détail média</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.MediaDetailLevel.HasSloganRight(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Vérifie si le client aux accroches en fonction du niveau de détail produit et média.
            </summary>
            <remarks>Les niveaux de détail par accroche sont disponibles uniquement dans 
            un plan media défini par marque ou par produit
            </remarks>
            <param name="webSession">Session du client</param>
            <returns>Vrai si le client à accès aux accroches</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.MediaDetailLevel.GetGenericLevelDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean@,System.Web.UI.WebControls.Label,System.Boolean)">
            <summary>
            Niveau de détail support ou média(Niveaux détaillés par  :)
            </summary>
            <param name="webSession">Session du client</param>
            <param name="displayGenericlevelDetailLabel">Indique si affiche niveau de détail générique</param>
            <param name="genericlevelDetailLabel">Libellé niveaux de détail</param>
            <param name="excel">Indique si sortie excel</param>
            <returns>HTML</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.WebDBException">
            <summary>
            Classe gérant les exceptions du module de traduction
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.WebDBException.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.WebDBException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.WebDBException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.VehicleListDataAccessException">
            <summary>
            Gestion des exceptions de VehicleListDataAccessException
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VehicleListDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VehicleListDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VehicleListDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.TitleListDataAccessException">
            <summary>
            Gestion des exceptions de TitleListDataAccessException
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.TitleListDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.TitleListDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.TitleListDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SynthesisUIException">
            <summary>
            IHM Synthèses
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SynthesisUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SynthesisUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SynthesisUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SectorDataAverageUIException">
            <summary>
            UI Synthèse
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataAverageUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataAverageUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataAverageUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.ProgramTypeListException">
            <summary>
            Description résumée de ProgramTypeListException.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProgramTypeListException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProgramTypeListException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProgramTypeListException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.IndicateurNoveltyRulesException">
            <summary>
            Rules: Analyse sectorielle Indicateurs
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.IndicateurNoveltyRulesException.#ctor">
            <summary>
            constructeur par défaut
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.IndicateurNoveltyRulesException.#ctor(System.String)">
            <summary>
            constructeur avec message d'erreur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.IndicateurNoveltyRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.FilesItemSystemException">
            <summary>
            Rules: Info/News
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FilesItemSystemException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FilesItemSystemException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FilesItemSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.DynamicTablesDataAccess">
            <summary>
            Classe d'accès à la base de données pour le module de tableaux dynamiques (analyse sectorielle)
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicTablesDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Méthode qui retourne les données nécessaires à la construction d'un tableau dynamique
            en considérant les critères de la session.
            Elle ajoute au fur et à mesure les différents clauses nécessaires à la requête: select, from, jointures
            sélection media et produit, droits, langage et activation, tri et regroupement
            <seealso cref="T:TNS.AdExpress.Web.Core.Sessions.WebSession"/>
            </summary>
            <remarks>!!!!!La classe métier qui s'appuie sur cette classe BDD utilise l'ordre des champs ds le select
            Il n'est pas recommandé de changer l'ordre des champs media, produit...
            Utilise les méthodes suivantes:
            	private static void appendSelectClause(WebSession, Stringuilder);
            	private static void appendFromClause(WebSession, Stringuilder, String);
            	private static void appendJointClause(WebSession, Stringuilder);
            	private static void appendSelectionClause(WebSession, Stringuilder);
            	private static void appendRightClause(WebSession, Stringuilder);
            	private static void appendActivationLanguageClause(WebSession, Stringuilder, String);
            	private static void appendRegroupmentAndOrderClause(WebSession, Stringuilder);
            </remarks>
            <exception cref="M:TNS.AdExpress.Web.Exceptions.NoDataException.#ctor">
            Lancée en cas de période non valide
            </exception>
            <exception cref="M:TNS.AdExpress.Web.Exceptions.DeliveryFrequencyException.#ctor">
            Lancée en cas de de fréquence de livraison des données invalides
            </exception>
            <exception cref="M:TNS.AdExpress.Web.Exceptions.RecapAdvertiserDataAccessException.#ctor">
            Lancée en cas:
            	échec de connection à la base de données
            	échec d'exécution de la requête
            	échec de fermeture de la base de données
            </exception>
            <param name="webSession">Sesssion utilisateur</param>
            <returns>DataSet contenant les données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicTablesDataAccess.GetVehicleTableName(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Méthode privée qui détecte la table de recap à utiliser en fonction de la sélection média, produit
            et du niveau de détail choisi
            	détection d'une étude monomédia ou pluri média ==&gt; recap_tv ... ou recap_pluri
            	niveau de détail de la nomenclature produit ==&gt; recap ou recap_segment
            </summary>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.DynamicTablesDataAccessException">
            Lancée si aucune table de la base de doonées ne correspond au vehicle spécifié dans la session utilisateur.
            </exception>
            <param name="webSession">Session utilisateur</param>
            <returns>Chaîne de caractère correspondant au nom de la table à attaquer</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicTablesDataAccess.AppendSelectClause(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <remarks>!!!!!La classe métier qui s'appuie sur cette classe BDD utilise l'ordre des champs ds le select
            Il n'est pas recommandé de changer l'ordre des champs media, produit...
            étape:
            	- Sauvegardede l'index du dernier caractère de la requête a son arrivé afin de pouvoir insérer un pmrceau de requête si nécessaire
            	- Traitement des champs qualitatifs:
            		- Si le tableau preformaté affiche des données de la nomenclature media:
            			suivant le niveau de détail demandé, on ajoute les champs à la requete en normalisant leurs noms
            			chaque nom représente la nomenclature media (id_m) et le niveau considéré(id_m1, id_m2...)
            			Au cas ou le niveau de détail n'est pas repertorié, on applique par défaut le niveau vehicle uniquement et on update la session
            		- Si le tableau preformaté affiche des données de la nomenclature produit:
            			suivant le détail demandé, on ajoute les champs à la requete en normalisant leurs noms
            			chaque nom représente la nomenclature produit (id_p) et le niveau considéré(id_p1, id_p2)
            			Au cas ou le niveau de détail n'est pas repertorié, on applique par défaut le détail group uniquement et on update la session
            			Pour les niveaux faisant intervenir la nomenclature annonceur, on sauvegarde dans une strig un morceau de requete ramenant l'id_advertiser
            		- si la nompenclature produit est la nomenclature principale, on l'insere devant les champs 
            		de la nomenclature support qui devient par consequent la omenclature secondaire.
            	- Traitement des champs quantitatifs:
            		- ON commence par valider la période considérées en fonction de la fréquence de livraison des données
            		Si jamais la période n'est pas valide (données non accessiblkes par raport a la frequence), on lance une exception NoData
            		- construction de la liste des mois month a attaquer. POur chaquer mois, on fera la somme des lignes a ramener
            		- si le tableau nécessite des années, on utilise le champ total_year
            		- si le tableau est un mensuel cimulé, on construit la requete en faisant la somme des mois precedent sur la période pour chaque mois a rapatrier
            		exemple: periode Mars ==> mai, on prend mars et mars+avril et mars+avril+mai...
            		- si le tableau est un mensuel + total, on ramene tous les mois de la liste month plus un champ qui est la somme de tous les mois
            	-Traitement de la notion d'annonceur referent ou concurrent:
            		si l'univers d'annonceurs concurrents ou l'univers d'annonceurs de reference ne sont pas vides (non exclusif), on concatene a la requete le champ id_advertiser
            	- La colonne total est une facilité de programmation pour la construction des tableaux de type 5.
            		en effet, en considérant un champ 'total' bidon, on inclu dans la requete un niveau de 
            		nomenclature suplémentaire qui sera traite de la meme maniere que la nomenclature principale
            		dans les classes metier (valable uniquement pour la ableau de type 5 pour l instant)
            </remarks>
            <param name="webSession">Session utilisateur</param>
            <param name="sql">StringBuilder contenant la requete sql</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicTablesDataAccess.AppendFromClause(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.String)">
            <summary>
            Ajoute la clause from d'un requete sql.
            Etapes:
            	pour chaque champ qui est susceptible d'être présent dans la requête, on vérifie sa présence 
            	effective et on ajoute la table a laquelle il correspond au from
            </summary>
            <param name="webSession">Session utilisateur</param>
            <param name="sql">Requete sql</param>
            <param name="dataTable">nom de la table de recap à attaquer</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicTablesDataAccess.AppendJointClause(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder)">
            <summary>
            Ajoute a la requête sql les conditions dfe jointures entre la table des recap et les tabmes de 
            nomenclature. Pour chaque champ de nomenclmature susceptible d'aparaitre dans la requête, on 
            vérifie sa présence effective et si c'est le cas, on effectue la jointure avec la table de recap
            </summary>
            <param name="webSession">Session utilisateur</param>
            <param name="sql">Requête sql</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicTablesDataAccess.AppendSelectionClause(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder)">
            <summary>
            Ajout de la sélection produit et support du client:
            	Pour chaque niveau de la nomenclature produit (resp support), on teste sa présence dans l'arbre 
            	SlectionUniversProduct (resp SelectionUniversMedia). SI le niveau est prtésent dans l'arbre,
            	on le prend en compte dans la requête
            </summary>
            <param name="webSession">Session utilisateur</param>
            <param name="sql">Requête sql</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicTablesDataAccess.AppendRightClause(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder)">
            <summary>
            Ajoute les droits clients à la requête:
            	droits produits
            	droits media, initialement, on ne l'ai as pas pris en compte mais ils doivent l'être au niveau
            	vehicle uniquement. CAD que des qu'un utilisateur a droit à un support d'un vehicle, il a droit 
            	à tous les supports. Les droits media doivent encore être ajoutés.
            </summary>
            <param name="webSession">Session utilisateur</param>
            <param name="sql">Requête sql</param>
            <remarks>
            Utilise les méthodes:
            	TNS.AdExpress.Web.Functions.SQLGenerator.getAnalyseCustomerProductRight(WebSession, TablePrefixe, bool)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicTablesDataAccess.AppendActivationLanguageClause(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.String)">
            <summary>
            Ajoute la notion d'activation et de langage à la requête.
            </summary>
            <param name="webSession">Session utilisateur</param>
            <param name="sql">Requête sql</param>
            <param name="dataTable">Nom de la table des recap</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicTablesDataAccess.AppendRegroupmentAndOrderClause(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder)">
            <summary>
            Ajoute les clause order by et group by a la requête
            </summary>
            <param name="webSession">Session Utilisateur</param>
            <param name="sql">sql</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.CompetitorAlertCreationDataAccess">
            <summary>
            Base de données Affichier les création
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorAlertCreationDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.Int32,System.Int32,System.Int32)">
            <summary>
            Extrait le détail des insertions publicitaires dans un support, une catégorie, un média correspondant
            à la sélection utilisateur (nomenclatures produits et média, période) présente dans une session:
            	Extraction de la table attaquée et des champs de sélection à partir du vehicle
            	Construction et exécution de la requête
            	
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idVehicle">Identifiant du vehicle</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <param name="idElement">Identifiant de l'élément sélectioné?</param>
            <param name="level">Niveau de idElement?</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand on ne sait pas quelle table attaquer, quels champs sélectionner ou quand une erreur Orace s'est produite
            </exception>
            <returns>DataSet contenant le résultat de la requête</returns>
            <remarks>
            Utilise les méthodes:
            	private static string GetTable(DBClassificationConstantes.Vehicles.names idVehicle)
            	private static string GetFields(DBClassificationConstantes.Vehicles.names idVehicle)
            	private static string GetOrder(DBClassificationConstantes.Vehicles.names idVehicle)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorAlertCreationDataAccess.GetTable(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Int64)">
            <summary>
            Donne la table à utiliser pour le vehicle indiqué
            </summary>
            <param name="idVehicle">Identifiant du vehicle</param>
            <param name="currentModule">Module courant</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand le cas du vehicle spécifié n'est pas traité
            </exception>
            <returns>Chaine contenant le nom de la table correspondante</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorAlertCreationDataAccess.GetIdElement(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int32,System.Int64)">
            <summary>
            Fournit l'identifiant de l'élément sélectionné
            </summary>
            <returns>Condition sur l'élément sélectionné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorAlertCreationDataAccess.GetFields(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Donne les champs à utiliser pour le vehicle indiqué
            </summary>
            <param name="idVehicle">Identifiant du vehicle</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand le cas du vehicle spécifié n'est pas traité
            </exception>
            <returns>Chaine contenant les champs sélectionnés</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorAlertCreationDataAccess.GetOrder(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Donne l'ordre de tri des enregistrements extraits
            </summary>
            <param name="idVehicle">Identifiant du vehicle</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand le cas du vehicle spécifié n'est pas traité
            </exception>
            <returns>Chaine contenant les champs de tris</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.LocationPlanTypesDataAccess">
            <summary>
            Obtient les données des types d'emplacements du plan
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.LocationPlanTypesDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Obtient les données des types d'emplacements du plan
            </summary>
            <param name="webSession">session du client</param>
            <param name="dataSource">source de données</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="baseTarget">cible de base</param>
            <param name="additionalTarget">cible supplémentaire</param>
            <returns>données des types d'emplacements du plan</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.LocationPlanTypesDataAccess.GetFields(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Champs de la requêtes
            </summary>
            <param name="webSession">session du client</param>
            <returns>Champs de la requêtes</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.LocationPlanTypesDataAccess.GetTables">
            <summary>
            Libellés Tables 
            </summary>
            <returns> Tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.LocationPlanTypesDataAccess.GetJoint(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Jointures tables
            </summary>
            <param name="webSession">sesion du client</param>
            <returns>jointures</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.LocationPlanTypesDataAccess.GetCustomerSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Sélections du client
            </summary>
            <param name="webSession">session du client</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="baseTarget">cible de base</param>
            <param name="additionalTarget">cible supplémentaire</param>
            <returns>sélections du client</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.LocationPlanTypesDataAccess.GetGroupBy(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Regroupement des données
            </summary>
            <param name="webSession">session</param>
            <returns>Regroupement des données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.LocationPlanTypesDataAccess.GetOrderBy(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Tri des données
            </summary>
            <param name="webSession">session du client</param>
            <returns>requete Tri des données</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess">
            <summary>
            Gestion d'une sauvegarde de requête
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess._idMySession">
            <summary>
            Identifiant de la sauvegarde de session
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess._idDirectory">
            <summary>
            Identifiant du répertoire
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess._mySession">
            <summary>
            Nom de la sauvegarde de session
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess._savedSession">
            <summary>
            Objet contenant les éléments sauvegardé
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess._isSaved">
            <summary>
            Indique si la session est sauvegardée dans la base de données ou nom
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess._webSession">
            <summary>
            Session du client
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess.#ctor(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructeur
            </summary>
            <param name="idMySession">Identifiant de la sauvegarde</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess.SaveMySession(System.Int64,System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Sauvegarde d'une nouvelle session
            </summary>
            <param name="idDirectory">Identifiant du répertoire de sauvegarde</param>
            <param name="mySession">Nom de la session</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess.UpdateMySession(System.Int64,System.String,System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Mise à jour d'une session
            </summary>
            <param name="idDirectory">Identifiant du répertoire de sauvegarde</param>
            <param name="idMySession">Id session</param>
            <param name="mySession">Nom de la session</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess.Delete">
            <summary>
            Suppression de la sauvegarde
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess.CheckInDataBase">
            <summary>
            Vérifie si la sauvegarde est dans la base de données
            </summary>
            <returns>True si la sauvegarde est présente, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess.GetResultMySession(System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Méthode pour la récupération et la "deserialization" d'un objet WebSession à partir du champ BLOB de la table des sessions
            </summary>
            <returns>Retourne l'objet récupéré ou null si il y a eu un problème non géré</returns>
            <param name="idWebSession">Identifiant de la session</param>
            <param name="webSession">Session à la connexion d l'utilisateur</param>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess.IdMySession">
            <summary>
            Obtient l'identifiant de la sauvegarde
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess.MySession">
            <summary>
            Obtient le nom de la sauvegarde
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess.SavedSession">
            <summary>
            Obtient l'élément sauvegardé
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionDataAccess.IsSaved">
            <summary>
            Indique si la session est sauvegardée dans la base de données
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Functions">
            <summary>
            Fonctions liées à la base de données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.closeDataBase(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Ferme et dispose la connexion à la base de données
            </summary>
            <param name="webSession"></param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.CheckAvailableDateForMedia(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Vérification de la dernière date disponible pour un media dans la base de données des recap
            </summary>
            <param name="idVehicle">Identifiant du vehicle</param>
            <param name="webSession">Session du client</param>
            <returns>Dernier mois disponible</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.getVehicleTableName(System.Int64)">
            <summary>
            Méthode privée qui détecte la table de recap à utiliser en fonction de la sélection média, produit
            et du niveau de détail choisi
            	détection d'une étude monomédia ou pluri média ==&gt; recap_tv ... ou recap_pluri
            On ne considère pas le cas des tablme agrégées
            </summary>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.DynamicTablesDataAccessException">
            Lancée si aucune table de la base de doonées ne correspond au vehicle spécifié dans la session utilisateur.
            </exception>		
            <returns>Chaîne de caractère correspondant au nom de la table à attaquer</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.GetWebPlanTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Determine the correct table to use depending on the type of^period in the web session
            </summary>
            <param name="webSession">User Session</param>
            <returns>Table name to use</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.GetAPPMWebPlanTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Determine the correct table for APPM module to be used depending on the type of period in the web session
            </summary>
            <param name="webSession">Session of the client</param>
            <returns>Table name to use</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.GetDateFieldWebPlanTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Determine the correct date field to use depending on the type of period in the web session
            </summary>
            <param name="webSession">User Session</param>
            <returns>Field name to use</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.ExecuteQuery(System.String,System.String)">
            <summary>
            Exécution de la requête
            </summary>
            <param name="sql">sql</param>	
            <param name="ConnectionString">chaîne de connection</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.ExecuteQuery(System.String,Oracle.DataAccess.Client.OracleConnection)">
            <summary>
            Exécution de la requête
            </summary>
            <param name="sql">sql</param>
            <param name="connection">objet oracle connection</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.SelectDistinct(System.String,System.Data.DataTable,System.String)">
            <summary>
            Select the distinct values from a column
            </summary>
            <param name="TableName">Name of the new table</param>
            <param name="SourceTable">DataTable Source</param>
            <param name="FieldName">Field Name</param>
            <returns>DataTable with distinc value from SourceTable.FieldName</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.SelectDistinct(System.String,System.Data.DataTable,System.String[])">
            <summary>
            Select the distinct values from n column
            </summary>
            <param name="TableName">Name of the new table</param>
            <param name="SourceTable">DataTable Source</param>
            <param name="FieldsName">Table of Fields Name (the order is also the sort order)</param>
            <returns>DataTable with distinc value from SourceTable.FieldName</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.ColumnEqual(System.Object,System.Object)">
            <summary>
            Compares two values to see if they are equal. Also compares DBNULL.Value.
            </summary>
            <remarks>If your DataTable contains object fields, then you must extend this function to handle them in a meaningful way if you intend to group on them.</remarks>
            <param name="A">First Value</param>
            <param name="B">Second Value</param>
            <returns>True if A==B and false else</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.GetMediaInsertionsOrder(TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails,System.String)">
            <summary>
            Obtient l'ordre de tri des médias correspondants au détail media demandée par le client. 
            </summary>
            <param name="preformatedMediaDetail">Niveau du détail media demandé</param>
            <param name="prefixeMediaPlanTable">prefixe table média</param>
            <returns>Chaîne contenant les tables médias</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.GetRadioInsertionsOrder(System.Int32)">
            <summary>
            Obtient la column des spots radio à trier
            </summary>
            <param name="indexColumnToSort">index de colonne</param>
            <returns>champs spots radio à trier</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.GetTvInsertionsOrder(System.Int32)">
            <summary>
            Obtient la column des spots télé à trier
            </summary>
            <param name="indexColumnToSort">index de colonne</param>
            <returns>champs spots télé à trier</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.GetOutDoorInsertionsOrder(System.Int32)">
            <summary>
            Obtient la column des affiches à trier
            </summary>
            <param name="indexColumnToSort">index de colonne</param>
            <returns>champs  affiche à trier</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.IsBelongToTvNatThematiques(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Détermine si un support appartient à la TV Nationale Thématiques
            </summary>
            <param name="webSession">session du client</param>
            <param name="idMedia">identifiant du support</param>
            <returns>vrai si support appartient à la TV Nationale Thématiques</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.SumMonthlyExpenditureEuroToString(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Obtient la liste des libellés de colonne des dépenses  mensuelles en euro  pour les Recap.
            </summary>
            <param name="webSession">session client</param>
            <param name="comparativeStudy">Vrai si étude comparative</param>
            <returns>liste des mois</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.SumMonthlyExpenditureEuroToString(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Boolean)">
            <summary>
            Obtient la liste des libellés de colonne des dépenses  mensuelles en euro  pour les Recap.
            </summary>
            <param name="webSession">session client</param>
            <param name="comparativeStudy">Vrai si étude comparative</param>
            <param name="onlyComparativeMonthString">Vrai si retourne uniquement les mois de l'année précédente à l'année sélectionnée.</param>
            <returns>liste des mois</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection">
            <summary>
            Univers sélectionné média et produit sélectionné par le client dans l'annalyse sectorielle.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection._webSession">
            <summary>
            Session client
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection._advertiserAccessList">
            <summary>
            Annonceurs en accès
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection._competitorAdvertiserAccessList">
            <summary>
            Annonceurs en concurrents
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection._segmentAccessList">
            <summary>
            Variétés en accès
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection._segmentExceptionList">
            <summary>
            Variétés en exception
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection._groupAccessList">
            <summary>
            Groupes en accès
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection._groupExceptionList">
            <summary>
            Groupes en exception
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection._categoryAccessList">
            <summary>
            Catégories en accès
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection._mediaAccessList">
            <summary>
            Supports en accès
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection._vehicleAccessList">
            <summary>
            Médias en accès
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructeur
            </summary>
            <param name="webSession">Session client</param>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection.AdvertiserAccessList">
            <summary>
            Annonceurs en accès
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection.CompetitorAdvertiserAccessList">
            <summary>
            Annonceurs  concurrents
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection.SegmentAccessList">
            <summary>
            Variétés en accès
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection.SegmentExceptionList">
            <summary>
            Variétés en exception
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection.GroupAccessList">
            <summary>
            groupes en accès
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection.GroupExceptionList">
            <summary>
            Groupes en exception
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection.CategoryAccessList">
            <summary>
            Catégories en accès
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection.MediaAccessList">
            <summary>
            Supports en accès
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection.VehicleAccessList">
            <summary>
            Médias en accès
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.SelectionSubGroup">
            <summary>
            Représente un sous groupe de sélection d'univers
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.SelectionGroup">
            <summary>
            Représente un groupe de sélection d'univers
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.SelectionGroup._id">
            <summary>
            Identifiant du groupe
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.SelectionGroup._itemsNumber">
            <summary>
            Nombre d'éléments dans le groupe
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.SelectionGroup._indexInResultTable">
            <summary>
            Indexe du sous total dans le tableau de résultat
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.SelectionGroup.#ctor(System.Int32)">
            <summary>
            Constructeurs par défaut
            </summary>
            <param name="id">Identifiant du groupe</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.SelectionGroup.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">Identifiant du groupe</param>
            <param name="itemsNumber">Nombre d'éléments dans le groupe</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.SelectionGroup.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">Identifiant du groupe</param>
            <param name="itemsNumber">Nombre d'éléments dans le groupe</param>
            <param name="indexInResultTable">Indexe du sous total dans le tableau de résultat</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.SelectionGroup.Id">
            <summary>
            Obtient l'identifiant du group
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.SelectionGroup.Count">
            <summary>
            Obtient le nombre d'éléments du group
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.SelectionGroup.SetItemsNumber">
            <summary>
            Dédinit le nombre d'éléments du group
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.SelectionGroup.IndexInResultTable">
            <summary>
            Obtient ou définit l'indexe du groupe dans un tableau de résultats
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.SelectionSubGroup._parentId">
            <summary>
            Identifiant du groupe père
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.SelectionSubGroup._dataBaseId">
            <summary>
            Identifiant du groupe dans la base de données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.SelectionSubGroup.#ctor(System.Int32)">
            <summary>
            Constructeurs par défaut
            </summary>
            <param name="id">Identifiant du sous groupe</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.SelectionSubGroup.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">Identifiant du sous groupe</param>
            <param name="itemsNumber">Nombre d'éléments dans le groupe</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.SelectionSubGroup.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">Identifiant du sous groupe</param>
            <param name="itemsNumber">Nombre d'éléments dans le groupe</param>
            <param name="indexInResultTable">Indexe du sous total dans le tableau de résultat</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.SelectionSubGroup.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">Identifiant du sous groupe</param>
            <param name="itemsNumber">Nombre d'éléments dans le groupe</param>
            <param name="indexInResultTable">Indexe du sous total dans le tableau de résultat</param>
            <param name="parentId">Identifiant du groupe père</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.SelectionSubGroup.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">Identifiant du sous groupe</param>
            <param name="itemsNumber">Nombre d'éléments dans le groupe</param>
            <param name="indexInResultTable">Indexe du sous total dans le tableau de résultat</param>
            <param name="parentId">Identifiant du groupe père</param>
            <param name="dataBaseId">Identifiant du groupe dans la base de données</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.SelectionSubGroup.ParentId">
            <summary>
            Obtient ou définit l'identifiant du group père
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.SelectionSubGroup.DataBaseId">
            <summary>
            Obtient ou définit l'identifiant du group dans la base de données
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem">
            <summary>
            L'item utilisé pour les exports du plan media pour le marketing direct
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.VersionItem">
            <summary>
            VersionItem provides information for the display of a version
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.VersionItem._id">
            <summary>Version Id</summary>
              <author>gragneau</author>
              <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.VersionItem._cssClass">
            <summary>Component CssClass</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.VersionItem._parution">
            <summary>Parution date</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.VersionItem._path">
            <summary>Version path</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.VersionItem._advertiser">
            <summary>Annonceur</summary>
            <author>rkaina</author>
            		/// <since>jeudi 08 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.VersionItem._productId">
            <summary>Id produit</summary>
            <author>rkaina</author>
            <since>jeudi 08 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.VersionItem._product">
            <summary>Produit</summary>
            <author>rkaina</author>
            <since>jeudi 08 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.VersionItem._group">
            <summary>groupe de produit</summary>
            <author>rkaina</author>
            <since>jeudi 08 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.VersionItem._sector">
            <summary>Famille</summary>
            <author>rkaina</author>
            <since>jeudi 08 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.VersionItem._subsector">
            <summary>Classe</summary>
            <author>rkaina</author>
            <since>jeudi 08 août 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.VersionItem.#ctor(System.Int64,System.String,System.String)">
            <summary>Constructor</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.VersionItem.#ctor(System.Int64,System.String)">
            <summary>Constructor</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.VersionItem.Id">
            <summary>Get / Set Id Version</summary>
              <author>gragneau</author>
              <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.VersionItem.CssClass">
            <summary>Get / Set CssClass</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.VersionItem.Parution">
            <summary>Get / Set Parution Date</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.VersionItem.Path">
            <summary>Get / Set Version Path</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.VersionItem.Advertiser">
            <summary>Get / Set Annonceur</summary>
             <author>rkaina</author>
             <since>jeudi 08 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.VersionItem.ProductId">
            <summary>Get / Set Id produit</summary>
             <author>rkaina</author>
             <since>jeudi 08 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.VersionItem.Product">
            <summary>Get / Set Produit</summary>
             <author>rkaina</author>
             <since>jeudi 08 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.VersionItem.Group">
            <summary>Get / Set groupe de produit</summary>
             <author>rkaina</author>
             <since>jeudi 08 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.VersionItem.Sector">
            <summary>Get / Set Famille</summary>
             <author>rkaina</author>
             <since>jeudi 08 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.VersionItem.Subsector">
            <summary>Get / Set Classe</summary>
             <author>rkaina</author>
             <since>jeudi 08 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem._weight">
            <summary>
            poids d'une version
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem._expenditureEuro">
            <summary>
            Budget
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem._volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem._format">
            <summary>
            Format
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem._mailFormat">
            <summary>
            Format du contenant
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem._mailType">
            <summary>
            Type de document
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem._wpMailFormat">
            <summary>
            Format
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem._objectCount">
            <summary>
            Nombre d'items
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem._mailContent">
            <summary>
            Mail content
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem._mailingRapidity">
            <summary>
            Enveloppe gestion
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem._nbVisuel">
            <summary>Nombre de visuels</summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem._idMedia">
            <summary>Id Media</summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem.#ctor(System.Int64,System.String,System.String)">
            <summary>Constructor</summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem.#ctor(System.Int64,System.String)">
            <summary>Constructor</summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem.Weight">
            <summary>Get / Set poids d'une version</summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem.ExpenditureEuro">
            <summary>Get / Set Budget</summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem.Volume">
            <summary>Get / Set Volume</summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem.Format">
            <summary>Get / Set Format</summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem.MailFormat">
            <summary>Get / Set Format du contenant</summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem.MailType">
            <summary>Get / Set Type de document</summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem.WpMailFormat">
            <summary>Get / Set Format</summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem.ObjectCount">
            <summary>Get / Set Nombre d'items</summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem.MailContent">
            <summary>Get / Set Mail content</summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem.MailingRapidity">
            <summary>Get / Set Enveloppe gestion</summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem.NbVisuel">
            <summary>Get / Set Nombre de visuels</summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportMDVersionItem.IdMedia">
            <summary>Get / Set Id media</summary>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Results.PortofolioSystem">
            <summary>
            Construction d'un résultat pour Alerte Portefeuille ou Portefeuille d'un support.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.PortofolioSystem.GetAlertHtml(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau de l'alerte portefeuille
            </summary>
            <param name="page">Page</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML du tableau de l'analyse dynamique</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.PortofolioSystem.GetHtml(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau Portefeuille d'un support.
            </summary>
            <param name="page">Page</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML du tableau de l'analyse dynamique</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.PortofolioSystem.GetResultTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction des resulttable Portefeuille d'un support.
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Résult Table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.PortofolioSystem.GetExcel(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau de l'alerte portefeuille
            </summary>
            <param name="page">Page</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML du tableau de l'analyse dynamique</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.CompetitorAlertCreationsResultsUI">
            <summary>
            Construit le code HTML du tableau présentant le détail des insertions avec les créations associées
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorAlertCreationsResultsUI.GetAlertCompetitorCreationsResultsUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.String,System.Int64,System.Int32,System.Web.UI.Page)">
            <summary>
            Méthode globale
            </summary>
            <param name="webSession">Session Client</param>
            <param name="periodBegin">Début de période au format YYYYMMDD</param>
            <param name="periodEnd">Fin de période au format YYYYMMDD</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idElement">identifiant de l'élément sélectionné</param>
            <param name="level">Niveau où se trouve l'élément</param>
            <param name="page">page</param>
            <returns>tableau présentant le détail des insertions avec les créations associées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorAlertCreationsResultsUI.GetUIPress(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String)">
            <summary>
            Construit le code HTML du tableau présentant le détail des insertions Presse avec les créations associées
            	data vide : message d'erreur
            	data non vide :
            		Génération du code nécessaire à l'appel de l'export excel
            		Script d'ouverture d'une PopUp de zoom sur une création Presse
            		Construction du tableau HTML présentant le détail des insertions avec la hiérarchie 
            		vehicle > Catégorie > Support > date > page
            </summary>
            <param name="data">Tableau des données insertions</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page de résultat</param>
            <param name="idVehicle">Identifiant du média</param>
            <returns>Code HTML des insertions Presse</returns>
            <remarks>
            Utilise les méthodes : 
            	TNS.AdExpress.Web.Functions.Script.OpenPressCreation()
            	private static string getUIEmpty(int language)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorAlertCreationsResultsUI.GetUIRadio(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String)">
            <summary>
            Retourne le code html affichant le détails des insertions radio:
            	data vide : code HTML d'un message d'erruer
            	data non vide : code HTML du tableau présentant le détail radio insertion par insertion
            		Génération du code d'export Excel
            		Enregistrement du script d'ouverture de "AccessDownloadCreationsPopUp.aspx"
            		Rappel des paramètres
            		Génération du tableau des insertions ordonnées par Catégorie > Support > Date
            </summary>
            <param name="data">Tableau contenant les données à afficher</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page de retour</param>
            <param name="idVehicle">Identifiant du vehicule</param>
            <returns>Code html généré</returns>
            <remarks>
            Utilise les méthodes:
            	TNS.AdExpress.Web.Functions.Script.OpenDownload()
            	private static string getUIEmpty(int language)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorAlertCreationsResultsUI.GetUITV(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String)">
            <summary>
            Retourne le code html affichant le détails des insertions TV:
            	data vide : code HTML d'un message d'erruer
            	data non vide : code HTML du tableau présentant le détail TV insertion par insertion
            		Génération du code d'export Excel
            		Enregistrement du script d'ouverture de "AccessDownloadCreationsPopUp.aspx"
            		Rappel des paramètres
            		Génération du tableau des insertions ordonnées par Catégorie > Support > Date
            </summary>
            <param name="data">Tableau contenant les données à afficher</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page de retour</param>
            <param name="idVehicle">Identifiant du vehicule</param>
            <returns>Code html généré</returns>
            <remarks>
            Utilise les méthodes:
            	TNS.AdExpress.Web.Functions.Script.OpenDownload()
            	private static string getUIEmpty(int language)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorAlertCreationsResultsUI.GetUIOutDoor(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String)">
            <summary>
            Retourne le code html affichant le détails des insertions de la publicité extérieure:
            	data vide : code HTML d'un message d'erruer
            	data non vide : code HTML du tableau présentant le détail de la publicité extérieure insertion par insertion
            		Génération du code d'export Excel
            		Enregistrement du script d'ouverture de "AccessDownloadCreationsPopUp.aspx"
            		Rappel des paramètres
            		Génération du tableau des insertions ordonnées par Catégorie > Support > Date
            </summary>
            <param name="data">Tableau contenant les données à afficher</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page de retour</param>
            <param name="idVehicle">Identifiant du vehicule</param>
            <returns>Code html généré</returns>
            <remarks>
            Utilise les méthodes:
            	TNS.AdExpress.Web.Functions.Script.OpenDownload()
            	private static string GetUIEmpty(int language)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorAlertCreationsResultsUI.GetUIEmpty(System.Int32)">
            <summary>
            Génère le code html précisant qu'il n 'y a pas de données à afficher
            </summary>
            <param name="language">Langue du site</param>
            <returns>Code html Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorAlertCreationsResultsUI.GetUIEmpty(System.Int32,System.Int32)">
            <summary>
            Génère le code html précisant qu'il n 'y a pas de données à afficher
            </summary>
            <param name="language">Langue du site</param>
            <param name="code">code traduction</param>
            <returns>Code html Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorAlertCreationsResultsUI.GetCompetitorAlertCreationsExcelUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Int64,System.Int32,System.Web.UI.Page)">
            <summary>
            Méthode globale pour l'export Excel
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idElement">identifiant de l'élément</param>
            <param name="level">Niveau de l'élément sélectionné</param>
            <param name="page">Page</param>
            <returns>tableau pour l'export Excel présentant le détail des insertions avec les créations associées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorAlertCreationsResultsUI.GetUIPressExcel(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String,System.String,System.Int64,System.Int32)">
            <summary>
            Génère le code HTML nécessaire à l'export du détail des insertions presses:
            	data vide : Code HTML spécifiant une erreur (cas normalement impossible)
            	data non vide : 
            		Génération du tableau ordonné par catégorie > support > date > page
            </summary>
            <param name="data">Tableau de données</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page résultat</param>
            <param name="periodBeginning">Période de début d'affichage</param>
            <param name="periodEnd">Période de fin d'affichage</param>
            <param name="idElement">identifiant de l'élément</param>
            <param name="level">Niveau de l'élément sélectionné</param>
            <returns>Code html Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorAlertCreationsResultsUI.GetUIRadioExcel(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String,System.String,System.Int64,System.Int32)">
            <summary>
            Génère le code HTML nécessaire à l'export du détail des insertions radio:
            	data vide : Code HTML spécifiant une erreur (cas normalement impossible)
            	data non vide : 
            		Génération du tableau ordonné par catégorie > support > date > page
            </summary>
            <param name="data">Tableau de données</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page résultat</param>
            <param name="periodBeginning">Période de début d'affichage</param>
            <param name="periodEnd">Période de fin d'affichage</param>
            <param name="idElement">identifiant de l'élément</param>
            <param name="level">Niveau de l'élément sélectionné</param>
            <returns>Code html Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorAlertCreationsResultsUI.GetUITVExcel(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String,System.String,System.Int64,System.Int32)">
            <summary>
            Génère le code HTML nécessaire à l'export du détail des insertions TV:
            	data vide : Code HTML spécifiant une erreur (cas normalement impossible)
            	data non vide : 
            		Génération du tableau ordonné par catégorie > support > date > page
            </summary>
            <param name="data">Tableau de données</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page résultat</param>
            <param name="periodBeginning">Période de début d'affichage</param>
            <param name="periodEnd">Période de fin d'affichage</param>
            <param name="idElement">identifiant de l'élément</param>
            <param name="level">Niveau de l'élément sélectionné</param>
            <returns>Code html Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorAlertCreationsResultsUI.GetUIOutDoorExcel(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Web.UI.Page,System.String,System.String,System.Int64,System.Int32)">
            <summary>
            Génère le code HTML nécessaire à l'export du détail des insertions Publicité Extérieure :
            	data vide : Code HTML spécifiant une erreur (cas normalement impossible)
            	data non vide : 
            		Génération du tableau ordonné par catégorie > support > date > page
            </summary>
            <param name="data">Tableau de données</param>
            <param name="webSession">Session utilisateur</param>
            <param name="page">Page résultat</param>
            <param name="periodBeginning">Période de début d'affichage</param>
            <param name="periodEnd">Période de fin d'affichage</param>
            <param name="idElement">identifiant de l'élément</param>
            <param name="level">Niveau de l'élément sélectionné</param>
            <returns>Code html Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorAlertCreationsResultsUI.GetUIEmptyExcel(System.Int32,System.Int32)">
            <summary>
            Génère le code html sprécisant qu'il n'y a pas de données à afficher
            </summary>
            <param name="language">Langue du site</param>
            <param name="nbCol">Nombre de colonne que le tableau aurait du avoir en cas de présence de données</param>
            <returns>Code html généré</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.SectorDataAverageUI">
            <summary>
            This class claculates the HTML table for the Sector Data Average.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.SectorDataAverageUI.GetHTML(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            This method generates the HTML for the Sector Data Synthesis Tab
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.SectorDataAverageUI.GetExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Excel de Synthèse sector Data
            </summary>
            <param name="webSession">session client</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="baseTarget">cible de base</param>
            <param name="additionalTarget">cible supplementaire</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.SectorDataAverageUI.InvertStyle(System.String)">
            <summary>
            inverts the style for alternating rows
            </summary>
            <param name="style">the style string to be inverted</param>
            <returns>the inverted style</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.SectorDataAverageUI.GetHtmlColumn(System.String,System.String,System.String,System.Collections.Hashtable)">
            <summary>
            renvoie la valeur d'une colonne sous forme HTML
            </summary>
            <param name="columnLabel">le libellé de la colonne</param>
            <param name="format">le format d'affichage</param>
            <param name="styleValue">le style à appliquer</param>
            <param name="synthesisData">Hashtable qui coontient les données</param>
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.TvSponsorshipRules">
            <summary>
            Classe des règles métiers du Parrainage télé
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TvSponsorshipRules.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Obtient le tableau contenant l'ensemble des résultats du parrainage télé
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningPeriod">Date de début</param>
            <param name="endPeriod">Date de fin</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TvSponsorshipRules.GetPreformatedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Hashtable,System.Int64,System.Int64@,System.String,System.String)">
            <summary>
            Obtient le tableau de résultat préformaté pour le parrainage télé
            </summary>
            <param name="webSession">Session du client</param>	
            <param name="dimensionColIndex">Liste des index des dimensions en colonnes du tableau</param>
            <param name="nbCol">Nombre de colonnes du tableau de résultat</param>
            <param name="nbLineInNewTable">(out) Nombre de ligne du tableau de résultat</param>
            <param name="periodBeginning">Date de début</param>
            <param name="periodEnd">Date de fin</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TvSponsorshipRules.GetResultTable(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int64,System.Collections.Hashtable,System.String)">
            <summary>
            Formattage d'un tableau de résultat à partir d'un tableau de données
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tabData">Table de données</param>
            <param name="nbLineInTabData">Nombre de ligne dans le tableau</param>
            <param name="dimensionColIndex">Column Index of dimension</param>
            <param name="dimensionListForLabelSearch">Dimension List for Label Searching</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TvSponsorshipRules.GetNbLineFromPreformatedTableToResultTable(System.Object[0:,0:])">
            <summary>
            Obtient le nombre de ligne du tableau de résultat à partir d'un tableau préformaté
            </summary>
            <param name="tabData">Tableau préformaté</param>
            <returns>Nombre de ligne du tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TvSponsorshipRules.InitIndexAndValues(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Hashtable,System.Int64@,System.String,System.String,System.Int32@,System.String@)">
            <summary>
            Initialisation des tableaux d'indexes et valeurs sur les groupes de séléection et médias
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningPeriod">Date de début</param>
            <param name="nbCol">Nombre de colonnes du tableau</param>
            <param name="endPeriod">Date de fin</param>
            <param name="maxIndex">Index max des colonnex du tableaux</param>
            <param name="dimensionColIndex">(out Tableau d'indexes des dimensions en colonne</param>
            <param name="dimensionListForLabelSearch">Liste des libellés de colonnes</param>	
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TvSponsorshipRules.InitUnitsTableIndex(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Hashtable,System.Int64@,System.Int32@,System.String@)">
            <summary>
            Construit le tableau des index des unités
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dimensionColIndex">Tableau des index</param>		
            <param name="maxIndex">Index max des colonnex du tableaux</param>
            <param name="nbCol">Nombre de colonnes</param>
            <param name="unitsListForLabelSearch">  units list for Label search</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TvSponsorshipRules.InitDatesTableIndex(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Hashtable,System.Int64@,System.String,System.String,System.Int32@,System.String@)">
            <summary>
            Construit le tableau des index des dates
            </summary>
            <param name="webSession">Session du client</param>
            <param name="periodItemsIndex">Tableau des index</param>
            <param name="beginUserDate">Date de début</param>
            <param name="endUserDate">Date de fin</param>
            <param name="nbCol">Nombre de colonnes</param>
            <param name="maxIndex">Index max des colonnex du tableaux</param>
            <param name="datesListForLabelSearch">Dates list for label search</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TvSponsorshipRules.InitMediaTableIndex(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Hashtable,System.Int64@,System.String,System.String,System.Int32@,System.String@)">
            <summary>
            Initialise le tableau des index supports
            </summary>
            <param name="webSession">Session du client</param>
            <param name="mediaIndex">Tableau des index supports</param>
            <param name="nbCol">Nombre de colonnes</param>
            <param name="beginningPeriod">Date de début</param>
            <param name="endPeriod">Date de fin</param>
            <param name="maxIndex">Index max des colonnex du tableaux</param>
            <param name="mediaListForLabelSearch">List des méidas pour la recherche</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TvSponsorshipRules.SetMediaDetailLevelValues(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Object[0:,0:],System.Int64@,System.Collections.Hashtable,System.Int64)">
            <summary>
            Calcule les résultats pour les niveaux de détail média
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dt">Table de données</param>
            <param name="tabResult">Table de résultats</param>
            <param name="dimensionColIndex">Tableau d'indexes</param>
            <param name="nbCol">Nombre de colonnes</param>
            <param name="nbLineInNewTable">Nombre de lignes dans le tableau de résultats</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TvSponsorshipRules.SetTableCellValue(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Data.DataRow,System.Int64,System.Collections.Hashtable)">
            <summary>
            Insert des valeurs dans les celules du tableau de résulats
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tabResult">Tableau de résultats</param>
            <param name="currentRow">Ligne courante dans table de données (DataTable)</param>
            <param name="currentLine">Ligne courante dans tableau de résultats </param>
            <param name="dimensionColIndex"></param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TvSponsorshipRules.SetColumnsLabels(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.WebResultUI.Headers,System.Collections.Hashtable,System.String)">
            <summary>
            Définit les libéllés des entêtes de colonnes
            </summary>
            <param name="webSession">Session du client</param>
            <param name="headers">entêtes</param>
            <param name="dimensionColIndex">Tableau des indexes des dimensions en colonnes</param>
            <param name="dimensionListForLabelSearch">Identifiants des éléments  en colonnes pour la rechercher de libellés</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.MediaPlanAnalysisRules">
            <summary>
            Class métier de traitement des données issues de la base pour une analyse plan media.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanAnalysisRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Fonction qui formate un DataSet en un tableau qui servira à faire un Calendrier d'actions
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Tableau Formaté</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.PeriodicityPlanRules">
            <summary>
            Description résumée de PeriodicityPlanRules.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.PeriodicityPlanRules.PeriodicityPlan(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64)">
             <summary>
             Périodicité Plan APPM
             </summary>
             <param name="webSession">session client</param>
             <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="idWave">Identifiant de la vague</param>
             <param name="dateBegin">date de début</param>
             <param name="dateEnd">date de fin</param>	
             <param name="idBaseTarget">Identifiant de la cible de base</param>
             <param name="idAdditionalTarget">Identifiant de la cible sélectionnée</param>
             <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.PeriodicityPlanRules.GetPeriodicityResultTable(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64)">
             <summary>
             Périodicité Plan
             </summary>
             <param name="webSession">session client</param>
             <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="idWave">Identifiant de la vague</param>
             <param name="dateBegin">date de début</param>
             <param name="dateEnd">date de fin</param>	
             <param name="idBaseTarget">Identifiant de la cible de base</param>
             <param name="idAdditionalTarget">Identifiant de la cible sélectionnée</param>
             <returns>ResultTable</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.CheckedText">
            <summary>
            Classe de tests sur des textes
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.CheckedText.CheckedProductText(System.String)">
            <summary>
            Vérifie la cohérence du texte :
            Texte accepté : texte contenant seulement des chiffres, les lettres de l'alphabet
            où @
            </summary>
            <param name="text">Texte Source</param>
            <returns>True si le texte suit la syntaxe, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.CheckedText.NewText(System.String)">
            <summary>
            Remplace les caractères suivants :
            '," par un espace
            ç par c, é è ê par e, à â par a, ô par o et ù par u
            </summary>
            <param name="text">Texte Source</param>
            <returns>Chaîne traitée</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.CheckedText.CheckedAccentText(System.String)">
            <summary>
            Remplace le caractère suivant nécessaire au bon fonctionnement de la requête :
            ' par ''
            </summary>
            <param name="text">Texte Source</param>
            <returns>Chaîne traitée</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.CheckedText.IsStringEmpty(System.String)">
             <summary>
            Verifie si une chaine de caractere est non vide ou non null		
             </summary>
             <param name="InString">Texte Source</param>
             <returns>True si la chaîne est non vide ou non null, false sinon</returns>		
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.CheckedText.CheckedMailText(System.String)">
            <summary>
            Verifie si une adresse mail est correcte ou pas
            </summary>
            <param name="mail">l'adresse mail</param>
            <returns>True si l'adresse mail est correcte, false sinon</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.CalculationType">
            <summary>
            Identifie le type de calcul total à éffectuer :
            univers ou famille ou marché
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.CalculationType.IsMarketTotalCriterion(TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion)">
            <summary>
            Vérifie que c'est un calcul sur le total marché
            </summary>
            <param name="criterion">critère calcul</param>
            <returns>vrai si calcul concerne le total marché</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.CalculationType.IsSectorTotalCriterion(TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion)">
            <summary>
            Vérifie que c'est un calcul sur le total famille
            </summary>
            <param name="criterion">critère calcul</param>
            <returns>vrai si calcul concerne le total famille</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.CalculationType.IsUniverseTotalCriterion(TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion)">
            <summary>
            Vérifie que c'est un calcul sur le total univers
            </summary>
            <param name="criterion">critère calcul</param>
            <returns>vrai si calcul concerne le total univers</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.WebPageException">
            <summary>
            Classe gérant les exceptions de la classe de base d'un exception
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.WebPageException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.WebPageException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.WebPageException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SectorDataAverageRulesException">
            <summary>
            Rules : sector data average
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataAverageRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataAverageRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataAverageRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SeasonalityPlanChartUIException">
            <summary>
            Description résumée de SeasonalityPlanChartUIException.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SeasonalityPlanChartUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SeasonalityPlanChartUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SeasonalityPlanChartUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PortofolioDataAccessException">
            <summary>
            Erreur lors de la sélection des dates dans le portefeuille
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.FunctionsException">
            <summary>
            Exceptions Fonctions
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FunctionsException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FunctionsException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FunctionsException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.ExtendedHashTableException">
            <summary>
            Gestion des exceptions de la hashtable de gestion d'index de tableaux pour la génération des tableaux dynamiques
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ExtendedHashTableException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ExtendedHashTableException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ExtendedHashTableException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.DynamicTablesDataAccessException">
            <summary>
            ASDynamicTablesDataAccessException thrown whenever an error occured while accessing data for sector analysis module
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicTablesDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicTablesDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicTablesDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CompetitorUIException">
            <summary>
            Classe d'exception de la génération de l'affichage pour un module concurrentiel
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Msessage d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanChartUIException">
            <summary>
            AnalyseFamilyInterestPlanChartUIException thrown whenever an error occured while generating graphic UI : APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanChartUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanChartUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanChartUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.AffinitiesDataAccessExeption">
            <summary>
            AffinitiesDataAccessExeption thrown when database access error : APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AffinitiesDataAccessExeption.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AffinitiesDataAccessExeption.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AffinitiesDataAccessExeption.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.VersionDataAccess">
            <summary>
            VersionDataAccess provides access to the versions
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.VersionDataAccess.GetVersions(System.Collections.ICollection,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Get a sample of visual for each version of a list of version
            </summary>
            <param name="versions">List of verions</param>
            <param name="webSession">Customer Session (for datasource)</param>
            <param name="vehicle">vehicle</param>
            <returns>DataSet containing records as (id,visual,idmedia,datenum)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.VersionDataAccess.GetPressVersionsDetails(System.Collections.ICollection,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Get a sample of visual for each version of a list of version
            </summary>
            <param name="versions">List of verions</param>
            <param name="webSession">Customer Session (for datasource)</param>
            <param name="vehicle">vehicle</param>
            <returns>DataSet containing records as (id,visual,idmedia,datenum)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.VersionDataAccess.GetAPPMVersions(System.Collections.ICollection,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Get a sample of visual for each version of a list of version
            </summary>
            <param name="versions">List of verions</param>
            <param name="webSession">Customer Session (for datasource)</param>
            <returns>DataSet containing records as (id,visual,idmedia,datenum)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.VersionDataAccess.GetVersion(System.String,System.String,TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Obtient le détail produit d'une  version
            </summary>
            <param name="idVersion">Idenbtifiant de la version</param>
            <param name="siteLanguage">Langue du site</param>
            <param name="dataSource">Source de données</param>
            <returns>Libellés version,produit,groupe,annonceur</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.VersionDataAccess.GetVersions(System.Collections.ICollection,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String)">
            <summary>
            Get a sample of creations for each version of a list of version for tv or radio
            </summary>
            <param name="versions">List of verions</param>
            <param name="webSession">Customer Session (for datasource)</param>
            <param name="dbSchema">Database schema</param>
            <param name="dbTbl">Database table</param>
            <param name="creationFileFieldName">file creation database field name</param>
            <returns>DataSet containing records as (id,visual,idmedia,datenum)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.VersionDataAccess.GetPressVersions(System.Collections.ICollection,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Get a sample of visual for each version of a list of version
            </summary>
            <param name="versions">List of verions</param>
            <param name="webSession">Customer Session (for datasource)</param>
            <param name="dbSchema">Database schema</param>
            <param name="dbTbl">Database table</param>
            <returns>DataSet containing records as (id,visual,idmedia,datenum)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.VersionDataAccess.GetPressVersionsDetails(System.Collections.ICollection,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String)">
            <summary>
            Get a detail of visual for each version of a list of version
            </summary>
            <param name="versions">List of verions</param>
            <param name="webSession">Customer Session (for datasource)</param>
            <param name="dbSchema">Database schema</param>
            <param name="dbTbl">Database table</param>
            <param name="tablePrefixe">Table Data Press prefixe</param>
            <returns>DataSet containing records as (id,visual,idmedia,datenum)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.VersionDataAccess.GetAPPMVersions(System.Collections.ICollection,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String)">
            <summary>
            Get a sample of visual for each version of a list of version
            </summary>
            <param name="versions">List of verions</param>
            <param name="webSession">Customer Session (for datasource)</param>
            <param name="dbSchema">Database schema</param>
            <param name="dbTbl">Database table</param>
            <param name="tablePrefixe">Table APPM prefixe</param>
            <returns>DataSet containing records as (id,visual,idmedia,datenum)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.VersionDataAccess.GetOutdoorVersionsDetails(System.Collections.ICollection,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String)">
            <summary>
            Get a detail of visual for each version of a list of version
            </summary>
            <param name="versions">List of verions</param>
            <param name="webSession">Customer Session (for datasource)</param>
            <param name="dbSchema">Database schema</param>
            <param name="dbTbl">Database table</param>
            <param name="tablePrefixe">Table Data Press prefixe</param>
            <returns>DataSet containing records as (id,visual,idmedia,datenum)</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.DynamicDataAccess">
            <summary>
            Extraction des données pour les modules dynamique
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String,System.String,System.String,System.String)">
            <summary>
            Charge les données pour créer un résultat dynamique d'UN vehicle.
            </summary>
            <remarks>
            Cette Méthode ne traite que les analyses
            </remarks>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <param name="beginingDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <param name="beginingDateN1">Date de début comparative</param>
            <param name="endDateN1">Date de fin comparative</param>
            <returns>Données de l'analyse dynamique</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicDataAccess.GetSynthesisData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String,System.String,System.String,System.String)">
            <summary>
            Charge les données pour créer un résultat de synthèse d'analyse
            </summary>
            <remarks>
            Cette Méthode ne traite que les analyses
            </remarks>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <param name="beginingDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <param name="beginingDateN1">Date de début comparative</param>
            <param name="endDateN1">Date de fin comparative</param>
            <returns>Données de l'analyse dynamique</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicDataAccess.GetSynthesisRequest(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Constantes.DB.TableType.Type)">
            <summary>
            Construction de la requête pour le chargement des données pour créer un résultat de synthèse d'analyse
            </summary>
            <remarks>
            Cette Méthode ne traite que les analyses
            </remarks>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <param name="type">Type de la table à utiliser</param>
            <returns>Code SQL</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicDataAccess.GetGenericSynthesisData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Charge les données pour créer un résultat de synthèse d'analyse
            </summary>
            <remarks>
            Cette Méthode ne traite que les analyses
            </remarks>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <returns>Données de l'analyse dynamique</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicDataAccess.GetRequest(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Constantes.DB.TableType.Type)">
            <summary>
            Construit la requête pour charger les données pour créer un résultat dynamique d'UN vehicle.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <param name="type">Type de la table à utiliser</param>
            <returns>Données de l'analyse dynamique</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicDataAccess.GetGenericData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Charge les données pour créer une analyse dynamique d'un vehicle
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <returns>Données de l'analyse dynamique</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicDataAccess.GetMediaColumnDetailLevelList(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Charge les données pour recuperer une liste des supports pour le niveau de détail colonne
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Liste des supports</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicDataAccess.GetDayPeriod(System.String,TNS.AdExpress.Web.Core.CustomerPeriod)">
            <summary>
            Renvoie le code SQL correspondant à la période de l'étude
            </summary>
            <returns>Le code SQL</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DynamicDataAccess.GetMonthPeriod(System.String,TNS.AdExpress.Web.Core.CustomerPeriod)">
            <summary>
            Renvoie le code SQL correspondant à la période de l'étude
            </summary>
            <returns>Le code SQL</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.ExtendedHashTable">
            <summary>
            RecursiveHashTable permet d'imbriquer plusieurs niveaux de HashTable
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExtendedHashTable._currentValue">
            <summary>
            Valeur du niveau courant
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExtendedHashTable.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExtendedHashTable.#ctor(System.Double)">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExtendedHashTable.Add(System.Double,System.String)">
            <summary>
            Permet d'ajouter une node au niveau 0 avec la clé Key
            </summary>
            <param name="Value">Valeur</param>
            <param name="Key">Clé</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExtendedHashTable.Add(System.Double,System.String,System.String)">
            <summary>
            Permet d'ajouter une node au niveau 1, sous la clé ParentKey avec la clé childKey
            </summary>
            <param name="Value">Valeur</param>
            <param name="ParentKey">Clé Parente</param>
            <param name="ChildKey">Clé</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExtendedHashTable.Add(System.Double,System.String[])">
            <summary>
            Permet d'ajouter une node de valeur Value au niveau Keys.Length, sous les clés Keys[]
            </summary>
            <param name="Value">Valeur</param>
            <param name="Keys">Tableau des clés</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExtendedHashTable.GetValue(System.String)">
             <summary>
             Permet d'obtenir la valeur d'une node Key
             </summary>
            <param name="Key">Clé</param>
             <returns>Valeur</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExtendedHashTable.GetValue(System.String,System.String)">
             <summary>
             Permet d'obtenir la valeur de la node enfants childKey dans la node ParentKey
             </summary>
            <param name="ParentKey">Clé parente</param>
            <param name="ChildKey">Clé fille</param>
             <returns>Valeur</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExtendedHashTable.GetValue(System.String[])">
             <summary>
             Permet d'obtenir la valeur d'un node situé au bout du chemn composé par les clés Keys
             </summary>
            <param name="Keys">Liste des clés</param>
             <returns></returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExtendedHashTable.Value">
            <summary>
            Obtient ou définit Valeur du niveau courant
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack">
            <summary>
             CreativeItem provides information for the display of a adnettrack creative
             </summary>
              <author>G Ragneau</author>
              <since>09/08/2007</since>
              <stereotype>entity</stereotype>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.VIRTUAL_DIRECTORY">
            <summary>
            Chemin du dossier des bannières
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.SAVE_LINK_LABEL_ID">
            <summary>
            Save link webtextId
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.SAVE_LINK_LABEL_HELP_ID">
            <summary>
            Save link Help webtext id
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.JPEG_ID">
            <summary>
            Jpeg id
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.GIF_ID">
            <summary>
            Gif id
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.FLASH_ID">
            <summary>
            Flash id
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.JPEG_TEXT">
            <summary>
            Jpeg text
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.GIF_TEXT">
            <summary>
            Gif text
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.FLASH_TEXT">
            <summary>
            Flash text
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.MEDIA_SCHEDULE_PATH">
            <summary>
            Chemin de la page des plans médias AdNetTrack
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack._url">
            <summary>
            Banner Url
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack._format">
            <summary>
            Baner format
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack._dimension">
            <summary>
            Baner Dimension
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack._productId">
            <summary>
            AdNetTrack Media plan paramteter : Product Id
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack._zoomDate">
            <summary>
            AdNetTrack Media plan paramteter : Zoom Date
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack._advertiserId">
            <summary>
            AdNetTrack Media plan paramteter : Advertiser Id
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack._urlParameters">
            <summary>
            AdNetTrack Media plan paramteter : Url Parameters
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack._universId">
            <summary>
            Creatives parameter : Univers Id
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack._moduleId">
            <summary>
            Creatives parameter : Module Id
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack._parameters">
            <summary>
            AdNetTrack Media plan parameter : paramètres quelconques
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.#ctor(System.Int64)">
            <summary>Constructor</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.GetInstance(System.Data.DataRow,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Build instance of CreativeRadio using data containded in row
            </summary>
            <param name="row">Data container</param>
            <param name="session">Web Session</param>
            <returns>New CreativeItem Instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.FieldInstance(System.Data.DataRow,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Fill instance with data
            </summary>
            <param name="row">Data Container</param>
            <param name="item">item to fill</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.Render(System.Text.StringBuilder)">
            <summary>
            render creative
            </summary>
            <param name="output">Output</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.RenderBanner(System.Text.StringBuilder)">
            <summary>
            Render Banner Creative Zone
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.RenderInfo(System.Text.StringBuilder)">
            <summary>
            Render banner information
            </summary>
            <param name="output"></param>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.Url">
            <summary>
            Get / Set Banner Url
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.Format">
            <summary>
            Get / Set Banner Format
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.Dimension">
            <summary>
            Get / Set Banner Dimension
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.ProductId">
            <summary>
            AdNetTrack Media plan paramteter : Product Id
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.ZoomDate">
            <summary>
            AdNetTrack Media plan paramteter : Zoom Date
            </summary>    
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.AdvertiserId">
            <summary>
            AdNetTrack Media plan paramteter : Advertiser Id
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.UrlParameters">
            <summary>
            AdNetTrack Media plan paramteter : Url Parameters
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.UniversId">
            <summary>
            Creatives parameter : Univers Id
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.ModuleId">
            <summary>
            Creatives parameter : module Id
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeAdNetTrack.Parameters">
            <summary>
            AdNetTrack Media plan paramteter : Url Parameters Unknown
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.AdNetTrackFormatComparer">
            <summary>
             Creative AdNetTrack Format Comparer
             </summary>
             <author>Guillaume.Ragneau</author>
             <since>lundi 10 septembre 2007 11:24:28</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.AdNetTrackFormatComparer.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">AdNetTrack Format Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.AdNetTrackFormatComparer.#ctor(System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">AdNetTrack Format Comparer Caption ID</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.AdNetTrackFormatComparer.Compare(TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Compare two CreativeItem AdNetTrack Formats
            </summary>
            <param name="x">First creative item to compare</param>
            <param name="y">Second creative item to compare</param>
            <returns>-1 if x > y, 0 if equelas and 1 if y > x</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.AdvertiserComparer">
            <summary>
             Creative Advertiser Comparer
             </summary>
             <author>Guillaume.Ragneau</author>
             <since>lundi 13 août 2007 11:24:28</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.AdvertiserComparer.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Advertiser Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.AdvertiserComparer.#ctor(System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Advertiser Comparer Caption ID</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.AdvertiserComparer.Compare(TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Compare two CreativeItem Advertisers
            </summary>
            <param name="x">First creative item to compare</param>
            <param name="y">Second creative item to compare</param>
            <returns>-1 if x > y, 0 if equelas and 1 if y > x</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.GroupComparer">
            <summary>
             Creative Group Comparer
             </summary>
             <author>Guillaume.Ragneau</author>
             <since>lundi 13 août 2007 11:24:28</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.GroupComparer.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Group Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.GroupComparer.#ctor(System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Group Comparer Caption Id</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.GroupComparer.Compare(TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Compare two CreativeItem groups
            </summary>
            <param name="x">First creative item to compare</param>
            <param name="y">Second creative item to compare</param>
            <returns>-1 if x > y, 0 if equelas and 1 if y > x</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.ProductComparer">
            <summary>
             Creative Product Comparer
             </summary>
             <author>Guillaume.Ragneau</author>
             <since>lundi 13 août 2007 11:24:28</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.ProductComparer.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Product Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.ProductComparer.#ctor(System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="captionId">Product Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.ProductComparer.Compare(TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Compare two CreativeItem products
            </summary>
            <param name="x">First creative item to compare</param>
            <param name="y">Second creative item to compare</param>
            <returns>-1 if x > y, 0 if equelas and 1 if y > x</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.VersionComparer">
            <summary>
             Creative Version Comparer
             </summary>
             <author>Guillaume.Ragneau</author>
             <since>lundi 13 août 2007 11:24:28</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.VersionComparer.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Version Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.VersionComparer.#ctor(System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="captionId">Version Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.VersionComparer.Compare(TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Compare two CreativeItem versions
            </summary>
            <param name="x">First creative item to compare</param>
            <param name="y">Second creative item to compare</param>
            <returns>-1 if x > y, 0 if equelas and 1 if y > x</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.BudgetComparer">
            <summary>
             Creative Budget Comparer
             </summary>
             <author>Guillaume.Ragneau</author>
             <since>lundi 20 septembre 2007 11:24:28</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.BudgetComparer.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Budget Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.BudgetComparer.#ctor(System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="captionId">Budget Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.BudgetComparer.Compare(TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Compare two CreativeItem Budgets
            </summary>
            <param name="x">First creative item to compare</param>
            <param name="y">Second creative item to compare</param>
            <returns>-1 if x > y, 0 if equelas and 1 if y > x</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.MediaNbComparer">
            <summary>
             Creative Active Media Nb Comparer
             </summary>
             <author>Guillaume.Ragneau</author>
             <since>lundi 13 août 2007 11:24:28</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.MediaNbComparer.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Active Media Nb Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.MediaNbComparer.#ctor(System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="captionId">Active Media Nb Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.MediaNbComparer.Compare(TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Compare two CreativeItem Active Media Nb
            </summary>
            <param name="x">First creative item to compare</param>
            <param name="y">Second creative item to compare</param>
            <returns>-1 if x > y, 0 if equelas and 1 if y > x</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.InsertNbComparer">
            <summary>
             Creative Insert Nb Comparer
             </summary>
             <author>Guillaume.Ragneau</author>
             <since>lundi 20 septembre 2007 11:24:28</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.InsertNbComparer.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Insert Nb Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.InsertNbComparer.#ctor(System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="captionId">Insert Nb Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.InsertNbComparer.Compare(TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Compare two CreativeItem Insert Nbs
            </summary>
            <param name="x">First creative item to compare</param>
            <param name="y">Second creative item to compare</param>
            <returns>-1 if x > y, 0 if equelas and 1 if y > x</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Selections.Products.SectorsSelectedBusinessFacade">
            <summary>
            This class is used to generate HTML and EXCEL strings which are used in the DetailSelection.aspx page to show the
            sectors which are being selected. Class SectorsSelectedDataAccess.cs is used to get the dataset.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Selections.Products.SectorsSelectedBusinessFacade.GetSectorsSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau des familles selectionnés
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Code HTML du famille qui sont selectionées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Selections.Products.SectorsSelectedBusinessFacade.GetSectorsSelected(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Accès à la construction du tableau des familles selectionnés
            </summary>
            <param name="webSession">Session du client</param>
            <param name="withTitle">Boolean pour indiquer l'ajout ou non du titre</param>
            <returns>Code HTML du famille qui sont selectionées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Selections.Products.SectorsSelectedBusinessFacade.GetExcelSectorsSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau des familles selectionées
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Code HTML du tableau des familles selectionnées</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Results.MarketShareSystem">
            <summary>
            Construction d'un résultat analyse ou alerte de potentiels
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.MarketShareSystem.GetResultTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau de l'analyse dynamique
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Code HTML du tableau de l'analyse dynamique</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.MarketShareSystem.GetExcel(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau de l'analyse dynamique
            </summary>
            <param name="page">Page</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML du tableau de l'analyse dynamique</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.MarketShareSystem.GetRawExcel(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau de l'analyse dynamique
            </summary>
            <param name="page">Page</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML du tableau de l'analyse dynamique</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.DashBoardUI">
            <summary>
            Description résumée de DashBoardUI.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DashBoardUI.GetHtml(TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
             Génère l'export Excel pour Tableau de Bord
             </summary>
            <param name="webSession">Session du client</param>
             <returns>tableau formatté pour affichage sous excel</returns>			
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DashBoardUI.GetExcel(TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
             Génère l'export Excel pour Tableau de Bord
             </summary>
            <param name="webSession">Session du client</param>
             <returns>tableau formatté pour affichage sous excel</returns>			
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DashBoardUI.GetExcelBis(TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
             Lance l'affichage correspondant au tableau demandé
             </summary>
            <param name="webSession">Session du client</param>
             <returns>UI du tableau</returns>	
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DashBoardUI.GetHtmlSource(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
             <summary>
             Lance l'affichage correspondant au tableau demandé
             </summary>
            <param name="webSession">Session du client</param>
            <param name="excel">Excel</param>
             <returns>UI du tableau</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DashBoardUI.CurrentPeriode(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.Int32,System.String)">
             <summary>
             Méthode qui affiche la ligne de tableau periode de l'année courante 
             </summary>
             <param name="webSession">Session de l'utilisateur</param>
            <param name="tab">Tableau d'objet</param>
            <param name="html">Html</param>
            <param name="i">Ligne du Tableau</param>
            <param name="classCss">ClasCss</param>
             <returns>UI du tableau</returns>	
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DashBoardUI.PrecedingPeriode(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.Int32,System.String)">
             <summary>
             Méthode qui affiche la lignes de tableau période de l'année dernière
             </summary>
            <param name="tab">Tableau d'objet</param>
            <param name="webSession">Websession</param>
            <param name="html">Html</param>
            <param name="i">Ligne du Tableau</param>
            <param name="classCss">ClasCss</param>
             <returns>UI du tableau</returns>		
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DashBoardUI.EvolutionPeriode(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.Int32,System.String,System.Boolean)">
             <summary>
             Méthode d'affichage de la ligne de tableau évolution
            </summary>
            <param name="tab">Tableau d'objet</param>
            <param name="webSession">webSession</param>
            <param name="html">Html</param>
            <param name="i">Ligne du Tableau</param>
            <param name="classCss">ClasCss</param>
            <param name="excel">Excel</param>
             <returns>UI du tableau</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DashBoardUI.PDM(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.Int32,System.String)">
             <summary>
             Méthode d'affichage de la ligne de tableau PDM
             </summary>
            <param name="tab">Tableau d'objet</param>
            <param name="webSession">webSession</param>
            <param name="html">Html</param>
            <param name="i">Ligne du Tableau</param>
            <param name="classCss">ClasCss</param>
             <returns>UI du tableau</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DashBoardUI.PDV(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.Int32,System.String)">
             <summary>
             Méthode d'affichage de la ligne de tableau PDV
             </summary>
            <param name="tab">Tableau d'objet</param>
            <param name="webSession">webSession</param>
            <param name="html">Html</param>
            <param name="i">Ligne du Tableau</param>
            <param name="classCss">ClasCss</param>
             <returns>UI du tableau</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DashBoardUI.UnvalidFrequencyDelivery(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Fréquence de livraison des données invalide
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Code HTML</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.CompetitorMediaPlanAnalysisRules">
            <summary>
            Class métier de traitement des données issues de la base pour une analyse plan media concurentiel.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorMediaPlanAnalysisRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Fonction qui formate un DataSet en un tableau qui servira à faire un Calendrier d'actions
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Tableau Formaté</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.AlertsInsertionsCreationsRules">
            <summary>
            Description résumée de AlertsInsertionsCreationsRules.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.AlertsInsertionsCreationsRules.GetData(System.Int64,TNS.FrameWork.DB.Common.IDataSource,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Obtient les données du détail des insertions
            </summary>
            <param name="dataSource">Source de données</param>
            <param name="idVehicle">ID vehicle</param>
            <param name="idMedia">Identifiant du support</param>
            <param name="idProduct">Identifiant du produit</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <param name="siteLanguage">Langue du site</param>
            <returns>Liste du détail des insertions</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.AlertsInsertionsCreationsRules.GetDataPress(System.Data.DataSet)">
            <summary>
            Génère un tableau de données d'insertions presses préformaté utilisables pour la couche UI:
            	["date","page","groupz","annonceur","produit","format","surface","couleur","prix","média","catégorie","support","visuel1,visuel2,..."]
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>		
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.AlertsInsertionsCreationsRules.GetDataTV(System.Data.DataSet)">
            <summary>
            Génère un tableau de données d'insertions TV préformaté utilisable pour la couche UI:
            	["date","groupe","annonceur","produit","top diffusion","durée","rang","durée de l'écran","nb de spot de l'écran","prix","média","catégorie","support","fichier spot tv","Code écran"] (ordre non représentatif)
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>		
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.AlertsInsertionsCreationsRules.GetDataRadio(System.Data.DataSet)">
            <summary>
            Génère un tableau de données d'insertions radio préformaté utilisable pour la couche UI:
            	["date",groupe","annonceur","produit","top diffusion","durée","rang","durée de l'écran","rang HAP","durée écran HAP","nb spots HAP","nb de spot de l'écran","prix","média","catégorie","support","fichier spot radio"] (ordre non représentatif)
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>	
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.AlertsInsertionsCreationsRules.GetDataOutDoor(System.Data.DataSet)">
            <summary>
            Génère un tableau de données d'insertions Publicité extérieure préformaté utilisable pour la couche UI:
            	["date","groupe","annonceur","produit","nombre de panneaux","format","type de réseau","réseau afficheur","prix","média","catégorie","support","fichier affiche publicitaire"] (ordre non représentatif)
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.WaveRulesException">
            <summary>
            Classe de gestion des exceptions lors de le sélection automatique d'une vague.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.WaveRulesException.#ctor">
            <summary>
            constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.WaveRulesException.#ctor(System.String)">
            <summary>
            constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.WaveRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.VersionDataAccessException">
            <summary>
            VersionDataAccessException thrown whenever an error occured in VersionDataAccess
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VersionDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VersionDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VersionDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.ProductListDataAccessException">
            <summary>
            ProductListDataAccessException thrown when database access error occurs while chargin dropdown list for synthesis : APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProductListDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProductListDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProductListDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PortofolioAnalysisDataAccessException">
            <summary>
            Erreur dans le DataAccess de l'analyse portefeuille 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioAnalysisDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioAnalysisDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioAnalysisDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.GroupDataAccessException">
            <summary>
            GroupDataAccessException thrown whenever an error occured while accessing to data for groups management
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.GroupDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.GroupDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.GroupDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CompetitorAlertDataAccessException">
            <summary>
            Classe d'exception de la génération des données pour l'alert concurrentielle
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorAlertDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorAlertDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorAlertDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanUIException">
            <summary>
            AnalyseFamilyInterestPlanUIException thrown whenever an error occured while generating user interface for interest plan : APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.AlertsInsertionsCreationsRulesException">
            <summary>
            Classe d'exception de la génération des données pour l'alete mail des créations
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AlertsInsertionsCreationsRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AlertsInsertionsCreationsRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AlertsInsertionsCreationsRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Products.SearchWordDataAccess">
            <summary>
            Description résumée de SearchWordDataAccess.
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Products.GroupDataAccess">
            <summary>
            Request managing groups
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.GroupDataAccess.ListFromSelection(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Get list of groups matcing with the CurrentAdvertiserSelection in the user session
            </summary>
            <param name="webSession">User session</param>
            <param name="dataSource">Data Source</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.GroupDataAccessException">Thrown whenever an error occured while retrieving data from database</exception>
            <returns>List of groups</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess">
            <summary>
            Accès au données pour le module portefeuille d'un support
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetCategoryMediaSellerData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64)">
            <summary>
             Recupère les champs suivant : category, Régie, centre d'intérêt
            et en plus périodicité pour la presse
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant media</param>
            <returns>category, Régie, centre d'intérêt et en plus périodicité pour la presse</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetInvestment(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Récupère le total investissement, les dates de parutions
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant media</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns>Récupère le total investissement, les dates de parutions</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetInsertionNumber(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Récupère le Nombre d'insertions
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant media</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns>Récupère le total investissement, les dates de parutions</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetTypeSale(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Récupère le type_sale pour affichage
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin </param>
            <returns>DataSet</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetPage(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Récupère le nombre de pages
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin </param>
            <returns>DataSet</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.NumberProductAdvertiser(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Tableau contenant le nombre de produits, 
            le nombre de nouveau produit dans le support,
            le nombre de nouveau produit dans la pige,
            le nombre d'annonceurs		
            </summary>
            <remarks>N'utilise pas IDataSource car dataReader et traitement sur les lignes</remarks>
            <param name="webSession">Session du client</param>
            <param name="idVehicle">Identifiant du media (vehicle)</param>
            <param name="idMedia">Identifiant du support (media)</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <returns>Données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.NumberPageEncart(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Encart
            </summary>
            <remarks>N'utilise pas IDataSource car dataReader et traitement sur les lignes</remarks>
            <param name="webSession">Session du client</param>
            <param name="idVehicle">Identifiant du media (vehicle)</param>
            <param name="idMedia">Identifiant du support (media)</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <returns>Données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetInvestmentByMedia(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Récupère les investissements par supports
            </summary>
            <remarks>N'utilise pas IDataSource car dataReader et traitement sur les lignes</remarks>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant media</param>
            <param name="dateBegin">début de la période</param>
            <param name="dateEnd">fin de la période</param>
            <returns>Données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetEcranData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            récupère les écrans
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idVehicle">Identifiant du media</param>
            <param name="idMedia">Identifiant du support</param>
            <param name="dateBegin">Date de debut</param>
            <param name="dateEnd">Date de fin</param>
            <returns>Ecrans</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Constantes.Web.Module.Type,System.String,System.String)">
            <summary>
            Charge les données pour créer une alerte portefeuille d'un support
            </summary>
            <param name="webSession">Session du client</param>
            <param name="moduleType">Type du module</param>
            <param name="beginingDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <param name="vehicleName">Média à traiter</param>
            <returns>Données de l'alerte concurrentielle</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetPerformancesData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32)">
            <summary>
            Obtient les parutions,euros,spot et durée pour les résultas de performances
            </summary>
            <param name="webSession">session du client</param>
            <param name="dateBegin">date de début </param>
            <param name="dateEnd">date de fin</param>
            <returns>résultats pour les performancesle portefeuille d'un support</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetNewProduct(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Dataset avec les nouveaux produits
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns>Liste des nouveaux produits</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetTvOrRadioStructData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtient les données pour la Structure du média télé ou radio
            </summary>
            <param name="webSession">session du client</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="HourBegin">heure de début</param>
            <param name="HourEnd">heure de fin</param>
            <returns>groupe de données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetPressStructData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,TNS.AdExpress.Constantes.FrameWork.Results.PortofolioStructure.Ventilation)">
            <summary>
             Obtient les données pour la Structure du média presse
            </summary>
            <param name="webSession">session du client</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="ventilation">format ou couleur ou emplacements ou encarts</param>
            <returns>Groupe de données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetDataCalendar(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Constantes.Web.Module.Type,System.String,System.String)">
            <summary>
            Charge les données pour le calendrier d'action
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <param name="moduleType">Type du module</param>
            <param name="beginingDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>Données de l'alerte concurrentielle</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetSelectNewProduct(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Partie select de la requête pour la planche 
            Nouveauté
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idVehicle">Identifiant du media (vehicle)</param>
            <returns>SQL</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.getTableDataNewProduct(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Partie table pour la planche nouveauté
            </summary>
            <param name="idVehicle">Identifiant du media (vehicle)</param>
            <returns>SQL</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetSelectDataEcran(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Obtient le select pour les ecran
            </summary>
            <param name="idVehicle">Identifiant du media (vehicle)</param>
            <returns>SQL</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetFields(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Obtient les Champs
            </summary>
            <param name="idVehicle">identifiant vehicle</param>
            <returns>SQL</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetJoint(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les Jointures
            </summary>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="webSession">session client</param>
            <returns>SQL</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetTable(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Obtient les Tables 
            </summary>
            <param name="idVehicle">identidiant vehicle</param>
            <returns>Obtient le nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetTvOrRadioStructFields">
            <summary>
            Donne les champs à utiliser pour le vehicle radio ou télé
            </summary>		
            <exception>
            Lancée quand le cas du vehicle spécifié n'est pas traité
            </exception>
            <returns>Chaine contenant les champs sélectionnés</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetPressStructFields(TNS.AdExpress.Constantes.FrameWork.Results.PortofolioStructure.Ventilation)">
            <summary>
            Donne les champs à utiliser pour le vehicle presse
            </summary>
            <param name="ventilation">une ventilation par format, type de couleur,encarts</param>		
            <exception>
            Lancée quand le cas du vehicle spécifié n'est pas traité
            </exception>
            <returns>Chaine contenant les champs sélectionnés</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetPressStructGroupBy(TNS.AdExpress.Constantes.FrameWork.Results.PortofolioStructure.Ventilation)">
            <summary>
            Regroupe les champs à utiliser pour le vehicle presse
            </summary>
            <param name="ventilation">une ventilation par format, type de couleur,encarts</param>		
            <exception>
            Lancée quand le cas du vehicle spécifié n'est pas traité
            </exception>
            <returns>Chaine contenant les champs sélectionnés groupées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetHourInterval(System.Int32,System.Int32,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Obtient la tranche horaire utilisée.
            </summary>
            <param name="HourBegin">heure de début</param>
            <param name="HourEnd">heure de fin</param>
            <param name="idVehicle">identifiant du média</param>
            <returns>tranche horaire de diffusion</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetPressStructTables(System.String,TNS.AdExpress.Constantes.FrameWork.Results.PortofolioStructure.Ventilation)">
            <summary>
            Obtient les tables à utiliser pour la presse
            </summary>
            <param name="ventilation">format ou couleur ou emplacements ou encarts</param>
            <param name="tableName">nom de la table média sélectionné</param>
            <returns>tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetPressStructLanguage(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.PortofolioStructure.Ventilation)">
            <summary>
            Effectue les jointures via l'identifiant de la langue de l'utilisateur
            </summary>
            <param name="webSession">Session du client</param>
            <param name="ventilation">format ou couleur ou emplacements ou encarts</param>
            <returns>jointures langue</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetPressStructJoint(TNS.AdExpress.Constantes.FrameWork.Results.PortofolioStructure.Ventilation,System.Int32,System.Int32)">
            <summary>
            Effectue les jointures pour la presse
            </summary>
            <param name="ventilation">format ou couleur ou emplacements ou encarts</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns>champq joints</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetTableData(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Donne la table à utiliser pour le vehicle indiqué
            </summary>
            <param name="idVehicle">Identifiant du vehicle</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand le cas du vehicle spécifié n'est pas traité
            </exception>
            <returns>Chaine contenant le nom de la table correspondante</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetSelectData(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Obtient Select
            </summary>
            <param name="idVehicle">Identifiant du media (vehicle)</param>
            <returns>SQL</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.GetProductData(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Récupère la liste produit de référence
            </summary>
            <param name="webSession">Session client</param>
            <returns>la liste produit de référence</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDataAccess.getPerformancesFields(System.String)">
            <summary>
            Champs de la requête perfomance
            </summary>
            <param name="dataTablePrefixe">préfixe de la table</param>
            <returns>les champs à sélectionner</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.MediaAgencyDataAccess">
            <summary>
            Classe utilisée pour le controle du DataAccess
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaAgencyDataAccess.GetListYear(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Fournit la liste des années pour les agences médias
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Liste des années pour les agences médias</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.SectorDataSeasonalityDataAccess">
            <summary>
            Description résumée du DataAccess de Sector Data Seasonality
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SectorDataSeasonalityDataAccess.GetSeasonalityData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Calcul et retourne Dataset pour Analyse des familles d'intérêts du plan des APPM 
            </summary>
            <param name="webSession">session client</param>
            <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="idWave">Identifiant de la vague</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="idBaseTarget">Identifiant de la cible de base</param>
            <param name="idAdditionalTarget">Identifiant de la cible sélectionnée</param>
            <returns>Dataset pour les familles d'intérêts du plan des APPM </returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.GroupItem">
            <summary>
            Elément d'un groupe de sélection
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.GroupItem._id">
            <summary>
            Identifiant de l'élément
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.GroupItem._groupNumber">
            <summary>
            Numéro du group auquel il appartient
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.GroupItem.#ctor(System.Int64,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">Identifiant de l'élément</param>
            <param name="groupNumber">Numéro du group auquel il appartient</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.GroupItem.ID">
            <summary>
            Obtient l'identifiant de l'élément
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.GroupItem.GroupNumber">
            <summary>
            Obtient le groupe d'appartenance
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Results.SectorDataSystem">
            <summary>
            Construction d'un résultat pour Données de cadrage
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.SectorDataSystem.GetHtml(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau d'APPM
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Code HTML du APPM</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.SectorDataSystem.GetExcel(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Accès à la construction de Excel d'APPM
            </summary>
            <param name="page">Page</param>
            <param name="webSession">Session du client</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <returns>Code Excel du APPM</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.DynamicUI">
            <summary>
            Construit l'interface utilisateur pour l'analyse dynamique
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.DynamicUI.productLevel1">
            <summary>
            Niveau 1
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.DynamicUI.productLevel2">
            <summary>
            Niveau 2
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.DynamicUI.productLevel3">
            <summary>
            Niveau 3
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicUI.GetHtml(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code html pour l'alerte concurentielle
            </summary>
            <param name="page">Page qui appele le résultat</param>
            <param name="tab">Tableau de résultat</param>
            <param name="webSession">Session du client</param>
            <returns>Source html du tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicUI.GetSynthesisHtml(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère le code html pour la synthèse de l'analyse dynamique
            </summary>
            <param name="page">Page qui appele le résultat</param>
            <param name="tab">Tableau de résultat</param>
            <param name="webSession">Session du client</param>
            <param name="excel">Vrai si sortie au format excel</param>
            <returns>Source html du tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicUI.GetExcel(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code html pour l'alerte concurentielle
            </summary>
            <param name="tab">Tableau de résultat</param>
            <param name="webSession">Session du client</param>
            <returns>Source html du tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicUI.GetSynthesisExcel(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code excel pour la synthèse de l'analyse dynamique
            </summary>
            <param name="page">Page qui appele le résultat</param>
            <param name="tab">Tableau de résultat</param>
            <param name="webSession">Session du client</param>
            <returns>Source html du tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.DynamicUI.GetRawExcel(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code html pour l'alerte concurentielle
            </summary>
            <param name="tab">Tableau de résultat</param>
            <param name="webSession">Session du client</param>
            <returns>Source html du tableau de résultat</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.WaveListDataAccessException">
            <summary>
            Classe de gestion des exceptions lors du chargement des vagues 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.WaveListDataAccessException.#ctor">
            <summary>
            constructeur	
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.WaveListDataAccessException.#ctor(System.String)">
            <summary>
            constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.WaveListDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SectorsSelectedDataAccessException">
            <summary>
            Base de données: sélection des familles
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorsSelectedDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorsSelectedDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorsSelectedDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.RecapProductClassificationListDataAccessException">
            <summary>
             Base de données: Liste de produits pour les analyses sectorielles
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.RecapProductClassificationListDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.RecapProductClassificationListDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.RecapProductClassificationListDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.RecapAdvertiserDataAccessException">
            <summary>
             Classe d'exception de la génération des données pour les variétés 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.RecapAdvertiserDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.RecapAdvertiserDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.RecapAdvertiserDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PeriodicityPlanUIException">
            <summary>
            IHM: Périodicité
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PeriodicityPlanUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PeriodicityPlanUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PeriodicityPlanUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PDVPlanDataAccessExcpetion">
            <summary>
            Base de données: APPM PDV du plan
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PDVPlanDataAccessExcpetion.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PDVPlanDataAccessExcpetion.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PDVPlanDataAccessExcpetion.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaPlanRulesException">
            <summary>
            Metier: Classe d'exception de la génération des données pour les plans média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaInsertionsCreationsUIException">
            <summary>
            Classe d'exception de la génération des détails insertion par insertion
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaInsertionsCreationsUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaInsertionsCreationsUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaInsertionsCreationsUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            <summary>
            Classe d'exception de la génération des données pour l'analyse plan média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.InsertPlanDataAccessException">
            <summary>
            Base de données: APPM Insertion
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.InsertPlanDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.InsertPlanDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.InsertPlanDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.GadDataAccessException">
            <summary>
            Base de données: Gad
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.GadDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.GadDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.GadDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.DynamicUIException">
            <summary>
            DynamicUIException thrown whenever an error occured while generating UI for dynamic analysis module
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.DeliveryFrequencyException">
            <summary>
            DeliveryFrequencyException thrown whenever an error occured while a frequency delivery is unvalid
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DeliveryFrequencyException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DeliveryFrequencyException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DeliveryFrequencyException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CreativeRulesException">
            <summary>
            Classe d'exception de la génération des données pour la page des versions
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CreativeRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CreativeRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CreativeRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CalculationTypeException">
            <summary>
            Classe gestion exceptions pour  CalculationTypeException.cs
            qui indique le typde de calcul total sélectionné (univers, marché, famille)
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CalculationTypeException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CalculationTypeException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CalculationTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.APPMBusinessFacadeException">
            <summary>
            APPMBusinessFacadeException thrown whenever an error occured while accessing to theAppm.BusinessFacade
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMBusinessFacadeException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMBusinessFacadeException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMBusinessFacadeException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Programs.SponsorshipFormListDataAccess">
            <summary>
            Chargement de liste : genres émissions, émissions
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Programs.SponsorshipFormListDataAccess.GetSponsorshipFormListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Charge la liste des genres d'émissions qui peuvent être sélectionnés
            </summary>
            <param name="webSession">WebSession</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Products.RecapProductClassificationListDataAccess">
            <summary>
            Description résumée de RecapProductClassificationListDataAccess.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.RecapProductClassificationListDataAccess.RecapGetDataForSectorAnalysis(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Donne une liste de Famille, classe, groupe,variété en fonction des droits du client.
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Liste d'éléments de la nomenclature</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Products.RecapAdvertiserDataAccess">
            <summary>
            Class d'accès aux annonceurs dans le cadre des recap
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.RecapAdvertiserDataAccess.GetAvertiserData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Donne une liste des annonceurs accessibles par un login ormi les annonceurs présents dans une 
            liste d'exceptions.
            Les annonceurs ont tous des références dans la sélection produits de la session
            </summary>
            <param name="webSession">Session du client</param>
            <param name="advetiserException">liste d'identifiants annonceurs séparés par une virgule à ne pas rapatrier</param>
            <returns>Dataset contenant des couples (id_advertiser, advertiser)</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.ProofDataAccess">
            <summary>
            Classe pour les requêtes nécessaires au module des justificatifs
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.ProofDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Obtient la liste des insertions de l'univers sélectionné
            </summary>
            <param name="webSession"> Session client</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <returns>Tableau de données des insertions</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.ProofDataAccess.GetProofFileData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String)">
            <summary>
            Méthode pour l'execution de la requête qui récupère les données de la fiche justificative
            </summary>
            <param name="webSession">Session</param>
            <param name="idMedia">Identifiant du media</param>
            <param name="idProduct">Identifiant du produit</param>
            <param name="date">Date</param>
            <param name="page">Numéro de la page</param>
            <returns>DataSet contenant les données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.ProofDataAccess.GetDataLocation(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String)">
            <summary>
            Méthode pour l'execution de la requête qui récupère le descriptif pour la fiche justificative
            </summary>
            <param name="webSession">Session</param>
            <param name="idAdvertisement">Identifiant du paramètre</param>
            <param name="idMedia">Identifiant du media</param>
            <param name="date">Date</param>
            <returns>DataSet contenant les données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.ProofDataAccess.GetDataPages(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Récupère le nombre de page d'un magazine
            </summary>
            <param name="webSession">Session</param>
            <param name="idMedia">Identifiant du media</param>
            <param name="date">Date du media</param>
            <returns>DataSet contenant les données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.ProofDataAccess.GetSqlFields(System.Text.StringBuilder)">
            <summary>
            Obtient les champs de la requêtes
            </summary>
            <param name="sql">Chaine de caractères de la requete</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.ProofDataAccess.GetSqlTables(System.Text.StringBuilder)">
            <summary>
            Obtient les tables de la requête
            </summary>
            <param name="sql">Chaine de caractères de la requete</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.ProofDataAccess.GetSqlJoins(System.Text.StringBuilder,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les jointures de la requête
            </summary>
            <param name="sql">Chaine de caractères de la requete</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.ProofDataAccess.GetSqlGroupByFields(System.Text.StringBuilder)">
            <summary>
            Obtient les regroupement de la requête
            </summary>
            <param name="sql">Chaine de caractères de la requete</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.ProofDataAccess.GetSqlOrderByFields(System.Text.StringBuilder)">
            <summary>
            Obtient les tri de la requête
            </summary>
            <param name="sql">Chaine de caractères de la requete</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess">
            <summary>
            Extraction des données pour les tableaux de bord
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.getData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32)">
            <summary>
            Méthode qui retourne les données nécessaires à la construction d'un tableau de bord
            en considérant les critères de la session.
            Elle ajoute au fur et à mesure les différents clauses nécessaires à la requête: select, from, jointures
            sélection media et produit, droits, langage et activation, et regroupement
            <seealso cref="T:TNS.AdExpress.Web.Core.Sessions.WebSession"/>
            </summary>
            <remarks>
            Utilise les méthodes suivantes:
            	private static string getSelectClause(WebSession webSession,string year);
            	private static string getFromClause(WebSession webSession,string year);
            	private static string getJointClause(WebSession webSession);
            	private static string getSelectionClause(WebSession webSession,string year);
            	private static string getCustomerRight(WebSession webSession);
            	private static string getGroupBy(WebSession webSession);
            </remarks>		
            <exception cref="M:TNS.AdExpress.Web.Exceptions.DashBoardDataAccessException.#ctor">
            Lancée en cas d'erreur lors de l'éxécution de la requête.
            </exception>	
            <param name="webSession">Sesssion utilisateur</param>
            <param name="yearN">année courante</param>
            <param name="yearN1">année précédente</param>
            <returns>Groupe de données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetSqlQuery(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Retourne une  requête sql
            </summary>
            <param name="webSession">session client</param>
            <param name="year">année table de données</param>
            <param name="hasUnionAll">vrai si clause <code>union all</code></param>
            <returns>chaine de requete sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetTablesName(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Méthode privée qui détecte la ou les table(s) à utiliser en fonction de la sélection média, produit
            et du niveau de détail choisi
            	détection d'une étude monomédia  ==> tv,radio,presse
            	niveau de détail de la nomenclature produit ==> familles
            </summary>	
            <param name="webSession">Session utilisateur</param>
            <param name="year">année de la table</param>
            <returns>Chaîne de caractère correspondant au nom de(s) table(s) à attaquer</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetTablesNomenclatureName(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Donne le(s) nom(s) des tables de" la nomenclature produit ou média en fonction
            de la sélection de l'utilisateur
            </summary>
            <param name="webSession">session du client</param>
            <returns>Chaîne de caractère correspondant au nom de(s) table(s) à attaquer</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetMediaTablesName(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Donne les tables médias en fonction de la sélection client
            </summary>
            <param name="webSession">session du client</param>
            <returns>Chaîne de caractère correspondant au nom de(s) table(s) médias à attaquer</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetTBord_1_2_3_TableName(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Indique le nom de la table à attaquer pour le traitement des tableaux
            de bord 1,2,3
            </summary>
            <param name="webSession">session du client</param>
            <param name="year">suffixe année de la table de donnée</param>
            <returns>Chaîne de caractère correspondant au nom de(s) table(s) à attaquer</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetTBord_4_to_12_TableName(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Détermine la table à attaquer pour les tableaux de bord 4 à 12
            </summary>
            <param name="webSession">session du client</param>
            <param name="year">suffixe représentant année de la table</param>
            <returns>Chaîne de caractère correspondant au nom de(s) table(s) à attaquer</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetTBord_4_to_12_RadioTableName(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Détermine la table à attaquer pour les tableaux de bord 4 à 12
            </summary>
            <param name="webSession">session client</param>
            <param name="year">suffixe représentant année de la table</param>
            <returns>Chaîne de caractère correspondant au nom de(s) table(s) à attaquer</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetTBord_4_to_12_TvTableName(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Détermine la table à attaquer pour les tableaux de bord 4 à 12
            </summary>
            <param name="webSession">session client</param>
            <param name="year">suffixe représentant année de la table</param>
            <returns>Chaîne de caractère correspondant au nom de(s) table(s) à attaquer</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetSelectClause(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            chaine de caractère de la clause "select" 
            </summary>
            <param name="webSession">sessiion du client</param>
            <param name="year">suffixe année de la table de donnée</param>
            <returns>Chaîne de caractère correspondant aux champs de(s) table(s) à attaquer</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetSectorSelectFields(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            chaine de caractère clause "select" de famille(s)
            </summary>
            <param name="webSession">session du client</param>
            <param name="prefixe">prefixe table de données</param>
            <returns>Chaîne de caractère de familles à sélectionner</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetMediaSelectFields(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            chaine de caractère clause "select" de média
            </summary>
            <param name="webSession">session du client</param>
            <param name="prefixe">prefixe table de données</param>
            <returns>Chaîne de caractère de média à sélectionner</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetDateSelectFields(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            chaine de caractère clause "select" des dates
            </summary>
            <param name="webSession">session du client</param>
            <param name="year">suffixe année de la table de donnée</param>
            <returns>Chaîne de caractère des dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetDetailPeriodSelectClause(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            chaine de caractère clause "select" des détails de dates
            </summary>
            <param name="webSession">session du client</param>
            <returns>Chaîne de caractère des dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetUnitSelectFields(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            chaine de caractère clause "select" des unités
            </summary>
            <param name="webSession">session du client</param>
            <returns>Chaîne de caractère des unités à sélectionner</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetRepartitionField(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            chaine caractere repartition
            </summary>	
            <param name="webSession">Session du client</param>		
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetFromClause(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Clause from de la requete
            </summary>
            <param name="webSession">session du client</param>
            <param name="year">suffixe année de la table de donnée</param>
            <returns>Chaîne de caractère correspondant à la clause from de la requete</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetJointClause(TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
            Jointures avec les tables de données
             </summary>
             <param name="webSession">session du client</param>
             <returns>Chaîne de caractère correspondant aux jointures</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetMediaJointClause(TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
            Jointures avec les tables média
             </summary>
             <param name="webSession">session du client</param>
             <returns>Chaîne de caractère correspondant aux jointures</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetSectorJointClause(TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
            Jointures avec les tables de la branche produit
             </summary>
             <param name="webSession">session du client</param>
             <returns>Chaîne de caractère correspondant aux jointures</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetSelectionClause(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Clause sélection client
            </summary>
            <param name="webSession">séssion client</param>
            <param name="year">année sélectionnée</param>
            <returns>Chaîne de caractère correspondant aux familles sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetSectorSelectionClause(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Familles sélectionnées
            </summary>
            <param name="webSession">séssion client</param>	
            <returns>Chaîne de caractère correspondant aux familles sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetMediaSelectionClause(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Média sélectionnées
            </summary>
            <param name="webSession">séssion client</param>	
            <returns>Chaîne de caractère correspondant aux familles sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetDateSelectionClause(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Dates sélectionnées
            </summary>
            <param name="webSession">session du client</param>
            <param name="year">année sélectionnée</param>
            <returns>Chaîne de caractère correspondant aux dates sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetMonthOrWeekMediaNum(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Date mensuelle ou hebdomadaire sélectionnée
            </summary>
            <param name="webSession">session client</param>
            <param name="yearN1">année précédente</param>
            <returns>chaine de caractère Date sélectionnée</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.DateMediaNumSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String)">
            <summary>
            Date sélectionnée
            </summary>
            <param name="webSession">session</param>
            <param name="wsPeriodBeginningDate">date de début de session</param>
            <param name="wsPeriodEndDate">date de fin de session</param>
            <param name="year">année sélectionnée</param>
            <returns>chaine de caractère Date sélectionnée</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.IsDetailPeriod(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            verifie si une periode doit être detaillée
            </summary>
            <param name="webSession">client</param>
            <returns>vraie si la periode est sélectionnée et faux sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.IsDetailSector(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            verifie si une famille doit être detaillée
            </summary>
            <param name="webSession">client</param>
            <returns>vraie si la famille est sélectionnée et faux sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.IsInterestCenterSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Vérifie qu'un centre d'intérêt à été sélectionné
            </summary>
            <param name="webSession">session du client</param>
            <returns>vrai si un centre d'intérêt à été sélectionné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetRepartitionSelectionClause(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Répartition sélectionnées
            </summary>
            <param name="webSession">session du client</param>	
            <returns>Chaîne de caractère correspondant aux Répartition sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.Get_1_2_3_RepartitionSelectionClause(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Répartition sélectionnées pour tableau 1,2,3 et 13
            </summary>
            <param name="webSession">session du client</param>	
            <param name="vehicletype">type de média</param>
            <returns>Chaîne de caractère correspondant aux Répartition sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.Get_4_to_12_RepartitionSelectionClause(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Répartition sélectionnées pour tableau 4 à 12
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicletype">type de média</param>
            <returns>Chaîne de caractère correspondant aux Répartition sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetCustomerRight(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Droits produits et média du client pour Tableau de bord
            </summary>
            <param name="webSession">session du client</param>
            <returns>chaine  de caractère des droits client</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetGroupBy(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Regroupement des champs des résultats  par champs
            </summary>
            <param name="webSession">session du client</param>
            <returns>chaine de caractère correspondant au regroupement des données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetMediaGroupBy(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Regroupement des média sélectionnés
            </summary>
            <param name="webSession">sessiuon du client</param>
            <returns>Chaîne de caractère correspondant aux regroupement de média</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetMediaGroupBy(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Regroupement des média sélectionnés
            </summary>
            <param name="webSession">sessiuon du client</param>
            <param name="prefixe">prefixe table de données</param>
            <returns>Chaîne de caractère correspondant aux regroupement de média</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetSectorGroupBy(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Regroupement des familles sélectionnées
            </summary>
            <param name="webSession">sessiuon du client</param>
            <returns>Chaîne de caractère correspondant aux regroupement de familles</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetSectorGroupBy(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Regroupement des familles sélectionnées
            </summary>
            <param name="webSession">sessiuon du client</param>
            <param name="prefixe">prefixe table de données</param>
            <returns>Chaîne de caractère correspondant aux regroupement de familles</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetDateGroupBy(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Regroupement des dates
            </summary>
            <param name="webSession">sesion du client</param>
            <returns>chiane caractère dates à regroupés</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetRepartitionGroupBy(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Regroupement des répartitions
            </summary>
            <param name="webSession">session du client</param>	
            <returns>Chaine de caractère repartition</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetOrderClause(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            ordre des champs de la requete
            </summary>
            <param name="webSession">session du client</param>
            <param name="order">ordre</param>
            <param name="hasUnionAll">vrai si clause <code>union all</code></param>
            <returns>ordre champs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetMediaOrderFields(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.String)">
            <summary>
            chaine de caractère clause de tri des média
            </summary>
            <param name="webSession">session du client</param>
            <param name="hasUnionAll">vrai si clause <code>union all</code></param>
            <param name="prefixe">Prefixe table de données</param>
            <returns>Chaîne de caractère de média à sélectionner</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.GetSectorOrderFields(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            chaine de caractère clause Tri" de(s) famille(s)
            </summary>
            <param name="webSession">session du client</param>
            <param name="hasUnionAll">vrai si clause <code>union all</code></param>
            <returns>Chaîne de caractère de familles à sélectionner</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.IsRepartitionSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
            Indique si une répartition a été sélectionnée
             </summary>
             <param name="webSession">session</param>
             <returns>vrai si répartition sélectionné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.DashBoardDataAccess.IsCrossRepartitionType(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Vérifie si l'utilisateur à sélectionné au moins
            2 types de répatition (soit format,jour nommé,tranche horaire)
            </summary>
            <param name="webSession">session du client</param>
            <returns>vrai si au moins 2 types de répatition sélectionnés</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.SynthesisDataAccess">
            <summary>
            This class is used to generate the datasets which are used in APPM Synthesis.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SynthesisDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Int64,System.Boolean)">
            <summary>
             Calculates and returns the dataset for the APPM Synthesis	 
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Starting date</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">Base Target</param>
            <param name="additionalTarget">Additional Target</param>
            <param name="idProduct">id of the product selected from the products dropdownList 
            if ID product is 0 it indicates that no particular prodcuts was seleced from the products dropdownlist and the result is shown
            for all.
            </param>
            <param name="mediaAgencyAccess">A flag that indicates whether the client has access to Media Agency or no</param>
            <returns>dataset for synthesis of APPM</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SynthesisDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean,System.String)">
            <summary>
             Calculates and returns the dataset for the APPM Synthesis by Vezrsion	 
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Starting date</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">Base Target</param>
            <param name="additionalTarget">Additional Target</param>		
            <param name="idVersion">Version ID</param>
            <param name="mediaAgencyAccess">A flag that indicates whether the client has access to Media Agency or no</param>
            <returns>dataset for synthesis by version of APPM</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SynthesisDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean,System.Collections.ICollection)">
            <summary>
             Calculates and returns the dataset for the APPM Synthesis by a list of Versions	 
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Starting date</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">Base Target</param>
            <param name="additionalTarget">Additional Target</param>			
            <param name="versions">List of Versions ID</param>
            <param name="mediaAgencyAccess">A flag that indicates whether the client has access to Media Agency or no</param>
            <returns>dataset for synthesis by version of APPM</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SynthesisDataAccess.UniversGroupInvestment(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.String)">
            <summary>
            calculates the investment of the group for calculating PDV by Version
            </summary>
            <param name="webSession">Client Session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">start Date</param>
            <param name="dateEnd">End Date</param>
            <param name="baseTarget">Target of the base</param>
            <param name="additionalTarget">supplementary target</param>
            <param name="idGroup">id of the group for which pdv is to be calculated</param>		
            <returns>Dataset containing investment of the group or competitor univers</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SynthesisDataAccess.GetProductInvestment(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.String)">
            <summary>
            Obtient l'investissement en fonction d'un produit.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dataSource">Source de données</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <param name="baseTarget">Cible de base</param>	
            <param name="idProduct">ID produit</param>
            <returns>Investissement en euros</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SynthesisDataAccess.GetFiedlsForProduct(System.Boolean)">
            <summary>
            Obtient les champs nécessaires à l'affichage d'un produit
            </summary>
            <param name="mediaAgencyAccess">A flag that indicates whether the client has access to Media Agency or no</param>
            <returns>Champs nécessaires à l'affichage d'un produit</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SynthesisDataAccess.GetFiedls(System.Boolean,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Obtient les champs nécessaires à l'affichage d'une synthèse de version
            </summary>
            <param name="mediaAgencyAccess">A flag that indicates whether the client has access to Media Agency or no</param>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Prefixe Table </param>
            <returns>Champs nécessaires à l'affichage d'un produit</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SynthesisDataAccess.GetTablesForProduct(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Obtient les tables pour le détail du produit
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="mediaAgencyAccess">A flag that indicates whether the client has access to Media Agency or no</param>
            <returns>Les tables pour le détail du produit</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SynthesisDataAccess.GetTables(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Obtient les tables pour le détail du produit par version
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="mediaAgencyAccess">A flag that indicates whether the client has access to Media Agency or no</param>
            <returns>Les tables pour le détail du produit</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SynthesisDataAccess.GetJoinForProduct(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Obtient les joins pour le détail du produit
            </summary>
            <param name="languageId">language id</param>
            <param name="mediaAgencyAccess">A flag that indicates whether the client has access to Media Agency or no</param>
            <param name="beginByAnd">booleand to indicate whether to start by and or not</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SynthesisDataAccess.GetJoin(System.Int32,System.Boolean,System.Boolean,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Obtient les joins pour le détail du produit par version
            </summary>
            <param name="languageId">language id</param>
            <param name="mediaAgencyAccess">A flag that indicates whether the client has access to Media Agency or no</param>
            <param name="beginByAnd">booleand to indicate whether to start by and or not</param>
            <param name="webSession">Session of the client</param>
            <param name="tablePrefixe">Prefixe Table </param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SynthesisDataAccess.GetGroupByForProduct(System.Boolean)">
            <summary>
            Obtient les champs nécessaires à l'affichage d'un produit
            </summary>
            <param name="mediaAgencyAccess">A flag that indicates whether the client has access to Media Agency or no</param>
            <returns>Champs nécessaires à l'affichage d'un produit</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SynthesisDataAccess.GetGroupBy(System.Boolean,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Obtient les champs nécessaires à l'affichage d'un produit par version
            </summary>
            <param name="mediaAgencyAccess">A flag that indicates whether the client has access to Media Agency or no</param>
            <param name="tablePrefixe"> Prefixe Table</param>
            <param name="webSession">Session du client</param>
            <returns>Champs nécessaires à l'affichage d'un produit</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.SectorDataSynthesisDataAccess">
            <summary>
            This class is used to generate the datasets which are used in Sector Data Synthesis.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SectorDataSynthesisDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
             Calculates and returns the dataset for the Sector Data Synthesis	 
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="dateBegin">Starting date</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">Base Target</param>
            <param name="additionalTarget">Additional Target</param>
            <returns>dataset for synthesis of APPM</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.PeriodicityPlanDataAccess">
            <summary>
             Analyse par périodicité
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.PeriodicityPlanDataAccess.GetPeriodicityData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64,System.String)">
            <summary>
            Calcul et retourne Dataset pour les périodicités du plan des APPM 
            </summary>
            <param name="webSession">session client</param>
            <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="idWave">Identifiant de la vague</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="idBaseTarget">Identifiant de la cible de base</param>
            <param name="idAdditionalTarget">Identifiant de la cible sélectionnée</param>
            <param name="products">produit selectionnées</param>
            <returns>Dataset pour les périodicités du plan des APPM </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.PeriodicityPlanDataAccess.GetPeriodicitySelection(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            retourne la sélection des périodicité
            </summary>
            <param name="webSession">Session client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.PeriodicityPlanDataAccess.GetPeriodicityTables(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            retourne la sélection des périodicité
            </summary>
            <param name="websession">Session client</param>
            <returns>requete</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.PeriodicityPlanDataAccess.GetPeriodicityConditions(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64,System.String)">
            <summary>
             conditions de la requete
            </summary>
            <param name="webSession">session client</param>
            <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="idWave">Identifiant de la vague</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="idBaseTarget">Identifiant de la cible de base</param>
            <param name="idAdditionalTarget">Identifiant de la cible selectionnée</param>
            <param name="products">produit selectionnées</param>
            <returns>string des conditions </returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.AnalyseFamilyInterestPlanDataAccess">
            <summary>
            Analyse par famille de presse
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.AnalyseFamilyInterestPlanDataAccess.GetAnalyseFamilyInterestPlan(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64,System.String)">
            <summary>
            Calcul et retourne Dataset pour Analyse des familles d'intérêts du plan des APPM 
            </summary>
            <param name="webSession">session client</param>
            <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="idWave">Identifiant de la vague</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="idBaseTarget">Identifiant de la cible de base</param>
            <param name="idAdditionalTarget">Identifiant de la cible sélectionnée</param>
            <param name="products">produit selectionnées</param>
            <returns>Dataset pour les familles d'intérêts du plan des APPM </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.AnalyseFamilyInterestPlanDataAccess.GetInterestCenterSelection(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            retourne la sélection des familles d'intérêts
            </summary>
            <param name="webSession">Session client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.AnalyseFamilyInterestPlanDataAccess.GetInterestCenterTables(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            retourne la sélection des familles d'intérêts
            </summary>
            <param name="websession">Session client</param>
            <returns>requete</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.AnalyseFamilyInterestPlanDataAccess.GetInterestCenterConditions(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64,System.String)">
            <summary>
             conditions de la requete
            </summary>
            <param name="webSession">session client</param>
            <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="idWave">Identifiant de la vague</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="products">produit selectionnées</param>		
            <returns>string des conditions </returns>
            <param name="idAdditionalTarget">Identifiant additionel du target</param>
            <param name="idBaseTarget">Identifiant de base du target</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.AffinitiesDataAccess">
            <summary>
            This class is used to get the data for GRP and CGRP of all the 
            targets  as well as their affinities with respect to the base target.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.AffinitiesDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            This method calculates and returns the dateset containing the required values like GRP, CGRP,
            etc.
            </summary>
            <param name="dataSource">Data Source</param>
            <param name="webSession">User Session</param>
            <param name="dateBegin">Period beginning</param>
            <param name="dateEnd">Period end</param>
            <param name="idBaseTarget">Base target</param>
            <param name="idWave">Wave ID</param>
            <returns>DataSet containing data like GRP, CGRP of all the targets in a specified wave</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Results.CompetitorSystem">
            <summary>
            Construction d'un résultat analyse ou alerte concurrentielle
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.CompetitorSystem.GetHtml(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau de l'analyse dynamique
            </summary>	
            <param name="webSession">Session du client</param>
            <returns>Code HTML du tableau de l'analyse dynamique</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.CompetitorSystem.GetExcel(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau de l'analyse dynamique
            </summary>
            <param name="page">Page</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML du tableau de l'analyse dynamique</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.CompetitorSystem.GetRawExcel(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau de l'analyse dynamique
            </summary>
            <param name="page">Page</param>
            <param name="webSession">Session du client</param>
            <returns>Code HTML du tableau de l'analyse dynamique</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Global.Loading.LoadingUI">
            <summary>
            Gestion du flash d'attente
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Global.Loading.LoadingUI.GetHtmlDiv(System.Int32,System.Web.UI.Page)">
            <summary>
            Enregistre le code flash dans la page et renvoie le code html d'affichage
            </summary>
            <param name="language">Langue du flash</param>
            <param name="page">Page recevant le code</param>
            <returns>Code HTML généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Global.Loading.LoadingUI.GetHtmlCloseDiv">
            <summary>
            Construit le script de fermeture du flash d'attente
            </summary>
            <returns>Code html de la fermeture du flash</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataSynthesisRules">
            <summary>
            Provides formatting rules for Sector Data Synthesis
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataSynthesisRules.FIRST_COLUMN_INDEX">
            <summary>
            Index de la première colonne du tableau
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataSynthesisRules.SECOND_COLUMN_INDEX">
            <summary>
            Index de la deuxième colonne du tableau
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataSynthesisRules.LINES_NUMBER">
            <summary>
            Nombre de lignes dans le tableau
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataSynthesisRules.COLUMNS_NUMBER">
            <summary>
            Nombre de colonnes dans le tableau
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataSynthesisRules.GetSynthesisFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Formats the date for sector Data synthesis 
            </summary>
            <param name="webSession">clients session</param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <returns>HTML string for the synthesis table</returns>		
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.VehicleDetailDataAccessException">
            <summary>
            Exception Base de données pour les media
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VehicleDetailDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VehicleDetailDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VehicleDetailDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.ProofDataAccessException">
            <summary>
            Base de données: APPM Proof
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProofDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProofDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProofDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaPublicationDatesDataAccessException">
            <summary>
            MediaPublicationDatesDataAccessException thrown while executing the query
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPublicationDatesDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPublicationDatesDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPublicationDatesDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaPlanUIException">
            <summary>
            UI: Classe d'exception de la génération des données pour les plans média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaPlanAnalysisRulesException">
            <summary>
            Metier: Classe d'exception de la génération des données pour l'analyse plan média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanAnalysisRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanAnalysisRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanAnalysisRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.DynamicDataAccessException">
            <summary>
            DynamicDataAccessException thrown whenever an error occured while retrieving data for dynamic analysis module
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CustomerWebException">
            <summary>
            Classe gestion exceptions Avec envoie de mail lorsqu'il y a une erreur sur une page Web.
            Cette exception doit être lancé qui si l'utilisateur est authentifié.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Exceptions.CustomerWebException.webSession">
            <summary>
            Session du client
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Exceptions.CustomerWebException.page">
            <summary>
            Page Web qui lance l'erreur
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Exceptions.CustomerWebException.stackTrace">
            <summary>
            stackTrace
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Exceptions.CustomerWebException.serverName">
            <summary>
            Nom du serveur où la page s'execute
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Exceptions.CustomerWebException.url">
            <summary>
            Url demandée
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Exceptions.CustomerWebException.browser">
            <summary>
            Browser
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Exceptions.CustomerWebException.versionBrowser">
            <summary>
            Version du Browser
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Exceptions.CustomerWebException.minorVersionBrowser">
            <summary>
            Sous version du browser
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Exceptions.CustomerWebException.userAgent">
            <summary>
            UserAgent
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Exceptions.CustomerWebException.os">
            <summary>
            Système d'exploitation
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Exceptions.CustomerWebException.userHostAddress">
            <summary>
            Adresse IP du client
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Exceptions.CustomerWebException.platform">
            <summary>
            Platforme
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CustomerWebException.#ctor(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructeur de base
            </summary>
            <param name="page">Page Web qui lance l'erreur</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CustomerWebException.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructeur de base
            </summary>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CustomerWebException.#ctor(System.Web.UI.Page,System.String,System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructeur
            </summary>
            <param name="page">Page Web qui lance l'erreur</param>
            <param name="message">Message d'erreur</param>
            <param name="webSession">Session du client</param>
            <param name="stackTrace">stackTrace</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CustomerWebException.#ctor(System.String,System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="webSession">Session du client</param>
            <param name="stackTrace">stackTrace</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CustomerWebException.SendMail">
            <summary>
            Envoie un mail d'erreur
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.UnauthorizedAccessException">
            <summary>
            IHM: Portefeuille
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.UnauthorizedAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.UnauthorizedAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.UnauthorizedAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PortofolioDetailMediaException">
            <summary>
            Erreur lors du résultat du détail media du portefeuille d'un support
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioDetailMediaException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioDetailMediaException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioDetailMediaException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Products.SectorsSelectedDataAccess">
            <summary>
            This class is used to get a list of sectors with the help of groups that are being selected.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.SectorsSelectedDataAccess.getData(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Method that is being called by the SectoresSelectedBusinessFacade class to get the dataset.
            </summary>
            <param name="webSession">Session of the client</param>
            <returns>Dataset that carries the sectors that are being selected</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.SectorsSelectedDataAccess.QueryConstructor(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder,System.String,System.String)">
            <summary>
            to make the query that gets sectors using groups
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="sql">The query string which carries the query</param>
            <param name="gList">String that carries the list of groups selected</param>
            <param name="sList">String that carries the list of segments selected</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.ProofDataAccess">
            <summary>
            Classe pour les requêtes nécessaires à la fiche justificative
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.ProofDataAccess.GetData(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.Int32,System.String)">
            <summary>
            Méthode pour l'execution de la requête qui récupère les données de la fiche justificative
            </summary>
            <param name="dataSource">DataSource</param>
            <param name="webSession">Session</param>
            <param name="idMedia">Identifiant du media</param>
            <param name="idProduct">Identifiant du produit</param>
            <param name="date">Date</param>
            <param name="page">Numéro de la page</param>
            <returns>DataSet contenant les données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.ProofDataAccess.GetDataPages(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int32)">
            <summary>
            Récupère le nombre de page d'un magazine
            </summary>
            <param name="dataSource">DataSource</param>
            <param name="webSession">Session</param>
            <param name="idMedia">Identifiant du media</param>
            <param name="date">Date du media</param>
            <returns>DataSet contenant les données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.ProofDataAccess.GetDataLocation(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64)">
            <summary>
            Méthode pour l'execution de la requête qui récupère le descriptif ENCART pour la fiche justificative
            </summary>
            <param name="dataSource">DataSource</param>
            <param name="webSession">Session</param>
            <param name="idInset">Identifiant du paramètre</param>
            <returns>DataSet contenant les données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.ProofDataAccess.GetDataLocation(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.Int32)">
            <summary>
            Méthode pour l'execution de la requête qui récupère le descriptif pour la fiche justificative
            </summary>
            <param name="dataSource">DataSource</param>
            <param name="webSession">Session</param>
            <param name="idAdvertisement">Identifiant du paramètre</param>
            <param name="idMedia">Identifiant du media</param>
            <param name="date">Date</param>
            <returns>DataSet contenant les données</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.FilesItem">
            <summary>
            permet d'imbriquer plusieurs tableaux de résultat
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.FilesItem._name">
            <summary>
            Nom de la liste d'éléments
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.FilesItem._type">
            <summary>
            Type du fichier
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.FilesItem._list">
            <summary>
            Liste des éléments
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.FilesItem.#ctor(System.String,System.String[0:,0:],TNS.AdExpress.Anubis.Constantes.Result.type)">
            <summary>
            Constructeur
            </summary>
            <param name="name">Nom de la liste d'éléments</param>
            <param name="list">Liste des éléments</param>
            <param name="type">Type du fichier</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.FilesItem.Name">
            <summary>
            Obtient le nom de la liste d'éléments
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.FilesItem.List">
            <summary>
            Obtient la liste des éléments
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.FilesItem.Type">
            <summary>
            Obtient le type du fichier
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.ExportVersionItem">
            <summary>
            Description résumée de DetailVersionItem.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportVersionItem._firstInsertionDate">
            <summary>date de la première insertion dans le plan</summary>
            <author>rkaina</author>
            <since>jeudi 17 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportVersionItem._nbInsertion">
            <summary>Nombre d'insertions</summary>
            <author>rkaina</author>
            <since>jeudi 17 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportVersionItem._nbMedia">
            <summary>Nombre de supports</summary>
            <author>rkaina</author>
            <since>jeudi 17 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportVersionItem._expenditureEuro">
            <summary>Budget</summary>
            <author>rkaina</author>
            <since>jeudi 17 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportVersionItem._nbVisuel">
            <summary>Nombre de visuels</summary>
            <author>rkaina</author>
            <since>jeudi 21 août 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExportVersionItem.#ctor(System.Int64,System.String,System.String)">
            <summary>Constructor</summary>
             <author>rkaina</author>
             <since>jeudi 17 août 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExportVersionItem.#ctor(System.Int64,System.String)">
            <summary>Constructor</summary>
             <author>rkaina</author>
             <since>jeudi 17 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportVersionItem.FirstInsertionDate">
            <summary>Get / Set date de la première insertion dans le plan</summary>
             <author>rkaina</author>
             <since>jeudi 17 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportVersionItem.NbInsertion">
            <summary>Get / Set Nombre d'insertions</summary>
             <author>rkaina</author>
             <since>jeudi 17 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportVersionItem.NbMedia">
            <summary>Get / Set Nombre de supports</summary>
             <author>rkaina</author>
             <since>jeudi 17 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportVersionItem.ExpenditureEuro">
            <summary>Get / Set Budget</summary>
             <author>rkaina</author>
             <since>jeudi 17 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportVersionItem.NbVisuel">
            <summary>Get / Set Nombre de visuels</summary>
             <author>rkaina</author>
             <since>jeudi 21 août 2006</since>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.IndicatorSeasonalityUI">
            <summary>
            Interface Utilisateur d'un Indicateur de Saisonnalité dans analyse sectorielle
            Cette classe génère suivant le format de sortie le code pour afficher un tableau	
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorSeasonalityUI.GetIndicatorSeasonalityHtmlUI(System.Web.UI.Page,System.Object[],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère le code HTML sur le total support de l'univers,marché ou famille, ou sur les
            annonceurs de références ou concurrents :
            -les investissements de l'année N
            -une évolution N vs N-1 (uniquement dans le ca d'une étude comparative)
            -le nombre de référence
            -le budget moyen par référence
            -le 1er annonceur en Ke et SOV (uniquement pour les lignes total produits éventuels)
            -la 1ere référence en Ke et SOV (uniquement pour les lignes total produits éventuels)
            </summary>		
            <param name="webSession">Session du client</param>
            <param name="page">Page qui affiche le Plan Média</param>
            <param name="tabResult">tableau de résultats</param>
            <param name="excel">sortie des résultats sous tableur excel</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorSeasonalityUI.GetIndicatorSeasonalityExcelUI(System.Web.UI.Page,System.Object[],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code HTML (pour une sortie sous excel) sur le total support de l'univers,marché ou famille, ou sur les
            annonceurs de références ou concurrents :
            -les investissements de l'année N
            -une évolution N vs N-1 (uniquement dans le ca d'une étude comparative)
            -le nombre de référence
            -le budget moyen par référence
            -le 1er annonceur en Ke et SOV (uniquement pour les lignes total produits éventuels)
            -la 1ere référence en Ke et SOV (uniquement pour les lignes total produits éventuels)
            </summary>
            <param name="page">Page qui affiche le Plan Média</param>
            <param name="tabResult">tableau de résultats</param>
            <param name="webSession">Session du client</param>
            <returns>code HTML adapté pour une sortie sous excel</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.GenericMediaScheduleUI">
            <summary>
            Media Schedule user interface generator
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaScheduleUI.GetHtml(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod,System.String)">
            <summary>
            Common Media Schedule UI
            </summary>
            <param name="tab">Data</param>
            <param name="webSession">Customer DB</param>
            <param name="period">Study period</param>
            <param name="zoom">Zoom param (only for links to other tables..)</param>
            <returns>HTML code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaScheduleUI.GetAdNetTrackHtml(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod,System.Object[0:,0:],System.String)">
            <summary>
            Génère le code HTML pour afficher un calendrier d'action sur une ou plusieurs périodes.
            Elles se base sur un tableau contenant les données
            tab vide : message "Pas de données"
            tab non vide:
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Javascripts (ouverture du détail des insertions et ouverture/fermeture des calendriers d'actions)
            	Génération du code HTML des entêtes de colonne
            	Génération du code HTML du calendrier d'action
            </summary>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <param name="zoomDate">Période à prendre en compte (un mois ou une semaine)</param>
            <param name="period">Périod d'étude</param>
            <returns>Code Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaScheduleUI.GetExcel(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod,System.String,System.Boolean,System.Int32)">
            <summary>
            Common Media Schedule UI
            </summary>
            <param name="tab">Data</param>
            <param name="webSession">Customer DB</param>
            <param name="period">Study period</param>
            <param name="zoom">Zoom param (only for links to other tables..)</param>
            <param name="showValue"></param>
            <param name="periodDisplayLevel">Niveau de détail de l'affichage des périodes</param>
            <returns>HTML code for Excel pages</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaScheduleUI.GetAdNetTrackExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod,System.Object[0:,0:],System.String)">
            <summary>
            Génère le code HTML pour afficher un calendrier d'action sur une ou plusieurs périodes.
            Elles se base sur un tableau contenant les données
            tab vide : message "Pas de données"
            tab non vide:
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Javascripts (ouverture du détail des insertions et ouverture/fermeture des calendriers d'actions)
            	Génération du code HTML des entêtes de colonne
            	Génération du code HTML du calendrier d'action
            </summary>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <param name="zoomDate">Période à prendre en compte (un mois ou une semaine)</param>
            <param name="period">Périod d'étude</param>
            <returns>Code Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaScheduleUI.GetPdf(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod,System.Text.StringBuilder,System.Int64@,System.Int32)">
            <summary>
            Build HTML code for PDF export
            </summary>
            <param name="tab">Data</param>
            <param name="webSession">Customer Session</param>
            <param name="period">Study period</param>
            <param name="header">table header (out paramters)</param>
            <param name="nbWeek">Nb of displayed weeks (out parameters)</param>
            <returns>Media plan result (html code + versions codes if required)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaScheduleUI.GetSloganIdIndex(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient la colonne contenant le id_slogan
            Si le détail support ne contient pas le niveau slogan, elle retoune -1
            </summary>
            <param name="webSession">Session client</param>
            <returns>Colonne contenant l'id_slogan, -1 si pas de slogan</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaScheduleUI.GetHtml(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod,System.String,System.Text.StringBuilder,System.Int64@,System.Boolean,System.Int32)">
            <summary>
            Build HTML code for PDF export
            </summary>
            <param name="tab">Data</param>
            <param name="webSession">Customer Session</param>
            <param name="period">Study period</param>
            <param name="header">table header (out paramters)</param>
            <param name="nbWeek">Nb of displayed weeks (out parameters)</param>
            <param name="isExport">True if result is an export</param>
            <param name="zoom">Zoom if required</param>
            <returns>Media plan result (html code + versions codes if required)</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAlertUI">
            <summary>
            Construit l'interface utilisateur pour les alertes plan media ou les zooms plan media
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAlertUI.GetAdNetTrackMediaPlanAlertWithMediaDetailLevelHtmlUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code HTML pour afficher un calendrier d'action AdNetTrack détaillé en jour entre les dates de la session.
            Elles se base sur un tableau contenant les données
            tab vide : message "Pas de données" + bouton retour
            tab non vide:
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Javascripts (ouverture du détail des insertions et ouverture/fermeture des calendriers d'actions)
            	Génération du code HTML des entêtes de colonne
            	Génération du code HTML des périodes (Libellé du mois, intitulés d'une unité de période)
            	Génération du code HTML du calendrier d'action
            </summary>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <returns>Code Généré</returns>
            <remarks>
            Utilise les méthodes:
            	public static string TNS.AdExpress.Web.Functions.Script.OpenCreation()
            	public static string TNS.AdExpress.Web.Functions.Script.DynamicMediaPlan()
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAlertUI.GetAdNetTrackMediaPlanAlertWithMediaDetailLevelHtmlUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.Int64,System.Int32,System.String)">
            <summary>
            Génère le code HTML pour afficher un calendrier d'action détaillé en jour sur UNE période.
            Elles se base sur un tableau contenant les données
            tab vide : message "Pas de données" + bouton retour
            tab non vide:
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Javascripts (ouverture du détail des insertions et ouverture/fermeture des calendriers d'actions)
            	Génération du code HTML des entêtes de colonne
            	Génération du code HTML des périodes (période suivante, période courante, période suivante, intitulés d'une unité de période
            	Génération du code HTML du calendrier d'action
            </summary>
            <param name="page">Page qui affiche le Plan Média</param>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <param name="zoomDate">Période à prendre en compte (un mois ou une semaine)</param>
            <param name="url">Lien vers la pge elle-même. Permet de gérer les flèches "Période suivante", "Période précédente"</param>
            <param name="urlParameters">Paramètres d'Url</param>
            <param name="moduleId">L'identificateur du module</param>
            <param name="universId">l'identificateur de l'univers</param>
            <param name="currentPage">la page courante (pagination)</param>
            <returns>Code Généré</returns>
            <remarks>
            Utilise les méthodes:
            	public static string TNS.AdExpress.Web.Functions.Script.OpenCreation()
            	public static string TNS.AdExpress.Web.Functions.Script.DynamicMediaPlan()
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAlertUI.GetMediaPlanAlertWithMediaDetailLevelHtmlUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code HTML pour afficher un calendrier d'action détaillé en jour entre les dates de la session.
            Elles se base sur un tableau contenant les données
            tab vide : message "Pas de données" + bouton retour
            tab non vide:
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Javascripts (ouverture du détail des insertions et ouverture/fermeture des calendriers d'actions)
            	Génération du code HTML des entêtes de colonne
            	Génération du code HTML des périodes (Libellé du mois, intitulés d'une unité de période)
            	Génération du code HTML du calendrier d'action
            </summary>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <returns>Code Généré</returns>
            <remarks>
            Utilise les méthodes:
            	public static string TNS.AdExpress.Web.Functions.Script.OpenCreation()
            	public static string TNS.AdExpress.Web.Functions.Script.DynamicMediaPlan()
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAlertUI.GetMediaPlanAlertWithMediaDetailLevelHtmlUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Génère le code HTML pour afficher un calendrier d'action détaillé en jour sur UNE période.
            Elles se base sur un tableau contenant les données
            tab vide : message "Pas de données" + bouton retour
            tab non vide:
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Javascripts (ouverture du détail des insertions et ouverture/fermeture des calendriers d'actions)
            	Génération du code HTML des entêtes de colonne
            	Génération du code HTML des périodes (période suivante, période courante, période suivante, intitulés d'une unité de période
            	Génération du code HTML du calendrier d'action
            </summary>
            <param name="page">Page qui affiche le Plan Média</param>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <param name="zoomDate">Période à prendre en compte (un mois ou une semaine)</param>
            <param name="url">Lien vers la pge elle-même. Permet de gérer les flèches "Période suivante", "Période précédente"</param>
            <returns>Code Généré</returns>
            <remarks>
            Utilise les méthodes:
            	public static string TNS.AdExpress.Web.Functions.Script.OpenCreation()
            	public static string TNS.AdExpress.Web.Functions.Script.DynamicMediaPlan()
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAlertUI.GetMediaPlanAlertWithMediaDetailLevelExcelUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.Boolean)">
            <summary>
            Génère le code HTML pour Ms Excel pour afficher un calendrier d'action entre deux périodes respectant le type de période spécifié dans la session.
            Elles se base sur un tableau contenant les données. Cette méthode sert aussi bien pour les zooms que pour les alertes
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Rappel des paramètres de périodes 
            	Génération du code HTML des périodes (Libellé du mois, intitulés d'une unité de période)
            	Génération du code HTML du calendrier d'action
            </summary>
            <returns>Code Généré</returns>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <param name="periodBeginning">Période de début du calendrier d'action</param>
            <param name="periodEnd">Période de fin du calendrier d'action</param>
            <param name="showValue">Montre les valeurs dans les cases du calendrier d'action</param>
            <returns>Code Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAlertUI.GetAdNetTrackMediaPlanAlertWithMediaDetailLevelExcelUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code HTML pour Ms Excel pour afficher un calendrier d'action AdNetTrack détaillé en jour entre les dates de la session.
            Elles se base sur un tableau contenant les données
            tab vide : message "Pas de données" + bouton retour
            tab non vide:
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Javascripts (ouverture du détail des insertions et ouverture/fermeture des calendriers d'actions)
            	Génération du code HTML des entêtes de colonne
            	Génération du code HTML des périodes (Libellé du mois, intitulés d'une unité de période)
            	Génération du code HTML du calendrier d'action
            </summary>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <returns>Code Généré</returns>
            <remarks>
            Utilise les méthodes:
            	public static string TNS.AdExpress.Web.Functions.Script.OpenCreation()
            	public static string TNS.AdExpress.Web.Functions.Script.DynamicMediaPlan()
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAlertUI.GetMediaPlanAlertExcelUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Génère le code HTML pour Ms Excel pour afficher un calendrier d'action entre deux périodes respectant le type de période spécifié dans la session.
            Elles se base sur un tableau contenant les données. Cette méthode sert aussi bien pour les zooms que pour les alertes
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Rappel des paramètres de périodes 
            	Génération du code HTML des périodes (Libellé du mois, intitulés d'une unité de période)
            	Génération du code HTML du calendrier d'action
            </summary>
            <returns>Code Généré</returns>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <param name="periodBeginning">Période de début du calendrier d'action</param>
            <param name="periodEnd">Période de fin du calendrier d'action</param>
            <returns>Code Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAlertUI.GetMediaPlanAlertWithMediaDetailLevelPdfUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Text.StringBuilder@,System.Int64@,System.Int32)">
            <summary>
            Génère le code HTML pour afficher un calendrier d'action détaillé en jour entre les dates de la session.
            Elles se base sur un tableau contenant les données
            tab vide : message "Pas de données" + bouton retour
            tab non vide:
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Génération du code HTML des entêtes de colonne
            	Génération du code HTML des périodes (Libellé du mois, intitulés d'une unité de période)
            	Génération du code HTML du calendrier d'action
            </summary>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <param name="htmlHeader">Entête du fichier HTML</param>
            <param name="nbWeek">Nombre de semaines</param>
            <returns>Code Généré</returns>
            <remarks>
            Utilise les méthodes:
            	public static string TNS.AdExpress.Web.Functions.Script.OpenCreation()
            	public static string TNS.AdExpress.Web.Functions.Script.DynamicMediaPlan()
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.GenericMediaPlanAlertUI.GetSloganIdIndex(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient la colonne contenant le id_slogan
            Si le détail support ne contient pas le niveau slogan, elle retoune -1
            </summary>
            <param name="webSession">Session client</param>
            <returns>Colonne contenant l'id_slogan, -1 si pas de slogan</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.SectorDataSynthesisUI">
            <summary>
            This class claculates the HTML table for the Sector Data synthesis.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.SectorDataSynthesisUI.GetHTML(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            This method generates the HTML for the Sector Data Synthesis Tab
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.SectorDataSynthesisUI.GetExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Excel de Synthèse sector Data
            </summary>
            <param name="webSession">session client</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="baseTarget">cible de base</param>
            <param name="additionalTarget">cible supplementaire</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.SectorDataSynthesisUI.InvertStyle(System.String)">
            <summary>
            inverts the style for alternating rows
            </summary>
            <param name="style">the style string to be inverted</param>
            <returns>the inverted style</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.LocationPlanTypesUI">
            <summary>
            Description résumée de LocationPlanTypesUI.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.LocationPlanTypesUI.GetHtml(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Affichage des données des types d'emplacement du plan
            </summary>
            <param name="webSession">session du client</param>
            <param name="dataSource">source de données</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="baseTarget">cible de base</param>
            <param name="additionalTarget">cible supplémentaire</param>
            <returns>données des types d'emplacement du plan à afficher</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.LocationPlanTypesUI.GetExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Excel  des types d'emplacement du plan
            </summary>
            <param name="webSession">session client</param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">base target</param>		
            <param name="dataSource">dataSource for creating Datasets </param>	
            <param name="additionalTarget">additional target</param>	
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.LocationPlanTypesUI.HeaderTitle(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Titre en-tête du tableau
            </summary>
            <param name="webSession">session du client</param>
            <param name="targetText">texte</param>
            <returns>titre</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.AffinitiesUI">
            <summary>
            This class is used to create the UserInterface for the Affinities results.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.AffinitiesUI.GetHTML(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Affinties APPM
            </summary>
            <param name="webSession">session client</param>
            <param name="dateBegin">Beginning Datet</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">base target</param>
            <param name="idWave">id of the wave</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="excel">Boolean to indicate that the resul if excel or html</param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.AffinitiesUI.GetExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Excel of Affinties APPM
            </summary>
            <param name="webSession">session client</param>
            <param name="dateBegin">Beginning Datet</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">base target</param>
            <param name="idWave">id of the wave</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="excel">Boolean to indicate that the resul if excel or html</param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.HtmlFunctions">
            <summary>
             Usefull tools for UI design
             </summary>
              <stereotype>utility</stereotype>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.HtmlFunctions.GetPeriodDetail(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Generate html code for period detail design
            </summary>
            <param name="webSession">User Session</param>
            <returns>Html code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.HtmlFunctions.GetZoomPeriodDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Generate html code for zoom period detail design
            </summary>
            <param name="webSession">User Session</param>
            <param name="zoomDate">Date de zoom</param>
            <returns>Html code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.HtmlFunctions.GetStudyPeriodDetail(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Generate html code for study period detail design
            </summary>
            <param name="webSession">User Session</param>
            <returns>Html code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.HtmlFunctions.GetComparativePeriodDetail(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Generate html code for comparative period detail design
            </summary>
            <param name="webSession">User Session</param>
            <returns>Html code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.HtmlFunctions.GetComparativePeriodTypeDetail(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Generate html code for comparative period detail design
            </summary>
            <param name="webSession">User Session</param>
            <returns>Html code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.HtmlFunctions.GetPeriodDisponibilityTypeDetail(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Generate html code for period disponibility type detail design
            </summary>
            <param name="webSession">User Session</param>
            <returns>Html code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.HtmlFunctions.GetPeriodDetailForExcel(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Generate Excel code for period detail design
            </summary>
            <param name="webSession">User Session</param>
            <returns>Excel code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.HtmlFunctions.GenerateSortLink(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Génère les liens à cliquer pour trier une colonne 
            </summary>
            <param name="indexCurrentColumn">index colonne en cours de création</param>
            <param name="indexColumnToSort">index colonne à trier</param>		
            <param name="ID">Identifiant de l'élément qui lance l'évènement de tri</param>
            <param name="classe"> style css des  liens</param>
            <returns>Code HTML des leins</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.TendenciesRules">
            <summary>
            Description résumée de TendenciesRules.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TendenciesRules.GetTendenciesFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Fournit le tableau pour le module tendance
            </summary>
            <param name="webSession">Session Client</param>
            <param name="vehicleName">Nom du Vehicle</param>
            <returns>tableau</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TendenciesRules.FillPdmForTendencies(System.Object[0:,0:]@,System.Int32,System.Int32,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Calcul des pdm pour les medias
            </summary>
            <param name="tab">tableau</param>
            <param name="categoryLine">line de la categorie</param>
            <param name="endLine">dernière ligne</param>
            <param name="vehicleName">Nom du vehicle</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TendenciesRules.FillPdmCategoryForTendencies(System.Object[0:,0:]@,System.Int32[],TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Calcul des PDM pour les categories
            </summary>
            <param name="tab">tableau</param>
            <param name="indexCategory">index de la category</param>
            <param name="vehicleName">Nom du vehicle</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TendenciesRules.FillPdmTotal(System.Object[0:,0:]@,System.Int32,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Calcul des pdm pour les medias la base 100 étant le total média
            </summary>
            <param name="tab">tableau</param>
            <param name="endLine">dernière ligne</param>
            <param name="vehicleName">Nom du vehicle</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TendenciesRules.Evol(System.Object[0:,0:]@,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calcul de l'évolution
            </summary>
            <param name="tab">Tableau</param>
            <param name="line">ligne à traiter</param>
            <param name="N">Index de la colonne de l'année N</param>
            <param name="N1">Index de la colonne de l'année N-1</param>
            <param name="Evol">Index de la colonne Evolution</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.TendenciesRules.InitializeTable(System.Object[0:,0:]@,System.Int32,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Initialisation de la table
            </summary>
            <param name="tab">table</param>
            <param name="currentLine">Ligne à traiter</param>
            <param name="vehicleName">Nom du vehicle</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.PortofolioRules">
            <summary>
            Obtient les résultats pour le portefeuille d'un support.
            - getFormattedTable(WebSession webSession) donne le détail d'un portefeuille.
            - getStructRadioTab(WebSession webSession,int dateBegin,int dateEnd) donne la structure du portefeuille pour la presse.
            -  getStructTVTab(WebSession webSession,int dateBegin,int dateEnd) donne la structure du portefeuille pour la télévision.
            - getStructPressTab(WebSession webSession, int dateBegin,int dateEnd,out DataTable dtFormat, out DataTable dtColor, out DataTable dtLocation,out DataTable dtInsert)
            donne la structure du portefeuille pour la presse.
            - getFormattedTableDetailMedia(WebSession webSession,Int64 idVehicle,Int64 idMedia,string dateBegin,string dateEnd) donne le détail d'un support.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.PortofolioRules.GetResultTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le tableau contenant l'ensemble des résultats
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.PortofolioRules.GetPortefolioSize(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable)">
            <summary>
            Calcul la taille du tableau de résultats
            </summary>
            <param name="webSession">session du client</param>
            <param name="dt">table de données</param>
            <returns>nombre de ligne du tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.PortofolioRules.GetCalendar(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le tableau contenant l'ensemble des résultats
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.PortofolioRules.GetCalendarSize(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Collections.ArrayList)">
            <summary>
            Calcul la taille du tableau de résultats d'un calendrier d'action
            </summary>
            <param name="webSession">session du client</param>
            <param name="dt">table de données</param>
            <returns>nombre de ligne du tableau de résultats</returns>
            <param name="parutions">Parutions</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.PortofolioRules.GetFormattedTableDetailMedia(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Créer un tableau avec pour chaque jour de la semaine
            l'investissement du support et le nombre de spot
            </summary>
            <param name="webSession">Session Client</param>
            <param name="idVehicle">identifiant du vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns>tableau avec pour chaque jour de la semaine
            l'investissement du support et le nombre de spot</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.PortofolioRules.GetPortofolioDetailMediaResultTable(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Accès à la construction du tableau du détail média pour le module portefeuille
            </summary>		
            <param name="webSession">Session du client</param>
            <param name="dayOfWeek">jour de la semaine</param>
            <param name="adBreak">Code écran</param>
            <returns>Code HTML du tableau du parrainage </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.PortofolioRules.GetStructRadioTab(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32)">
            <summary>
            Obtient le tableau de donnée des informations synthétiques (structure)
            pour la radio
            </summary>
            <param name="webSession">session du client</param>		
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns>tableau de données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.PortofolioRules.GetStructTVTab(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32)">
            <summary>
            Obtient le tableau de donnée des informations synthétiques (structure)
            pour la TV
            </summary>
            <param name="webSession">session du client</param>		
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns>tableau de données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.PortofolioRules.GetStructPressTab(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Data.DataTable@,System.Data.DataTable@,System.Data.DataTable@,System.Data.DataTable@)">
             <summary>
            Obtient le tableau de donnée des informations synthétiques (structure)
            pour la presse 
             </summary>
             <param name="webSession">session du client</param>
             <param name="dateBegin">date de début</param>
             <param name="dateEnd">date de fin</param>
             <param name="dtFormat">table de données pour le format</param>
             <param name="dtColor">table de données pour la couleur</param>
             <param name="dtLocation">table de données pour les emplacements</param>
             <param name="dtInsert">table de données pour les encarts</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.PortofolioRules.IsRowNull(System.Data.DataSet)">
            <summary>
            Vérifie qu'une datarow est vide
            </summary>
            <param name="ds">dataset</param>
            <returns>vrai si non vide</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.PortofolioRules.FillTabEuroSpotDuration(System.Object[0:,0:]@,System.Data.DataSet,System.Int32,System.Double@,System.Double@,System.Double@,System.String)">
            <summary>
            Remplit le tableau de résultats avec euros,spot et durée.
            </summary>
            <param name="tab">tableau de résultats</param>
            <param name="ds">groupe de données</param>
            <param name="lineIndex">line courante du tableau de résultat</param>
            <param name="totalEuros">total euros</param>
            <param name="totalSpot">total spot</param>
            <param name="totalDuration">total durée</param>
            <param name="timeSpan">timeSpan</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.PortofolioRules.GetDateBegin(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient la date de début de l'analyse en fonction du module
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Date de début</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.PortofolioRules.GetDateEnd(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient la date de fin de l'analyse en fonction du module
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Date de fin</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.PortofolioRules.SetDataTable(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            Adapte le tadaTable pour la Presse et la Presse interntional
            </summary>
            <param name="dt">DataTable</param>
            <returns>DataTable</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules">
            <summary>
            Traitement des données issues de MediaInsertionsCreationDataAccess ==> tableau de données 
            prêtes à l'emploi pour la couche UI
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Collections.Specialized.ListDictionary)">
            <summary>
            Construction d'un tableau de données exploitables par la couche UI:
            	Extraction des dates de calcul à partir des périodes de début et de fin
            	Extraction des données à partir de la BD
            	Extraction du tableau de données suivant le vehicle considéré
            </summary>
            <param name="webSession">Session client</param>
            <param name="idMediaLevel1">Identifiant Media 1</param>
            <param name="idMediaLevel2">Identifiant Media 2</param>
            <param name="idMediaLevel3">Identifiant Media niveau 3</param>
            <param name="idAdvertiser">Identifiant annonceur</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <param name="idVehicle">Identifiant Média</param>
            <param name="mediaImpactedList">Liste des médias impacté par le détail</param>		
            <remarks>
            - Utilise les méthodes:
            <code>	public static DataSet TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetData(WebSession webSession,ListDictionary mediaList,int dateBegin,int dateEnd,bool isMediaDetail,Int64 idVehicle)
            	public static DataSet TNS.AdExpress.Web.DataAccess.Results.GetData(WebSession webSession,Int64 idVehicle,Int64 idCategory,Int64 idMedia,Int64 idAdvertiser,int dateBegin,int dateEnd)		
            	private static object[,] GetDataPress(DataSet ds, WebSession webSession,bool isMediaDetail)
            	private static object[,] GetDataTV(DataSet ds, WebSession webSession,bool isMediaDetail)
            	private static object[,] GetDataRadio(DataSet ds, WebSession webSession,bool isMediaDetail)
            	private static object[,] GetDataOutDoor(DataSet ds, WebSession webSession,bool isMediaDetail)</code>
            - Les paramètres string idMediaLevel1,string idMediaLevel2,string idMediaLevel3 sont essentiellement utilisés lorsqu'il y a des univers concurrents
            </remarks>
            <history>D. V. Mussuma 12/12/2005</history>
            <returns>Tableau de d'objets (données)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Collections.Specialized.ListDictionary,System.Collections.ArrayList)">
            <summary>
            Construction d'un tableau de données exploitables par la couche UI:
            	Extraction des dates de calcul à partir des périodes de début et de fin
            	Extraction des données à partir de la BD
            	Extraction du tableau de données suivant le vehicle considéré
            </summary>
            <param name="webSession">Session client</param>
            <param name="idMediaLevel1">Identifiant Media 1</param>
            <param name="idMediaLevel2">Identifiant Media 2</param>
            <param name="idMediaLevel3">Identifiant Media niveau 3</param>
            <param name="idAdvertiser">Identifiant annonceur</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>		
            <param name="idVehicle">Identifiant Média</param>
            <param name="mediaImpactedList">Liste des médias impacté par le détail</param>
            <param name="fieldsList">Liste des champs d'éléments  à traiter</param>
            <remarks>
            - Utilise les méthodes:
            <code>	public static DataSet TNS.AdExpress.Web.DataAccess.Results.MediaCreationDataAccess.GetData(WebSession webSession,ListDictionary mediaList,int dateBegin,int dateEnd,bool isMediaDetail,Int64 idVehicle)
            	public static DataSet TNS.AdExpress.Web.DataAccess.Results.GetData(WebSession webSession,Int64 idVehicle,Int64 idCategory,Int64 idMedia,Int64 idAdvertiser,int dateBegin,int dateEnd)		
            	private static object[,] GetDataPress(DataSet ds, WebSession webSession,bool isMediaDetail)
            	private static object[,] GetDataTV(DataSet ds, WebSession webSession,bool isMediaDetail)
            	private static object[,] GetDataRadio(DataSet ds, WebSession webSession,bool isMediaDetail)
            	private static object[,] GetDataOutDoor(DataSet ds, WebSession webSession,bool isMediaDetail)</code>
            - Les paramètres string idMediaLevel1,string idMediaLevel2,string idMediaLevel3 sont essentiellement utilisés lorsqu'il y a des univers concurrents
            </remarks>
            <history>D. V. Mussuma 12/12/2005</history>
            <returns>Tableau de d'objets (données)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetDataPress(System.Data.DataSet,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère un tableau de données d'insertions presses préformaté utilisables pour la couche UI:
            	["date","page","groupz","annonceur","produit","format","surface","couleur","prix","média","catégorie","support","visuel1,visuel2,..."]
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>
            <param name="webSession">session du client</param>
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetDataPress(System.Data.DataSet,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.ArrayList)">
            <summary>
            Génère un tableau de données d'insertions presses préformaté utilisables pour la couche UI:
            	["date","page","groupz","annonceur","produit","format","surface","couleur","prix","média","catégorie","support","visuel1,visuel2,..."]
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>
            <param name="webSession">session du client</param>		
            <param name="fieldsList">Liste des champs à récuperer</param>
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetDataTV(System.Data.DataSet,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère un tableau de données d'insertions TV préformaté utilisable pour la couche UI:
            	["date","groupe","annonceur","produit","top diffusion","durée","rang","durée de l'écran","nb de spot de l'écran","prix","média","catégorie","support","fichier spot tv","Code écran"] (ordre non représentatif)
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>
            <param name="webSession">session du client</param>
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetDataTV(System.Data.DataSet,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.ArrayList)">
            <summary>
            Génère un tableau de données d'insertions TV préformaté utilisable pour la couche UI:
            	["date","groupe","annonceur","produit","top diffusion","durée","rang","durée de l'écran","nb de spot de l'écran","prix","média","catégorie","support","fichier spot tv","Code écran"] (ordre non représentatif)
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>
            <param name="webSession">session du client</param>
            <param name="fieldsList">Liste des champs à récuperer</param>
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetDataRadio(System.Data.DataSet,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère un tableau de données d'insertions radio préformaté utilisable pour la couche UI:
            	["date",groupe","annonceur","produit","top diffusion","durée","rang","durée de l'écran","rang HAP","durée écran HAP","nb spots HAP","nb de spot de l'écran","prix","média","catégorie","support","fichier spot radio"] (ordre non représentatif)
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>
             <param name="webSession">session du client</param>
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetDataRadio(System.Data.DataSet,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.ArrayList)">
            <summary>
            Génère un tableau de données d'insertions radio préformaté utilisable pour la couche UI:
            	["date",groupe","annonceur","produit","top diffusion","durée","rang","durée de l'écran","rang HAP","durée écran HAP","nb spots HAP","nb de spot de l'écran","prix","média","catégorie","support","fichier spot radio"] (ordre non représentatif)
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>
             <param name="webSession">session du client</param>
            <param name="fieldsList">Liste des champs à récuperer</param>
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetDataOutDoor(System.Data.DataSet,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère un tableau de données d'insertions Publicité extérieure préformaté utilisable pour la couche UI:
            	["date","groupe","annonceur","produit","nombre de panneaux","format","type de réseau","réseau afficheur","prix","média","catégorie","support","fichier affiche publicitaire"] (ordre non représentatif)
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>
            <param name="webSession">session du client</param>
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetDataOutDoor(System.Data.DataSet,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.ArrayList)">
             <summary>
             Génère un tableau de données d'insertions Publicité extérieure préformaté utilisable pour la couche UI:
            		["date","groupe","annonceur","produit","nombre de panneaux","format","type de réseau","réseau afficheur","prix","média","catégorie","support","fichier affiche publicitaire"] (ordre non représentatif)
             </summary>
             <param name="ds">Données à traiter en provenance de la BD</param>
             <param name="webSession">session du client</param>
            <param name="fieldsList">Liste des champs à récuperer</param>
             <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetDataMD(System.Data.DataSet,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Specialized.ListDictionary)">
            <summary>
            Génère un tableau de données des versions du MD préformaté utilisables pour la couche UI:
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>
            <param name="webSession">session du client</param>
            <param name="mediaImpactedList">Liste des médias impacté par le détail</param>
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetDataMD(System.Data.DataSet,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.ArrayList,System.Collections.Specialized.ListDictionary)">
            <summary>
            Génère un tableau de données des versions du MD préformaté utilisables pour la couche UI:
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>
            <param name="webSession">session du client</param>		
            <param name="fieldsList">Liste des champs à récuperer</param>
            <param name="mediaImpactedList">Liste des médias impacté par le détail</param>
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetIdsVehicle(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Specialized.ListDictionary,System.String,System.String)">
            <summary>
            Obtient les identifiants des médias (vehicle) à traiter (vehicle)
            </summary>
            <param name="webSession">Session du client</param>
            <param name="mediaImpactedList">Liste des médias impactés</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns>identifiants des médias</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetImpactedVehicleIds(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.Collections.ArrayList@,System.String@,System.String)">
            <summary>
            Obtient la liste des médias (vehicle) impactés
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idMediaLevel1">Média Niveau 1</param>
            <param name="idMediaLevel2">Média Niveau 2</param>
            <param name="idMediaLevel3">Média Niveau 3</param>
            <param name="idMediaLevel4">Média Niveau 4</param>
            <param name="vehicleArr">Liste des médias impactés</param>
            <param name="idVehicle">Média en cours</param>
            <param name="zoomDate">Zoom Date</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.ApplyColumnRule(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Object)">
            <summary>
            Applique les règles métiers spécifiques à une colonne
            </summary>
            <param name="webSession">Session du client</param>
            <param name="columnName">Non de la colonne</param>
            <param name="cellValue">Valeur de la cellule</param>
            <returns>Valeur traitée</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetFieldsList(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Collections.ArrayList,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Obtient les champs en base de données des éléments à détailler
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dt">Table de donnée</param>
            <param name="fieldsList">Liste des champs à traiter</param>
            <returns>champs en base de données des éléments à détailler</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.IsRequiredGenericColmuns(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Indique si nécessite colonnne génériques
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Vrai si nécessite colonnne génériques</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.IsMDSelected(System.String)">
            <summary>
            Indique si nécessite colonnne génériques
            </summary>
            <returns>Vrai si le media MD est seléctioné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaInsertionsCreationsRules.GetItemContentList(System.Data.DataRow)">
            <summary>
            Renvoie la liste des item content
            </summary>
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.IndicatorNoveltyRules">
            <summary>
            Classe métier de traitement des données issues de la base pour 
            les Nouveautés (analyse sectorielle).
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorNoveltyRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType)">
            <summary>
            Crée le tableau de résultats qui permettra de détecter les réels nouveaux produits
            ou annonceurs des démarrages de campagne. Par nouveau il faut comprendre, un annonceur ou produit actif sur le
            dernier mois , mais inactif (pas d'investissement) depuis le début de l'anné.
            </summary>
            <param name="webSession">session du client</param>
            <param name="elementType">référence  ou annonceur</param>
            <returns>Tableau de nouveaux produits ou annonceurs</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.IndicatorEvolutionRules">
            <summary>
            Indicateur Evolution
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorEvolutionRules.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorEvolutionRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType)">
            <summary>
            Retourne l'objet contenant les infos pour un tableau evolution
            </summary>
            <param name="webSession">session du client</param>
            <param name="tableType">type de tableau</param>
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.ProofRules">
            <summary>
            Classe des rules nécessaires à la fiche justificative
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.ProofRules.GetData(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.Int32,System.String)">
            <summary>
            Méthode pour le traitement des données d'une fiche justificative
            </summary>
            <param name="dataSource">DataSource</param>
            <param name="webSession">Session</param>
            <param name="idMedia">Identifiant du media</param>
            <param name="idProduct">Identifiant du produit</param>
            <param name="date">Date</param>
            <param name="page">Numéro de la page</param>
            <returns>DataTable contenant les données</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.Rights">
            <summary>
            Function to manage site rights 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Rights.CanAccessToCreation(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            NE PAS UTILISER !!!!!!!!!!!
            </summary>
            <param name="webSession">User web session</param>
            <param name="vehicle">media</param>
            <returns>True if user has access to creation</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.Cookies">
            <summary>
            Description résumée de Cookies.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Cookies.LoadSavedEmailForRemotingExport(System.Web.UI.Page,System.Web.HttpCookie,System.Web.HttpCookie,System.Web.UI.WebControls.CheckBox,System.Web.UI.WebControls.TextBox)">
            <summary>
            Charge l'email pour l'export distant à effectuer
            </summary>
            <param name="page">Page</param>
            <param name="isRegisterEmailForRemotingExport">Cookie Indique s'il faut enregister les préférences popur l'export</param>
            <param name="savedEmailForRemotingExport">Cookie Mail pour l'export</param>
            <param name="cbxRegisterMail">Case à cocher enregister l'email</param>
            <param name="tbxMail">Zone de texte pour l'email</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Cookies.SaveEmailForRemotingExport(System.Web.UI.Page,System.String,System.Web.UI.WebControls.CheckBox)">
            <summary>
            Enregistre l'email pour l'export distant d'un fichier (anubis) dans un cookie
            </summary>
            <param name="page">Page courante</param>
            <param name="mail">Email</param>
            <param name="cbxRegisterMail">Case à cocher enregister l'email </param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SynthesisRulesException">
            <summary>
            Rules: Synthèse
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SynthesisRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SynthesisRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SynthesisRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PortofolioDateException">
            <summary>
            Exception sur la date dans le module portefeuille
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioDateException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioDateException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioDateException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaPlanSystemException">
            <summary>
            Exception lors de la création du résultat d'un plan média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanSystemException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanSystemException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MarketShareUIException">
            <summary>
            IHM: Classe d'exception de la génération des données
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MarketShareUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MarketShareUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MarketShareUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.AlertsInsertionsCreationsDataAccessException">
            <summary>
            Classe d'exception de la génération des données pour l'alerte mail des créations 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AlertsInsertionsCreationsDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AlertsInsertionsCreationsDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AlertsInsertionsCreationsDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Slogans.SloganDataAccess">
            <summary>
            Classe qui fournit les données concernant les Versions.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Slogans.SloganDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Obtient la liste des versions en fonction de l'univers sélectionné par le client.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>Liste des versions par produit et media(vehicle)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Slogans.SloganDataAccess.GetSQLQuery(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String)">
            <summary>
            Obtient la requête sql pour la liste des slogans
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idVehicle">Identifiant du média</param>
            <param name="beginingDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>requête sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Slogans.SloganDataAccess.GetSQLQueryForAPPM(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String)">
            <summary>
            Obtient la requête sql pour la liste des slogans de l'APPM
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idVehicle">Identifiant du média</param>
            <param name="beginingDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>requête sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Slogans.SloganDataAccess.GetFields(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String)">
            <summary>
            Obtient les champs de requêtes spécifiques à un média
            </summary>
            <param name="idVehicle">Identifiant du média</param>
            <param name="prefixeTable">Prefixe de la table de données</param>
            <returns> champs de requêtes </returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.PortofolioDetailMediaDataAccess">
            <summary>
            Détail du portefeuille d'un support
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDetailMediaDataAccess.GetDetailMedia(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Récupère la liste des publicités pour un média donné
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>		
            <returns>liste des publicités pour un média donné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDetailMediaDataAccess.GetDetailMedia(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Récupère la liste des publicités pour un média donné
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="code_ecran">code ecran</param>
            <param name="allPeriod">vrai si le détail des insertions concerne toute la période sélectionnée</param>
            <returns>liste des publicités pour un média donné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDetailMediaDataAccess.GetCommercialBreakForTvRadio(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Liste des codes ecrans pour la télévision et la radion
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">Identifiant vehicle</param>
            <param name="idMedia">identifiant media</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns>Liste des codes ecrans</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDetailMediaDataAccess.GetGenericDetailMedia(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String,System.String)">
            <summary>
            Récupère la liste des publicités pour un média donné
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>		
            <returns>liste des publicités pour un média donné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDetailMediaDataAccess.GetGenericDetailMedia(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Récupère la liste des publicités pour un média donné
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="code_ecran">code ecran</param>
            <param name="allPeriod">vrai si le détail des insertions concerne toute la période sélectionnée</param>
            <returns>liste des publicités pour un média donné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDetailMediaDataAccess.GetFieldsDetailMediaForTvRadio(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Champs pour le detail support
            </summary>
            <param name="idVehicle">Identifiant du media (vehicle)</param>
            <returns>SQL</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDetailMediaDataAccess.GetGroupByDetailMediaForTvRadio(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Group by
            </summary>
            <param name="idVehicle">identifiant vehicle</param>
            <returns>string conteant le group by</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDetailMediaDataAccess.GetOrderByDetailMedia(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean,System.Boolean)">
            <summary>
            Génère le order by pour le détail portefeuille
            </summary>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="allPeriod">vrai si le détail des insertions concerne toute la période sélectionnée</param>
            <returns>SQL</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDetailMediaDataAccess.GetFieldsDetailMedia(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String)">
            <summary>
            Champs
            </summary>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="mediaAgencyYear">Media Agency year</param>
            <returns>SQL</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.PortofolioDetailMediaDataAccess.GetProductData(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Récupère la liste produit de référence
            </summary>
            <param name="webSession">Session client</param>
            <returns>la liste produit de référence</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.CompetitorMediaPlanAlertDataAccess">
            <summary>
             Extraction des données d'alerte plan média concurentiel de la BD
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorMediaPlanAlertDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String)">
            <summary>
            Charge les données pour créer un plan média concurentiel d'UN vehicle
            	Assignation du nom de la table à attaquer et de l'unité à sélectionner
            	Construction et exécution de la requête
            </summary>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
            Lancée si aucune table ne correspond au vehicle,si l'unité n'est pas valide ou si une erreur Oracle est survenue
            </exception>
            <param name="webSession">Session du client</param>
            <param name="idVehicle">Identifiant du vehicle à traiter</param>
            <param name="beginingDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>Dataset contenant les données rapatriées de la base de données pour le vehicule considéré</returns>
            <remarks>
            Utilise les méthodes:
            	private static string getTable(DBClassificationConstantes.Vehicles.names idVehicle)
            	private static string getField(TNS.AdExpress.Constantes.Web.CustomerSessions.Unit unit)
            	public static string TNS.AdExpress.Web.Functions.SqlGenerator.getAnalyseCustomerProductRight(WebSession webSession,string tablePrefixe,bool beginByAnd)
            	public static string TNS.AdExpress.Web.Functions.SqlGenerator.getAnalyseCustomerMediaRight(WebSession webSession,string tablePrefixe,bool beginByAnd)
            	public string TNS.AdExpress.Web.Core.Sessions.WebSession.GetSelection(TreeNode univers, TNS.AdExpress.Constantes.Customer.Right.type level)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorMediaPlanAlertDataAccess.GetPluriMediaDataset(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Charge les données pour créer un plan média concurentiel pour chaque vehicle sélectionné dans la session
            sur la période spécifiée
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningDate">date de début de période au formazt YYYYMMDD</param>
            <param name="endDate">date de fin de période au formazt YYYYMMDD</param>
            <returns>Dataset contenant les données rapatriées de la base de données pour les vehicule sélectionné dans la session</returns>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
            Lancée en cas d'erreur sur un vehicle
            </exception>
            <remarks>
            Utilise les méthodes:
            	public string TNS.AdExpress.Web.Core.Sessions.WebSession.GetSelection(TreeNode univers, TNS.AdExpress.Constantes.Customer.Right.type level)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorMediaPlanAlertDataAccess.GetPluriMediaDataset(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les données pour créer un plan média concurentiel plurimédia à partir  des données 
            de la session d'un client
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Données chargées</returns>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
            Lancée en cas d'erreur
            </exception>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.CompetitorDataAccess">
            <summary>
            Extraction des données d'analyse concurrentielles
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String,System.String)">
            <summary>
            Charge les données pour créer une analyse concurrentielle d'UN vehicle
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <param name="beginingDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>Données de l'alerte concurrentielle</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorDataAccess.GetSynthesisData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String,System.String)">
            <summary>
            Charge les données de synthèse pour créer une analyse concurrentielle d'UN vehicle
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <param name="beginingDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>Données de l'alerte concurrentielle</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorDataAccess.GetSynthesisRequest(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Constantes.DB.TableType.Type)">
            <summary>
            Construction de la requête pour le charge les données de synthèse pour créer une analyse concurrentielle d'UN vehicle
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <param name="type">Type de la table à utiliser</param>
            <returns>Code SQL</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorDataAccess.GetGenericSynthesisData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Charge les données de synthèse pour créer une analyse concurrentielle d'UN vehicle
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <returns>Données de l'alerte concurrentielle</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorDataAccess.GetRequest(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Constantes.DB.TableType.Type)">
            <summary>
            Construit la requête pour charge les données pour créer une analyse concurrentielle d'UN vehicle
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <param name="type">Type de la table à utiliser</param>
            <returns>Requête de l'alerte concurrentielle</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorDataAccess.GetGenericData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Charge les données pour créer une analyse concurrentielle d'UN vehicle
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehicleName">Média à traiter</param>
            <returns>Données de l'alerte concurrentielle</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorDataAccess.GetMediaColumnDetailLevelList(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Charge les données pour recuperer une liste des supports pour le niveau de détail colonne
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Liste des supports</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.SupportPlanDataAccess">
            <summary>
            Manage the reuqests to the database for the module "Valorisation and efficiency by media"
            !!! Require to load the advertiser univers to study in the Current Univres Advertiser of the webSession
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SupportPlanDataAccess.GetData(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Int64,System.Int64,System.Int64)">
            <summary>
            
            </summary>
            <param name="dataSource">Data Source</param>
            <param name="webSession">User Session</param>
            <param name="dateBegin">Period beginning</param>
            <param name="dateEnd">Period end</param>
            <param name="idBaseTarget">Base target</param>
            <param name="idAdditionaleTarget">Addictionale target</param>
            <param name="idWave">Wave ID</param>
            <returns>DataSet containing data for the "Valorisation and efficiency by support plan"</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.SectorDataAverageDataAccess">
            <summary>
            This class is used to generate the datasets which are used in Sector Data Average.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SectorDataAverageDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
             Calculates and returns the dataset for the Sector Data Synthesis	 
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="dateBegin">Starting date</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">Base Target</param>
            <param name="additionalTarget">Additional Target</param>
            <returns>dataset for synthesis of APPM</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.SectorDataAverageDataAccess.GetPresenceDuration(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
             Calculates and returns the dataset for the Sector Data Synthesis	 
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="dateBegin">Starting date</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">Base Target</param>
            <param name="additionalTarget">Additional Target</param>
            <returns>dataset for synthesis of APPM</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.ResultData">
            <summary>
             Données servant à construire un Résultat (UI)
             </summary>
              <since>13/07/2006</since>
              <author>G. Facon</author>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ResultData._mediaPlanHTMLCode">
            <summary>
             Code HTML du calendrier d'action
             </summary>
              <since>13/07/2006</since>
              <author>G. Facon</author>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ResultData.#ctor">
            <summary>
            Constructeur
            </summary>
             <since>13/07/2006</since>
             <author>G. Facon</author>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ResultData.HTMLCode">
            <summary>
             Obtient ou définit le code HTML du calendrier d'action
             </summary>
              <since>13/07/2006</since>
              <author>G. Facon</author>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Selections.Medias.MediaPublicationDatesSystem">
            <summary>
            This class provides the façade to manipulate the hashtable containing the media along with their publication dates.
            The method GetNextPublicationDate returns the next publication date if present else returns 0.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.BusinessFacade.Selections.Medias.MediaPublicationDatesSystem._publications">
            <summary>
            The static hashtable which is accessable the whole application through GetNextPublicationDate
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.BusinessFacade.Selections.Medias.MediaPublicationDatesSystem._nextUpdate">
            <summary>
            The static date responsible for the update of the parution cache system
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Selections.Medias.MediaPublicationDatesSystem.Init">
            <summary>
            This method is used to initialize the hashtable containing media with their publication dates
            </summary>			
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Selections.Medias.MediaPublicationDatesSystem.GetNextPublicationDate(System.Int64,System.Int32)">
            <summary>
            This method is used to get the next publication date 
            </summary>
            <param name="idMedia">the id of the media whose publication date is to be returned</param>
            <param name="publicationDate">The publication date with respect to which the next date is obtained</param>
            <returns>return the next date if present else returns 0</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.PDVPlanUI">
            <summary>
            This class generates the HTML and Excel for the APPM PDV Plan.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PDVPlanUI.GetHTML(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            This method generates the HTML for the PDV Plan table.
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PDVPlanUI.GetExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Excel of PDVPlan APPM
            </summary>
            <param name="webSession">session client</param>
            <param name="dateBegin">Beginning Datet</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">base target</param>		
            <param name="additionalTarget">supplementary target</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.ErrorEventArgs">
            <summary>
            Argument d'une erreur survenue dans une page Web.
            Cette classe est à utiliser lorsque l'on crée un evènement OnError sur une page Web
            qui hérite de TNS.AdExpress.Web.UI.WebPage.
            <seealso cref="T:TNS.AdExpress.Web.UI.WebPage"/>
            </summary>
            <example>
            <code>
            try{
            	...
            }
            catch(System.Exception exc){
            	this.OnError(new TNS.AdExpress.Web.UI.ErrorEventArgs(this,exc,webSession));
            }
            </code>
            </example>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.ErrorEventArgs._exception">
            <summary>
            Exception lancée
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.ErrorEventArgs._webSession">
            <summary>
            Session du client
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.ErrorEventArgs._page">
            <summary>
            Page qui lance l'erreur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ErrorEventArgs.#ctor(System.Web.UI.Page,System.Exception,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructeur
            </summary>
            <param name="page">Page qui lance l'erreur</param>
            <param name="exception">Exception lancée</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.ErrorEventArgs.Sender">
            <summary>
            Obtient la page qui lance l'erreur
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.ErrorEventArgs.Error">
            <summary>
            Obtient l'Exception lancée
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.ErrorEventArgs.CustomerSession">
            <summary>
            Session du client
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.ErrorEventArgs.Item(TNS.AdExpress.Web.UI.ErrorEventArgs.argsName)">
            <summary>
            Accès aux arguments
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.ErrorEventArgs.argsName">
            <summary>
            Nom des arguements utilisé dans la classe TNS.AdExpress.Web.UI.ErrorEventArgs
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.ErrorEventArgs.argsName.sender">
            <summary>
            Page qui lance l'erreur
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.ErrorEventArgs.argsName.error">
            <summary>
            Exception lancée
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.ErrorEventArgs.argsName.custormerSession">
            <summary>
            Session du client
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.ProofRules">
            <summary>
            Obtient les résultats pour les  justificatifs presse
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.ProofRules.GetResultTable(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Obtient le tableau contenant l'ensemble des résultats
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <returns>Tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.ProofRules.GetProofFileData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Méthode pour le traitement des données d'une fiche justificative
            </summary>
            <param name="webSession">Session</param>
            <param name="idMedia">Identifiant du media</param>
            <param name="idProduct">Identifiant du produit</param>
            <param name="date">Date parution</param>
            <param name="page">Numéro de la page</param>
            <param name="dateMediaNum">Date de codification</param>
            <returns>DataTable contenant les données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.ProofRules.GetTableResultSize(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable)">
            <summary>
            Calcul la taille du tableau de résultats
            </summary>
            <param name="webSession">session du client</param>
            <param name="dt">table de données</param>
            <returns>nombre de ligne du tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.ProofRules.InitProofLine(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.WebResultUI.ResultTable,System.Int64)">
             <summary>
             Initialise un ligne de détail du tableau
             </summary>
            <param name="webSession">Session du client</param>
             <param name="tab">Tableau de résultat</param>
             <param name="iCurLine">Ligne courante</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.CompetitorAlertCreationsRules">
            <summary>
            Utilisée dans l'affichage des créations pour l'alerte concurrentielle
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorAlertCreationsRules.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorAlertCreationsRules.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.String,System.Int64,System.Int32)">
             <summary>
            Traitement des données de l'alerte concurentielle
             </summary>
             <param name="webSession">Session client</param>
             <param name="periodBegin">Début de période au format YYYYMMDD</param>
             <param name="periodEnd">Fin de période au format YYYYMMDD</param>
             <param name="idVehicle">Identifiant du média</param>
             <param name="idElement">Identifiant de l'element</param>
             <param name="level">Niveau</param>
             <returns>Tableau de données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorAlertCreationsRules.GetDataPress(System.Data.DataSet)">
            <summary>
            Génère un tableau de données d'insertions presses préformaté utilisables pour la couche UI:
            	["date","page","groupz","annonceur","produit","format","surface","couleur","prix","média","catégorie","support","visuel1,visuel2,..."]
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorAlertCreationsRules.GetDataTV(System.Data.DataSet)">
            <summary>
            Génère un tableau de données d'insertions TV préformaté utilisable pour la couche UI:
            	["date","groupe","annonceur","produit","top diffusion","durée","rang","durée de l'écran","nb de spot de l'écran","prix","média","catégorie","support","fichier spot tv","Code écran"] (ordre non représentatif)
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorAlertCreationsRules.GetDataRadio(System.Data.DataSet)">
            <summary>
            Génère un tableau de données d'insertions radio préformaté utilisable pour la couche UI:
            	["date",groupe","annonceur","produit","top diffusion","durée","rang","durée de l'écran","rang HAP","durée écran HAP","nb spots HAP","nb de spot de l'écran","prix","média","catégorie","support","fichier spot radio"] (ordre non représentatif)
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorAlertCreationsRules.GetDataOutDoor(System.Data.DataSet,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère un tableau de données d'insertions Publicité extérieure préformaté utilisable pour la couche UI:
            	["date","groupe","annonceur","produit","nombre de panneaux","format","type de réseau","réseau afficheur","prix","média","catégorie","support","fichier affiche publicitaire"] (ordre non représentatif)
            </summary>
            <param name="ds">Données à traiter en provenance de la BD</param>
            <param name="webSession">session du client</param>		
            <returns>Tableau d'objets contenant les données issues de la BD traitées</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.SynthesisRules">
            <summary>
            Provides formatting rules for APPM Synthesis
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.SynthesisRules.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Formats the date for APPM synthesis 
            </summary>
            <param name="webSession">clients session</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <param name="idProduct">ID of the product selected from the products dropdownList </param>
            <param name="mediaAgencyAccess">A flag that indicates whether the client has access to Media Agency or no</param>
            <returns>HTML string for the synthesis table</returns>		
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.SynthesisRules.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean,System.String,System.String)">
             <summary>
            	Get APPM synthesis data result for one Version
             </summary>
             <param name="webSession">clients session</param>
             <param name="dataSource">dataSource for creating Datasets </param>
             <param name="dateBegin">Beginning Date</param>
             <param name="dateEnd">Ending Date</param>
             <param name="baseTarget">Base target</param>
             <param name="additionalTarget">supplementary target</param>		
             <param name="mediaAgencyAccess">A flag that indicates whether the client has access to Media Agency or no</param>
            <param name="idVersion">ID Version</param>
            <param name="firstInsertionDate">First insertion date</param>
             <returns>HTML string for the synthesis table</returns>		
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.SynthesisRules.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean,System.Collections.ICollection)">
             <summary>
            	Get APPM synthesis data result for a List of Versions
             </summary>
             <param name="webSession">clients session</param>
             <param name="dataSource">dataSource for creating Datasets </param>
             <param name="dateBegin">Beginning Date</param>
             <param name="dateEnd">Ending Date</param>
             <param name="baseTarget">Base target</param>
             <param name="additionalTarget">supplementary target</param>		
             <param name="mediaAgencyAccess">A flag that indicates whether the client has access to Media Agency or no</param>
            <param name="versions">List of Versions ID</param>
             <returns>HTML string for the synthesis table</returns>		
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.AnalyseFamilyInterestPlanRules">
            <summary>
            Description résumée de AnalyseFamilyInterestPlanRules.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.AnalyseFamilyInterestPlanRules.InterestFamilyPlan(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64)">
             <summary>
             familles d'intérêts Plan APPM
             </summary>
             <param name="webSession">session client</param>
             <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="idWave">Identifiant de la vague</param>
             <param name="dateBegin">date de début</param>
             <param name="dateEnd">date de fin</param>	
             <param name="idBaseTarget">Identifiant de la cible de base</param>
             <param name="idAdditionalTarget">Identifiant de la cible sélectionnée</param>
             <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.AnalyseFamilyInterestPlanRules.GetFamilyInterestResultTable(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64)">
             <summary>
             familles d'intérêts Plan
             </summary>
             <param name="webSession">session client</param>
             <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="idWave">Identifiant de la vague</param>
             <param name="dateBegin">date de début</param>
             <param name="dateEnd">date de fin</param>	
             <param name="idBaseTarget">Identifiant de la cible de base</param>
             <param name="idAdditionalTarget">Identifiant de la cible sélectionnée</param>
             <returns>ResultTable</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.DetailSelectionScript">
            <summary>
            Fournit les fonctions pour la gestion des détails de séléction 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DetailSelectionScript.GenericDetailSelectionScript(System.Int32,System.Int32)">
            <summary>
             Fonction qui permet de générer le script pour la gestion du Drag and Drop
            </summary>
            <param name="nbColumnItemList">Nombre de colonnes dans la liste</param>
            <param name="nbTrashItemList">Nombre d'éléments dans la poubelle</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DetailSelectionScript.DragAndDropScript(System.Collections.ArrayList)">
            <summary>
            Permet de generer le script qui instancie les objets Draggable
            </summary>
            <param name="columnItemList">Liste des colonnes</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DetailSelectionScript.DragAndDropPostBackScript(System.Collections.ArrayList,System.Collections.ArrayList,System.Int32)">
            <summary>
            Permet de generer le script qui instancie les objets Draggable après un postback
            </summary>
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.TvSponsorshipRulesException">
            <summary>
            Classe d'exception de la génération des données pour l'analyse plan média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.TvSponsorshipRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.TvSponsorshipRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.TvSponsorshipRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MyAdExpressDataAccessException">
            <summary>
            Base de données Mon AdExpress
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MyAdExpressDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MyAdExpressDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MyAdExpressDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaSelectionWebControlException">
            <summary>
            WebControl: Sélection des media
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaSelectionWebControlException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaSelectionWebControlException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaSelectionWebControlException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaPlanDataAccessException">
            <summary>
            DA: Classe d'exception de l'obtention des données pour les plans média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.LocationPlanTypesUIException">
            <summary>
            IHM: APPM Emplacement du plan
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.LocationPlanTypesUIException.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.LocationPlanTypesUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.LocationPlanTypesUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.DashBoardUIException">
            <summary>
            DashBoardDataAccessException  thrown whenever an error occured while generating UI for dashboard module
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardUIException.#ctor">
            <summary>
            Constructeur 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.DashBoardRulesException">
            <summary>
            DashBoardRulesException  thrown whenever an error occured while processing data for DashBoard module
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardRulesException.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardRulesException.#ctor(System.String)">
            <summary>
            Constructeur 
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.DashBoardMediaSelectionException">
            <summary>
            DashBoardMediaSelectionException  thrown whenever an error occured while selecting media for dashboard module
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardMediaSelectionException.#ctor">
            <summary>
             Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardMediaSelectionException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardMediaSelectionException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CountryListDataAccessException">
            <summary>
            Gestion des exceptions de la classe d'accès aux données des pays
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CountryListDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CountryListDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CountryListDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CompetitorRulesException">
            <summary>
            Classe d'exception de la génération des données pour l'analyse plan média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAnalysisRulesException">
            <summary>
            Classe d'exception de la classe metier pour le plan média concurentiel
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAnalysisRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAnalysisRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAnalysisRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanRulesException">
            <summary>
            AnalyseFamilyInterestPlanRulesException thrown whenever an error occured while processing data for Interest Plan : APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AnalyseFamilyInterestPlanRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Products.ProductListDataAccess">
            <summary>
            This class is used to construct the list of the selected products whose results can be seen in the APPM synthesis
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.ProductListDataAccess.getProductList(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            This method constructs the list of the products to be shown in the synthesis product dropdownlist
            </summary>
            <param name="webSession">webSession of the client</param>	
            <returns>returns the dataset containing the selected products</returns>		
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.FilesItemDataAccess">
            <summary>
            Classe qui récupère les informations fichier resultats
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.FilesItemDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.String)">
            <summary>
             Obtient la liste des fichiers PDF 
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dataSource">DataSource pour la creation de DataSet</param>
            <param name="typeList">Liste des types possibles pour les fichiers résultats</param> 
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionPressAPPMUI">
            <summary>VersionPressAPPMUI provide a control to render a version in the APPM module</summary>
              <author>gragneau</author>
              <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionPressAPPMUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.VersionItem)">
            <summary>
            Constructor
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="version">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionPressAPPMUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem)">
            <summary>
            Constructor with exportVersion
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="exportAPPMVersion">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionPressAPPMUI.RenderSynthesis(System.Text.StringBuilder)">
            <summary>Render Version SYnthesis</summary>
              <author>gragneau</author>
              <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.CompetitorMediaPlanAlertUI">
            <summary>
            Construit l'interface utilisateur pour les alertes plan media ou les zooms plan media
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorMediaPlanAlertUI.GetMediaPlanAlertUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Génère le code HTML pour afficher un calendrier d'action détaillé en jour sur UNE période.
            Elles se base sur un tableau contenant les données
            tab vide : message "Pas de données" + bouton retour
            tab non vide:
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Javascripts (ouverture du détail des insertions et ouverture/fermeture des calendriers d'actions)
            	Génération du code HTML des entêtes de colonne
            	Génération du code HTML des périodes (période suivante, période courante, période suivante, intitulés d'une unité de période
            	Génération du code HTML du calendrier d'action
            </summary>
            <param name="page">Page qui affiche le Plan Média</param>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <param name="zoomDate">Période à prendre en compte (un mois ou une semaine)</param>
            <param name="url">Lien vers la pge elle-même. Permet de gérer les flèches "Période suivante", "Période précédente"</param>
            <returns>Code Généré</returns>
            <remarks>
            Utilise les méthodes:
            	public static string TNS.AdExpress.Web.Functions.Script.OpenCreation()
            	public static string TNS.AdExpress.Web.Functions.Script.DynamicMediaPlan()
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorMediaPlanAlertUI.GetMediaPlanAlertUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code HTML pour afficher un calendrier d'action détaillé en jour entre les dates de la session.
            Elles se base sur un tableau contenant les données
            tab vide : message "Pas de données" + bouton retour
            tab non vide:
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Javascripts (ouverture du détail des insertions et ouverture/fermeture des calendriers d'actions)
            	Génération du code HTML des entêtes de colonne
            	Génération du code HTML des périodes (Libellé du mois, intitulés d'une unité de période)
            	Génération du code HTML du calendrier d'action
            </summary>
            <param name="page">Page qui affiche le Plan Média</param>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <returns>Code Généré</returns>
            <remarks>
            Utilise les méthodes:
            	public static string TNS.AdExpress.Web.Functions.Script.OpenCreation()
            	public static string TNS.AdExpress.Web.Functions.Script.DynamicMediaPlan()
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorMediaPlanAlertUI.GetMediaPlanAlertExcelUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Génère le code HTML pour Ms Excel pour afficher un calendrier d'action entre deux périodes respectant le type de période spécifié dans la session.
            Elles se base sur un tableau contenant les données. Cette méthode sert aussi bien pour les zooms que pour les alertes
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Rappel des paramètres de périodes 
            	Génération du code HTML des périodes (Libellé du mois, intitulés d'une unité de période)
            	Génération du code HTML du calendrier d'action
            </summary>
            <returns>Code Généré</returns>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <param name="periodBeginning">Période de début du calendrier d'action</param>
            <param name="periodEnd">Période de fin du calendrier d'action</param>
            <returns>Code Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.CompetitorMediaPlanAlertUI.IsBelongToTotalLines(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Verifei si la ligne fait partie de celles des totaux
            </summary>
            <param name="stringValue">valeur</param>
            <param name="premier">indique si c'est la première ligne</param>
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.ExcelWebPage">
            <summary>
            Page utilisée dans les exports excels
            It has methods which can be called to make an excel header in any excel file by sending the proper parameters
            to the proper method.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.ExcelWebPage._cssKeys">
            <summary>
            Liste des clés Css
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeader_ORIGINAL(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Génère l'en tête html pour le fichier Excel des modules
            This method is the one which is the main method and is called by other overloaded methods.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="levelDetail">boolean that indicates that whether we need to display details or not, details can be in the format
            1:Produites détaillés par:
            2:Média détaillés par:
            3:Unité détaillés par:
            </param>
            <param name="units">boolean that indicates that whether we need units or not</param>
            <param name="resultType">boolean that indicates that whether we need to display result type or not</param>
            <param name="insert">boolean that indicates that whether we need to show insert for press or not</param>
            <param name="media">boolean that indicates that whether we need to display media or not</param>
            <param name="title">an optional title string to display the title</param>
            <param name="dateFormatText">To display the date in the format like jan 2004-dec 2005</param>
            <param name="periodBeginning">takes the beginnig date</param>
            <param name="periodEnd">takes the ending date</param>
            <returns>Code HTML pour en tête de fichier Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetLogo">
            <summary>
            Genere le logo TNS pour les export excel
            </summary>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetAppmLogo">
            <summary>
            Genere le logo TNS pour les export excel
            </summary>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetFooter(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le pied de page html pour les exports Excel
            </summary>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeader(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Génère l'en tête html pour les exports Excel
            </summary>
            <param name="webSession">Session du client</param>
            <param name="levelDetail">Booléen pour l'affichage du niveau de détail</param>
            <param name="units">Booléen Unité</param>
            <param name="resultType">Booléen Type de résultat</param>
            <param name="insert">Booléen Encart</param>
            <param name="media">Booléen Support</param>
            <param name="dateFormatText">Booléen pour afficher la date en format texte</param>
            <param name="periodBeginning">Date de début</param>
            <param name="periodEnd">Date de fin</param>
            <param name="title">Titre</param>
            <param name="zoomDate">Date de zoom</param>
            <param name="periodDisplayLevel">MediaSchedulePeriod</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetModuleName(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Nom du module
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetResultName(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Navigation.Module)">
            <summary>
            Nom du résultat
            </summary>
            <param name="webSession">Session du client</param>
            <param name="currentModule">Module</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetDateSelected(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Navigation.Module,System.Boolean,System.String,System.String)">
            <summary>
            Dates sélectionnées
            </summary>
            <param name="webSession">Session du client</param>
            <param name="currentModule">Module en cours</param>
            <param name="dateFormatText">Booléen date en format texte</param>
            <param name="periodBeginning">Date de début</param>
            <param name="periodEnd">Date de fin</param>
            <returns>HTML</returns>
            <remarks>Date format to be like for example novembre 2004 - janvier 2005</remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetZoomDate(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Int32)">
            <summary>
            Generate html code for zoom period detail
            </summary>
            <param name="webSession">User Session</param>
            <param name="zoomDate">Date de zoom</param>
            <param name="periodDisplayLevel">Niveau de détail de l'affichage des périodes</param>
            <returns>Html code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetStudyDate(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Generate html code for study period detail
            </summary>
            <param name="webSession">User Session</param>
            <returns>Html code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetUnitSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Unité
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetVehicleSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Media sélectionné
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetProductSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Produits sélectionnés
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetMediaLevelDetail(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Niveau de détail support (Média détaillé par)
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetGenericMediaLevelDetail(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Niveau de détail support (Médias détaillés par :)
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetGenericProductLevelDetail(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Niveau de détail produit (Produits détaillés par :)
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetProductLevelDetail(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Niveau de détail produit (Produit détaillé par)
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetInsetSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Sélection encart
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetNewInMedia(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Nouveau support dans :
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetCompetitorMediaSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Support sélectionnés pour les concurrents
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetComparativeStudy(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Etude comparative
            </summary>
            <param name="webSession">Session client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetFormatSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Format sélectionné
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetDaySelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Jour nommé sélectionné
            </summary>
            <param name="webSession">Session client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetTimeSlotSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Tranche horaire sélectionnée
            </summary>
            <param name="webSession">Session client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetTargetSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Tranche horaire sélectionnée
            </summary>
            <param name="webSession">Session client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetBlankLine">
            <summary>
            Ligne séparatrice
            </summary>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetProductSelectedForCreationsPopUp(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int32)">
            <summary>
            Affichage du produit sélectionné dans la pop up des insertions selon le niveau choisi
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idElement">identifiant de l'élément</param>
            <param name="level">Niveau de l'élément sélectionné</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetMediaSelectedForCreationsPopUp(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Specialized.ListDictionary)">
            <summary>
            Détail de sélection des insertions (pop up plan media, alerte plan media)
            </summary>
            <param name="webSession">Session du client</param>
            <param name="mediaImpactedList">Liste des medias impactés</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetSloganSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Version sélectionnée
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeaderForMediaPlanPopUp(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.String,System.String)">
            <summary>
            Génère l'en tête html pour le fichier Excel de la pop up plan média
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dateFormatText">Date en format texte</param>
            <param name="periodBeginning">Date de début</param>
            <param name="periodEnd">Date de fin</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeaderForMediaPlanPopUp(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.String,System.String,System.String,System.Int32)">
            <summary>
            Génère l'en tête html pour le fichier Excel de la pop up plan média
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dateFormatText">Date en format texte</param>
            <param name="periodBeginning">Date de début</param>
            <param name="periodEnd">Date de fin</param>
            <param name="zoomDate">Date de zoom</param>
            <param name="periodDisplayLevel">Niveau de détail de l'affichage des périodes</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetMediaSelectedForMediaPlanPopUp(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Affichage des supports sélectionnés dans la pop up plan média
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetProductSelectedForMediaPlanPopUp(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Affichage des produits sélectionnés dans la pop up plan média
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeaderForAdnettrackMediaPlanPopUp(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.String,System.String)">
            <summary>
            Génère l'en tête html pour le fichier Excel de la pop up plan média AdNetTrack
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dateFormatText">Date en format texte</param>
            <param name="periodBeginning">Date de début</param>
            <param name="periodEnd">Date de fin</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetAdNetTrackMediaLevelDetail(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Niveau de détail support pour AdNetTrack
            </summary>
            <param name="webSession">Session du client</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeaderForCreationsPopUp(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.String,System.String,System.Int64,System.Int32)">
            <summary>
            Génère l'en tête html pour le fichier Excel de la pop up des insertions
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dateFormatText">Date en format texte</param>
            <param name="periodBeginning">Date de début</param>
            <param name="periodEnd">Date de fin</param>
            <param name="idElement">identifiant de l'élément</param>
            <param name="level">Niveau de l'élément sélectionné</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeaderForCreationsPopUpFromMediaPlan(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.String,System.String,System.Collections.Specialized.ListDictionary,System.Int32)">
            <summary>
            Génère l'en tête html pour le fichier Excel de la pop up des insertions
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dateFormatText">Date en format texte</param>
            <param name="periodBeginning">Date de début</param>
            <param name="periodEnd">Date de fin</param>
            <param name="mediaImpactedList">Liste des medias impactés</param>
            <param name="idVehicle">Identifiant du media sélectionné</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeaderForCreationsPopUpFromPortofolio(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Génère l'en tête html pour le fichier Excel de la pop up des insertions
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dateFormatText">Date en format texte</param>
            <param name="periodBeginning">Date de début</param>
            <param name="periodEnd">Date de fin</param>
            <param name="idVehicle">Identifiant du media sélectionné</param>
            <param name="idMedia">Identifiant du support</param>
            <param name="allPeriod">Booléen pour préciser si nous avons toute la période</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeaderForCreationsPopUpFromPortofolio(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            Génère l'en tête html pour le fichier Excel de la pop up des insertions
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dateFormatText">Date en format texte</param>
            <param name="periodBeginning">Date de début</param>
            <param name="periodEnd">Date de fin</param>
            <param name="idVehicle">Identifiant du media sélectionné</param>
            <param name="idMedia">Identifiant du support</param>
            <param name="allPeriod">Booléen pour préciser si nous avons toute la période</param>
            <param name="nameDay">Jour nommé en radio tv</param>
            <param name="codeEcran">Code écran en radio tv</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeader(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Génère l'en tête html pour le fichier Excel des modules
            </summary>
            <param name="webSession">Session du client</param>
            <param name="levelDetail">boolean that indicates that whether we need to display details or not, details can be in the format
            1:Produites détaillés par:
            2:Média détaillés par:
            3:Unité détaillés par:
            </param>
            <param name="units">boolean that indicates that whether we need units or not</param>
            <param name="resultType">boolean that indicates that whether we need to display result type or not</param>
            <returns>Code HTML pour en tête de fichier Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeader(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Génère l'en tête html pour le fichier Excel des modules
            </summary>
            <param name="webSession">Session du client</param>
            <param name="levelDetail">boolean that indicates that whether we need to display details or not, details can be in the format
            1:Produites détaillés par:
            2:Média détaillés par:
            3:Unité détaillés par:
            </param>
            <param name="units">boolean that indicates that whether we need units or not</param>
            <param name="resultType">boolean that indicates that whether we need to display result type or not</param>
            <param name="insert">boolean that indicates that whether we need to show insert for press or not</param>
            <param name="title">an optional title string to display the title</param>
            <returns>Code HTML pour en tête de fichier Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeader(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Génère l'en tête html pour le fichier Excel des modules
            </summary>
            <param name="webSession">Session du client</param>
            <param name="levelDetail">boolean that indicates that whether we need to display details or not, details can be in the format
            1:Produites détaillés par:
            2:Média détaillés par:
            3:Unité détaillés par:</param>
            <param name="units">boolean that indicates that whether we need units or not</param>
            <param name="resultType">boolean that indicates that whether we need to display result type or not</param>
            <param name="title">an optional title string to display the title</param>
            <returns>Code HTML pour en tête de fichier Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeader(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Génère l'en tête html pour le fichier Excel des modules
            </summary>
            <param name="webSession">Session du client</param>
            <param name="title">an optional title string to display the title</param>
            <returns>Code HTML pour en tête de fichier Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeader(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Boolean)">
            <summary>
            Génère l'en tête html pour le fichier Excel des modules
            </summary>
            <param name="webSession">Session du client</param>
            <param name="units">boolean that indicates that whether we need units or not</param>
            <param name="dateFormatText">To display the date in the format like jan 2004-dec 2005</param>
            <returns>Code HTML pour en tête de fichier Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeader(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Génère l'en tête html pour le fichier Excel des modules
            </summary>
            <param name="webSession">Session du client</param>
            <param name="units">boolean that indicates that whether we need units or not</param>
            <param name="dateFormatText">To display the date in the format like jan 2004-dec 2005</param>
            <param name="zoomDate">Date de zoom</param>
            <param name="periodDisplayLevel">Niveau de détail de l'affichage des périodes</param>
            <returns>Code HTML pour en tête de fichier Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeader(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.String,System.String)">
            <summary>
            Génère l'en tête html pour le fichier Excel des modules
            </summary>
            <param name="webSession">Session du client</param>
            <param name="units">boolean that indicates that whether we need units or not</param>
            <param name="periodBeginning">takes the beginnig date</param>
            <param name="periodEnd">takes the ending date</param>
            <returns>Code HTML pour en tête de fichier Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetExcelHeader(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Génère l'en tête html pour le fichier Excel des modules
            </summary>
            <param name="webSession">Session du client</param>
            <param name="levelDetail">boolean that indicates that whether we need to display details or not, details can be in the format
            1:Produites détaillés par:
            2:Média détaillés par:
            3:Unité détaillés par:
            </param>
            <param name="units">boolean that indicates that whether we need units or not</param>
            <param name="resultType">boolean that indicates that whether we need to display result type or not</param>
            <param name="media">boolean that indicates that whether we need to display media or not</param>
            <param name="dateFormatText">To display the date in the format like jan 2004-dec 2005</param>
            <param name="title">an optional title string to display the title</param>
            <returns>Code HTML pour en tête de fichier Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.StringTypeResult(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
             Calculates and Returns the Result type which was selected
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Returns resultType selected string</returns>	
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.StringMediaSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Calculates and returns the vehicle that is being selected
            </summary>
            <param name="webSession">Session of the client</param>
            <returns>Returns the selected vehicle string</returns>	
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.StringLevelMedia(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Calculates and returns the detail media that is being selected
            </summary>
            <param name="webSession">Session of the client</param>
            <returns>Returns the detail media string</returns>	
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.IsSelectionProductSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Vérifie si produits sélectionnés
            </summary>
            <param name="webSession">session du client</param>
            <returns>vrai si produis sélectionnés</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.AddCssStyles(System.Collections.ArrayList)">
            <summary>
            Ajoute la liste des clés des styles Css
            </summary>
            <param name="cssKeys"> liste des clés des styles Css</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.GetNextUrlFromMenu">
            <summary>
            Does not do anythong as from its page, there is no redirection
            </summary>
            <returns>string.empty</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.ExcelWebPage.ExcelWebPage_Load(System.Object,System.EventArgs)">
            <summary>
            Page Loading
            </summary>
            <param name="sender">Source Object</param>
            <param name="e">Arguments</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.DynamicRules">
            <summary>
            Traitements métiers des analyses dynamiques
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.GetPortofolio(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Obtient le tableau de résultat du portefeuille d'une analyse dynamique
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningPeriod">Date de début</param>
            <param name="endPeriod">Date de fin</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.GetLoyal(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Obtient le tableau de résultat des fidèles d'une analyse dynamique
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningPeriod">Date de début</param>
            <param name="endPeriod">Date de fin</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.GetLoyalDecline(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Obtient le tableau de résultat des fidèles en baisses d'une analyse dynamique
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningPeriod">Date de début</param>
            <param name="endPeriod">Date de fin</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.GetLoyalRise(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Obtient le tableau de résultat des fidèles en hausse d'une analyse dynamique
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningPeriod">Date de début</param>
            <param name="endPeriod">Date de fin</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.GetWon(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Obtient le tableau de résultat des gagnés d'une analyse dynamique
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningPeriod">Date de début</param>
            <param name="endPeriod">Date de fin</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.GetLost(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Obtient le tableau de résultat des perdu d'une analyse dynamique
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningPeriod">Date de début</param>
            <param name="endPeriod">Date de fin</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.GetSynthesis(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Obtient une présentation synthétique, sous forme de tableau, du nombre d’éléments produits Fidèles
            , Fidèles en baisse, Fidèles en développement, Gagnés, Perdus pour le module Analyse dynamique.
            </summary>
            <remarks>
            Utilise les méthodes :
            	- DynamicDataAccess.GetSynthesisData(webSession,vehicleName, beginningPeriod, endPeriod,beginningPeriodN1, endPeriodN1) : obtient les données à traiter.
            	- GetProductActivity(object[,] tabResult,DataTable dt,int indexLineProduct,string expression,string filterN,string filterN1) : Obtient l'activité publicitaire d'un produit.	
            </remarks>
            <param name="webSession">Session du client</param>
            <param name="beginningPeriodDA">Date de début</param>
            <param name="endPeriodDA">Date de fin</param>		
            <returns>Tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.InitIndexAndValues(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.SelectionGroup[],TNS.AdExpress.Web.Common.Results.SelectionSubGroup[],System.Collections.Hashtable,System.Collections.Hashtable,System.String@,System.Int32@,System.Data.DataTable)">
            <summary>
            Initialisation des tableaux d'indexes et valeurs sur les groupes de séléection et médias
            </summary>
            <param name="webSession">Session du client</param>
            <param name="groupMediaTotalIndex">(out) Tableau d'indexes des groupes de sélection</param>
            <param name="subGroupMediaTotalIndex">Liste des index des sous groupes de sélection</param>
            <param name="mediaIndex">(out Tableau d'indexes des médias</param>
            <param name="mediaListForLabelSearch">(out)Liste des codes des médias</param>
            <param name="maxIndex">(out)Index des colonnes maximum</param>
            <param name="mediaEvolIndex">Tableaux d'index pour les évols</param>
            <param name="dtMedia">Liste des média avec le niveau de détail colonne correspondant</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.GetPreformatedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.SelectionGroup[],TNS.AdExpress.Web.Common.Results.SelectionSubGroup[],System.Collections.Hashtable,System.Collections.Hashtable,System.Int32@,System.Int64@,System.String,System.String,System.String@)">
            <summary>
            Obtient le tableau de résultat préformaté pour une alerte Concurrentielle
            </summary>
            <param name="webSession">Session du client</param>
            <param name="groupMediaTotalIndex">Liste des index des groupes de sélection</param>
            <param name="subGroupMediaTotalIndex">Liste des index des sous groupes de sélection</param>
            <param name="mediaIndex">Liste des index des médias</param>
            <param name="nbCol">Nombre de colonnes du tableau de résultat</param>
            <param name="nbLineInNewTable">(out) Nombre de ligne du tableau de résultat</param>
            <param name="beginningPeriod">Date de début</param>
            <param name="endPeriod">Date de fin</param>
            <param name="mediaEvolIndex">Liste des index des evols médias</param>
            <param name="mediaListForLabelSearch">(out)Liste des codes des médias</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.GetResultTable(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int64,TNS.AdExpress.Web.Common.Results.SelectionGroup[],TNS.AdExpress.Web.Common.Results.SelectionSubGroup[],System.Collections.Hashtable,System.Collections.Hashtable,System.String,System.Int32)">
            <summary>
            Création du ResutTable
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tabData">Tableau contenant les données</param>
            <param name="nbLineInTabData">Nombre de ligne du tableau</param>
            <param name="groupMediaTotalIndex">Groupe de media</param>
            <param name="subGroupMediaTotalIndex">Liste des sous groupes de sélection</param>
            <param name="mediaIndex">Index des medias dans le tableau</param>
            <param name="mediaEvolIndex">Index des evols des media</param>
            <param name="mediaListForLabelSearch">Liste des identifiants des media</param>
            <param name="nbUnivers">Nombre d'univers</param>
            <returns>Résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.GetResultTableOld(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int64,TNS.AdExpress.Web.Common.Results.SelectionGroup[],System.Collections.Hashtable,System.Collections.Hashtable,System.String,System.Int32)">
            <summary>
            Formattage d'un tableau de résultat à partir d'un tableau de données
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tabData">Table de données</param>
            <param name="nbLineInTabData">Nombre de ligne dans le tableau</param>
            <param name="groupMediaTotalIndex">Liste des groupes de sélection</param>
            <param name="mediaIndex">Liste des Média</param>
            <param name="mediaListForLabelSearch">Liste des médias</param>
            <param name="nbUnivers">Nombre d'univers</param>
            <param name="mediaEvolIndex">Index pour les évol</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.GetNbLineFromPreformatedTableToResultTable(System.Object[0:,0:])">
            <summary>
            Obtient le nombre de ligne du tableau de résultat à partir d'un tableau préformaté
            </summary>
            <param name="tabData">Tableau préformaté</param>
            <returns>Nombre de ligne du tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.GetAdvertiserColumnIndex(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Détermine la colonne du détail annonceur
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Index de la colonne</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.IsComparativeDateLine(System.Int64,System.Int64,System.Int64)">
            <summary>
            Indique si une date numérique appartient à la période comparative ou non
            </summary>
            <param name="dateToCompare">Date étudiée</param>
            <param name="beginningDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>True si la date appartient à la période comparative false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.DynamicRules.GetProductActivity(TNS.FrameWork.WebResultUI.ResultTable,System.Data.DataTable,System.Int64,System.String,System.String,System.String)">
            <summary>
            Obtient l'activité publicitaire d'un produit
            </summary>
            <param name="tabResult">Tableau de résultats</param>
            <param name="dt">table de données</param>
            <param name="indexLineProduct">index ligne produit</param>
            <param name="expression">expression de calcul</param>
            <param name="filterN">filtre année N</param>
            <param name="filterN1">filtre année N-1</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataSeasonalityRules">
            <summary>
            Description résumée de SectorDataSeasonalityRules.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataSeasonalityRules.GetSeasonalityPreformatedData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64)">
             <summary>
             Seasonality Plan Sector Rules
             </summary>
             <param name="webSession">session client</param>
             <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="idWave">Identifiant de la vague</param>
             <param name="dateBegin">date de début</param>
             <param name="dateEnd">date de fin</param>	
             <param name="idBaseTarget">Identifiant de la cible de base</param>
             <param name="idAdditionalTarget">Identifiant de la cible sélectionnée</param>
             <returns>DataTable</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataSeasonalityRules.GetSeasonalityResultTable(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int64,System.Int32,System.Int32,System.Int64,System.Int64)">
             <summary>
             Seasonality Plan Sector Rules
             </summary>
             <param name="webSession">session client</param>
             <param name="dataSource">dataSource pour la creation de Dataset </param>
            <param name="idWave">Identifiant de la vague</param>
             <param name="dateBegin">date de début</param>
             <param name="dateEnd">date de fin</param>	
             <param name="idBaseTarget">Identifiant de la cible de base</param>
             <param name="idAdditionalTarget">Identifiant de la cible sélectionnée</param>
             <returns>ResultTable</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.Text">
            <summary>
            Fonction sur les chaines de caractères
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Text.SuppressAccent(System.String)">
            <summary>
            Replace accuented caracters by the non accentued one
            </summary>
            <param name="text">String to process</param>
            <returns>String without accent</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.SQLGenerator">
            <summary>
            Générateur de code SQL
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetAdNetTrackMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Média pour les plan media AdNetTrack.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature support.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAnalyseCustomerMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Média.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature support.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAnalyseCustomerProductRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Produit.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature produit.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getClassificationCustomerProductRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère les droits clients Produit.
            Cette fonction est à utiliser si la nomenclature est à plat dans la requête.
            Les noms des tables sont:
               - sector: sc
               - subsector: ss
               - group_:gr
               - segment: sg
            Les préfixes sont définis dans TNS.AdExpress.Constantes.DB.Tables
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getClassificationCustomerProductRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Produit.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="sectorPrefixe">Préfixe de la table sector</param>
            <param name="subsectorPrefixe">Préfixe de la table subsector</param>
            <param name="groupPrefixe">Préfixe de la table group_</param>
            <param name="segmentPrefixe">Préfixe de la table segment</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getClassificationCustomerProductRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Produit ( familles ) .
            </summary>
            <param name="webSession">Session du client</param>
            <param name="sectorPrefixe">Préfixe de la table sector</param>		
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getClassificationCustomerRecapMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Produit.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature produit.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getClassificationCustomerRecapMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère les droits clients Media.
            Cette fonction est à utiliser si la nomenclature est à plat dans la requête.				
            Les préfixes sont définis dans TNS.AdExpress.Constantes.DB.Tables
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getClassificationCustomerRecapMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Génère les droits media clients .
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehiclePrefixe">Préfixe de la table vehicle (media)</param>
            <param name="categoryPrefixe">Préfixe de la table category</param>
            <param name="mediaPrefixe">Préfixe de la table media (support)</param>		
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAccessVehicleList(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère la condition contenant la liste des identifiants vehicles accessibles
            </summary>
            <remarks>Un vehicle est accessible si au moins un vehicle une categorie au un support est ouvert</remarks>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table contenant toute la nomenclature</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getClassificationCustomerMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.Boolean)">
            <summary>
            Génère les droits media clients .
            </summary>
            <param name="webSession">Session du client</param>		
            <param name="categoryPrefixe">Préfixe de la table interest_center</param>
            <param name="mediaPrefixe">Préfixe de la table media (support)</param>		
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getClassificationCustomerMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits media clients .
            </summary>
            <param name="webSession">Session du client</param>		
            <param name="categoryPrefixe">Préfixe de la table category</param>	
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getShortMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients support
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature
            support limitée aux niveaux vehicle > category
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getShortMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère les droits clients Media limités aux niveaux vehicle > category.
            Cette fonction est à utiliser si la nomenclature est à plat dans la requête.				
            Les préfixes sont définis dans TNS.AdExpress.Constantes.DB.Tables
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getShortMediaRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Génère les droits media clients limités aux niveaux vehicle > category.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="vehiclePrefixe">Préfixe de la table vehicle (media)</param>
            <param name="categoryPrefixe">Préfixe de la table category</param>
            <param name="mediaPrefixe">Préfixe de la table media (support)</param>		
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAnalyseCustomerAdvertiserRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère les droits clients Annonceurs.
            Cette fonction est à utiliser si la nomenclature annonceurs est à plat.
            Les préfixes de tables utilisées sont ceux définis dans les constantes 
            TNS.AdExpress.Constantes.DB.Tables
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAnalyseCustomerAdvertiserRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Annonceurs.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="advertiserPrefixe">Préfixe de la table contenant le niveau annonceur</param>
            <param name="holdingPrefixe">Préfixe de la table contenant le niveau hoding</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAnalyseCustomerAdvertiserRight(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Génère les droits clients Annonceurs.
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature annonceurs.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAnalyseCustomerMediaSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            !!!! Non Développé, ne pas utiliser !!!!
            Génère le code SQL correpondant à la sélection du client
            Cette fonction est à utiliser si une même table contient tous les identifiants de la nomenclature support.
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table qui contient les données</param>
            <param name="beginByAnd">True si le bloc doit commencer par un AND, false sinon</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetRecapMediaSelection(System.String,System.String,System.Boolean)">
            <summary>
            sélection  média pour analyse sectorielle
            </summary>
            <param name="CategoryAccessList">catégories en accès</param>
            <param name="MediaAccessList">supports en accès</param>
            <param name="beginbyand">vrai si commence par "and"</param>
            <returns>sélection média</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetRecapMediaSelection(System.String,System.String,System.String,System.Boolean)">
            <summary>
            sélection  média pour analyse sectorielle
            </summary>
            <param name="CategoryAccessList">catégories en accès</param>
            <param name="MediaAccessList">supports en accès</param>
            <param name="indexSubQuery">index de la sous requête</param>
            <param name="beginbyand">vrai si commence par "and"</param>
            <returns>sélection média</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetAnalyseCustomerProductSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Génère les sélections produits clients .
            </summary>
            <param name="webSession">session du client</param>
            <param name="holdingCompanyPrefixe">prefixe groupe de sociétés</param>
            <param name="advertiserPrefixe">prefixe annonceur</param>
            <param name="branPrefixe">prefixe marque</param>
            <param name="productPrefixe">prefixe produit</param>
            <param name="sectorPrefixe">prefixe famille</param>
            <param name="subsectorPrefixe">prefixe classe</param>
            <param name="groupPrefixe">prefixe groupe</param>
            <param name="beginByAnd">vrai si la requete commence par "And"</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetAnalyseCustomerProductSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Génère les sélections produits clients .
            </summary>
            <param name="webSession">session du client</param>
            <param name="advertiserPrefixe">prefixe annonceur</param>
            <param name="branPrefixe">prefixe marque</param>
            <param name="productPrefixe">prefixe produit</param>
            <param name="beginByAnd">vrai si la requete commence par "And"</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetSectorList(System.String,System.String,System.String)">
            <summary>
            Retourne la liste des familles pour une sélection de produits dans les Recap.
            une variété ou un groupe sélectionné
            </summary>
            <param name="recapTableName">table recap</param>
            <param name="GroupAccessList">liste des groupes</param>
            <param name="SegmentAccessList">liste des variétés</param>		
            <returns>liste des familles</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetRecapProductSelection(TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Sélection produit pour analyse sectorielles
            </summary>
            <param name="comparisonCriterion">critère de comparaison (total univers, famille ou marché)</param>
            <param name="recapTableName">nom table de données</param>
            <param name="indexSubQuery">index de la sous requête</param>
            <param name="GroupAccessList">groupes en accès</param>
            <param name="GroupExceptionList">groupes en exceptions</param>
            <param name="SegmentAccessList">variétés en accès</param>
            <param name="SegmentExceptionList">variétés en exception</param>
            <param name="AdvertiserAccessList">annonceurs en accès</param>
            <param name="RefenceOrCompetitorAdvertiser">vrai si annonceurs concurrents ou concurrents</param>
            <param name="beginByAnd">Vrai si requêtre commence par " and "</param>
            <returns>sélection produit</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetCustomerProgramSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.Boolean)">
            <summary>
            Obtient la sélection émission client
            </summary>
            <param name="webSession">Session du client</param>
            <param name="progamPrefixe">Préfixe emisssion</param>
            <param name="progamTypePrefixe">Préfixe Genre d'émission</param>
            <param name="beginByAnd">vrai si la requete commence par "And"</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetCustomerSponsorshipFormSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Obtient la sélection  client forme de parrainage
            </summary>
            <param name="webSession">Session du client</param>
            <param name="sponsorshipFormPrefixe">Préfixe Forme de parrainage</param>
            <param name="beginByAnd">vrai si la requete commence par "And"</param>
            <returns>Code SQL généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAdExpressUniverseCondition(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="webSession">Session du client AdExpress</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (Média, catégorie, support).
            De plus, elle utilise les préfixes déterminés dans les constantes
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAdExpressUniverseCondition(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="webSession">Session du client AdExpress</param>
            <param name="vehicleTablePrefixe">Préfixe de la table vehicle</param>
            <param name="categoryTablePrefixe">Préfixe de la table vehicle</param>
            <param name="mediaTablePrefixe">Préfixe de la table média</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode ne peut être utilisée que si toute la nomenclature support est contenue
            dans une même table (Média, catégorie, support).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAdExpressUniverseCondition(System.Int32,System.String,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idMediaItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="tablePrefixe">Préfixe de la table contenant toute la nomenclature</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode ne peut être utilisée que si toute la nomenclature support est contenue
            dans une même table (Média, catégorie, support).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAdExpressUniverseCondition(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.String,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idMediaItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="tablePrefixe">Préfixe de la table contenant toute la nomenclature</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <param name="webSession">Session client</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode ne peut être utilisée que si toute la nomenclature support est contenue
            dans une même table (Média, catégorie, support).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAdExpressUniverseCondition(System.Int32,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idMediaItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (Média, catégorie, support).
            De plus, elle utilise les préfixes déterminés dans les constantes
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAdExpressUniverseCondition(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="webSession">Session client</param>
            <param name="idMediaItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (Média, catégorie, support).
            De plus, elle utilise les préfixes déterminés dans les constantes
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAdExpressUniverseCondition(System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idMediaItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="vehicleTablePrefixe">Préfixe de la table vehicle</param>
            <param name="categoryTablePrefixe">Préfixe de la table vehicle</param>
            <param name="mediaTablePrefixe">Préfixe de la table média</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (Média, catégorie, support).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAdExpressUniverseCondition(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="webSession">Session client</param>
            <param name="idMediaItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="vehicleTablePrefixe">Préfixe de la table vehicle</param>
            <param name="categoryTablePrefixe">Préfixe de la table vehicle</param>
            <param name="mediaTablePrefixe">Préfixe de la table média</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (Média, catégorie, support).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAdExpressProductUniverseCondition(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idProductItemsList">Identifiant de l'univers média AdExpress</param>
            <param name="tablePrefixe">Préfixe de la table contenant toute la nomenclature</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <param name="access">si true condition en accès sinon en exclusion</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode ne peut être utilisée que si toute la nomenclature support est contenue
            dans une même table (famille, classe ,group, produit ).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAdExpressProductUniverseCondition(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idProductItemsList">Identifiant de l'univers Produit AdExpress</param>
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <param name="access">si true condition en accès sinon en exclusion</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (famille, classe ,group, produit ).
            De plus, elle utilise les préfixes déterminés dans les constantes
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getAdExpressProductUniverseCondition(System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Donne la condition SQL pour intégrer la notion d'univers Adexpress
            </summary>
            <param name="idProductItemsList">Identifiant de l'univers produit AdExpress</param>
            <param name="sectorTablePrefixe">Préfixe de la table sector</param>
            <param name="subSectorTablePrefixe">Préfixe de la table subSector</param>
            <param name="groupTablePrefixe">Préfixe de la table group</param>
            <param name="segmentTablePrefixe">Préfixe de la table segment </param>
            <param name="productTablePrefixe">Préfixe de la table produit</param>			
            <param name="beginByAnd">La condition doit elle commencer par And</param>
            <param name="access">si true condition en accès sinon en exclusion</param>
            <returns>Condition</returns>
            <remarks>
            Cette méthode doit être utilisée que si la nomenclature support n'est pas contenue
            dans une même table (famille, classe ,group, produit ).
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetUnitFieldName(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Détermine le nom du champ à utiliser pour l'unité
            
            Nouvelle version: 28/11/2006
            </summary>
            <remarks>
            A utiliser pour les modules d'alerte et d'analyse
            </remarks>
            <param name="webSession">Session du client</param>
            <returns>Nom du champ à utiliser pour la sélection de dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetUnitFieldName(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.DB.TableType.Type)">
            <summary>
            Détermine le nom du champ à utiliser pour l'unité
            
            Nouvelle version: 25/10/2007
            </summary>
            <remarks>
            A utiliser pour différencier entre le type des tables (DATA_VEHICLE ou WEB_PLAN)
            </remarks>
            <param name="webSession">Session du client</param>
            <param name="type">Type de la table</param>
            <returns>Nom du champ à utiliser pour la sélection de dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetDateFieldName(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Détermine le nom du champ à utiliser pour la sélection de dates
            
            Nouvelle version: 28/11/2006
            </summary>
            <remarks>
            A utiliser pour les modules d'alerte et d'analyse
            </remarks>
            <param name="webSession">Session du client</param>
            <returns>Nom du champ à utiliser pour la sélection de dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetDateFieldName(TNS.AdExpress.Constantes.Web.Module.Type,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Détermine le nom du champ à utiliser pour la sélection de dates
            
            Nouvelle version: 28/11/2006
            </summary>
            <remarks>
            A utiliser pour les modules d'alerte et d'analyse
            </remarks>
            <param name="moduleType">Type de module du client</param>
            <param name="detailPeriod">Type de détail de la période</param>
            <returns>Nom du champ à utiliser pour la sélection de dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getVehicleTableNameForSectorAnalysisResult(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Détermine la table à traiter pour une Analyse sectorielle en fonction du vehicle
            </summary>
            <param name="vehicleType">Vehicle</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getVehicleTableNameForSectorAnalysisResultSegmentLevel(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Détermine la table media/segment à traiter pour une Analyse sectorielle en fonction du vehicle  
            </summary>
            <param name="vehicleType">Vehicle</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getTablesForGad(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Détermine la table contenant les adresses Gad des annonceurs
            </summary>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.SQLGeneratorException">Le niveau de détail produit demandé ne gère pas les données du gad</exception>
            <param name="webSession">Session du client</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getFieldsAddressForGad">
            <summary>
            Détermine le champ addresse du gad
            </summary>
            <returns>Champ addresse du gad</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getFieldsAddressForGad(System.String)">
            <summary>
            Détermine la table contenant les adresses Gad des annonceurs
            </summary>
            <param name="prefixe">Préfixe à utiliser pour la table du GAD</param>
            <returns>Champ addresse du gad</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getJointForGad(System.String)">
            <summary>
            Détermine les jointures à utiliser pour avoir l'adresse du gad pour un annonceur
            </summary>
            <param name="prefixeData">Préfixe à utiliser pour la de résultat</param>
            <returns>Jointure</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getJointForGad(System.String,System.String)">
            <summary>
            Détermine les jointures à utiliser pour avoir l'adresse du gad pour un annonceur
            </summary>
            <param name="prefixeGAD">Préfixe à utiliser pour la table du GAD</param>
            <param name="prefixeData">Préfixe à utiliser pour la de résultat</param>
            <returns>Jointure</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getTableNameForAnalysisResult(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Indique la table à utilisée pour la requête
            </summary>
            <param name="periodType">Type de période</param>
            <returns>La table correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getDateFieldNameForAnalysisResult(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Indique le champ à utilisée pour la date dans la requête
            </summary>
            <param name="periodType">Type de période</param>
            <returns>Le champ correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getUnitFieldNameForAnalysisResult(TNS.AdExpress.Constantes.Web.CustomerSessions.Unit)">
            <summary>
            Indique le champ à utilisée pour l'unité dans la requête
            </summary>
            <param name="unit">Type d'unité</param>
            <returns>Le champ correspondant au type d'unité</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getTableNameForAggregatedData(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Indique la table à utilisée pour la requête des données aggrégées
            </summary>
            <param name="periodType">Type de période</param>
            <returns>La table correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getTableNameForDashBoardResult(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Indique la table à utilisée pour la requête
            </summary>
            <param name="periodType">Type de période</param>
            <returns>La table correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetTableNameForTendency(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            
            </summary>
            <param name="periodType"></param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetTotalTableNameForTendency(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            
            </summary>
            <param name="periodType"></param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getMediaFieldsForTendencies(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Liste des champs pour le module tendance
            </summary>
            <param name="vehicleName">Nom du média</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getTableForTendencies(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Tables pour le module tendance
            </summary>
            <param name="vehicleName">Nom du vehicle</param>
            <returns>liste des tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getPeriodForTendencies(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel,System.String,System.String,System.String,System.String)">
            <summary>
            Choix période
            </summary>
            <param name="periodType">type de semaine (hebdomadaire,mensuel)</param>
            <param name="firstPeriodN">début de période de l'année N</param>
            <param name="endPeriodN">fin de période de l'année N</param>
            <param name="firstPeriodN1">début de période de l'année N-1</param>
            <param name="endPeriodN1">fin de période de l'année N-1</param>
            <returns>Conditions sur la période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getJointForTendencies(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Jointure pour le module
            </summary>
            <param name="webSession">Session client</param>
            <param name="vehicleName">Nom du vehicle</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getGroupByForTendencies(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Group by pour le module Tendance
            </summary>
            <param name="vehicleName">Nom du Vehicle</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getOrderByForTendencies(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Order by pour le module tendance
            </summary>
            <param name="vehicleName"></param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getMaxDateForPortofolio(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Fournit les champs pour avoir le max et le min des dates
            </summary>
            <param name="periodType">Type de période</param>
            <returns>les champs pour avoir le max et le min des dates</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getVehicleTableNameForDetailResult(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Constantes.Web.Module.Type)">
            <summary>
            Détermine la table à traiter pour avoir des données désagrégées en fonction du vehicle
            </summary>
            <param name="vehicleName">Vehicle</param>
            <param name="moduleType">Type de module</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getVehicleTableNameForZoomDetailResult(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Détermine la table à traiter pour un Zoom en fonction du vehicle
            </summary>
            <param name="vehicleName">Vehicle</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetVehicleTableNameForSponsorshipResult">
            <summary>
            Détermine la table à traiter pour le parrainage TV
            </summary>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getVehicleTableNameForAlertDetailResult(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Détermine la table à traiter pour une Alerte en fonction du vehicle
            </summary>
            <param name="vehicleName">Vehicle</param>
            <returns>Nom de la table</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetIdFieldsForProductDetail(TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedProductDetails,System.String)">
            <summary>
            Donne les champs à utilisé pour la colonne produit du tableau
            </summary>
            <param name="preformatedProductDetail">Niveau de détail produit</param>
            <param name="dataTablePrefixe">Préfixe de la table des données</param>
            <returns>Champs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getFieldsForProductDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Donne les champs à utilisé pour la colonne produit du tableau
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dataTablePrefixe">Préfixe de la table des données</param>
            <returns>Champs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getTablesForProductDetail(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Donne les champs à utiliser pour la colonne produit du tableau
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getJointAndLanguageForProductDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Donne les champs à utilisé pour la colonne produit du tableau
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dataTablePrefixe">Préfixe de la table des données</param>
            <param name="vehicleName">Type de vehicle</param>
            <returns>Jointures</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getOrderByForProductDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Retourne la liste des champs pour le order by
            </summary>
            <param name="webSession">session client</param>
            <param name="dataTablePrefixe">préfixe de la table des données</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getUnitField(TNS.AdExpress.Constantes.Web.CustomerSessions.Unit)">
            <summary>
            Obtient le champ à utiliser en fonction de l'unité des tables désagrégées
            </summary>
            <param name="unit">Unité</param>
            <returns>Nom du champ</returns>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
            Lancée au cas ou l'unité considérée n'est pas un cas traité
            </exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getTotalUnitField(TNS.AdExpress.Constantes.Web.CustomerSessions.Unit)">
            <summary>
            Obtient le champ à utiliser en fonction de l'unité des tables agrégées
            </summary>
            <param name="unit">Unité</param>
            <returns>Nom du champ</returns>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.SQLGeneratorException">
            Lancée au cas ou l'unité considérée n'est pas un cas traité
            </exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getUnitFields(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String)">
             <summary>
             Obtient les champs unités à utiliser en fonction du media
             </summary>
            <param name="vehicleName">typde du média</param>
            <param name="dataTablePrefixe">préfixe de la table des données</param>
             <returns>Noms des champs</returns>
             <exception cref="T:TNS.AdExpress.Web.Exceptions.SQLGeneratorException">
             Lancée au cas ou les unités considérées ne sont traitées
             </exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getTotalUnitFields(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String)">
             <summary>
             Obtient les champs unités à utiliser en fonction du media
             </summary>
            <param name="vehicleName">type du média</param>
            <param name="dataTablePrefixe">préfixe de la table des données</param>
             <returns>Noms des champs</returns>
             <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
             Lancée au cas ou les unités considérées ne sont traitées
             </exception>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getUnitFieldsNameForMediaDetailResult(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String)">
             <summary>
             Obtient les champs unités à utiliser en fonction du media
             </summary>
            <param name="vehicleName">typde du média</param>
            <param name="dataTablePrefixe">préfixe de la table des données</param>
             <returns>NOms des champs coorespondant aux unités sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getUnitFieldsNameForMediaDetailResult(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Constantes.DB.TableType.Type,System.String)">
             <summary>
             Obtient les champs unités à utiliser en fonction du media
             </summary>
            <param name="vehicleName">typde du média</param>
             <param name="type">Type de la table</param>
            <param name="dataTablePrefixe">préfixe de la table des données</param>
             <returns>NOms des champs coorespondant aux unités sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getUnitFieldsNameForMediaDetailResult(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Int32)">
             <summary>
             Obtient les champs unités à utiliser en fonction du media
             </summary>
            <param name="vehicleName">typde du média</param>
             <returns>NOms des champs coorespondant aux unités sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getUnitFieldsNameForAnalysisPortofolio(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Constantes.DB.TableType.Type)">
            <summary>
            Obtient les champs unités à utiliser en fonction du media
            </summary>
            <param name="vehicleName">typde du média</param>
            <param name="type">Type de la table</param>
            <returns>NOms des champs coorespondant aux unités sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetUnitFieldsForTendency(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String,System.String)">
            <summary>
            Obtient les champs unités à utiliser en fonction du media pour les tendances
            </summary>
            <param name="vehicleName">type du média</param>
            <param name="dataTablePrefixe">préfixe de la table des données</param>
            <param name="dataTotalTablePrefixe">préfixe de la table des données</param>
            <returns>NOms des champs coorespondant aux unités sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getJointForInsertDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Obtient les encarts pour le media presse
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dataTablePrefixe">Préfixe de la table des données</param>
            <returns>Jointures</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getJointForInsertDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,TNS.AdExpress.Constantes.DB.TableType.Type)">
            <summary>
            Obtient les encarts pour le media presse
            </summary>
            <param name="webSession">Session du client</param>
            <param name="dataTablePrefixe">Préfixe de la table des données</param>
            <param name="type">Type de la table</param>
            <returns>Jointures</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getLevelProduct(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Retourne une condition sur le niveau de détail produit
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table</param>
            <param name="beginByAnd">débute par and</param>
            <returns>Code SQL Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.getLevelMedia(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Retourne une condition sur le niveau de détail média
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tablePrefixe">Préfixe de la table</param>
            <param name="beginByAnd">débute par and</param>
            <returns>Code SQL Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetLevel2MediaFields(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le libellé du média de niveau 2
            </summary>
            <param name="webSession">session client</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.GetLevel2IdMediaFields(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le libellé du média de niveau 2
            </summary>
            <param name="webSession">session client</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.SQLGenerator.SaleTypeOutdoor(System.String,System.Int32)">
            <summary>
            For the Sale_Type value of outdoor
            </summary>
            <param name="saleType">SaleType</param>
            <param name="siteLanguage">Site language</param>
            <returns>value of saleType in string </returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.Sort">
            <summary>
            Ensemble des fonctions de tri pour AdExpress 3.0
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Sort.Sort2D_Array(System.Object[0:,0:],System.Int64,System.Boolean,System.String,System.Int32,System.Int32)">
            <summary>
            Fonction de tri d'un tableau à 2 dimension
            </summary>
            <param name="tab">tableau à trier</param>
            <param name="column_index">colonne à trier</param>
            <param name="sortOrder">ordre de tri : croissant=true , décroissant=false</param>
            <param name="itemType">type de valuers triées : nombres ou chaine de caractères</param>
            <param name="beginningIndex">index de début du tri</param>
            <param name="endIndex">index de fin du tri</param>
            <returns>index des valeurs triés</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SponsorshipSystemException">
            <summary>
            DynamicSystemException thrown whenever an error occured while accessing functionalities from dynamic analysis module
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SponsorshipSystemException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SponsorshipSystemException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SponsorshipSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SectorDataAverageDataAccessException">
            <summary>
            Bases de données moyennes
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataAverageDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataAverageDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataAverageDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PDVPlanUIException">
            <summary>
            IHM: APPM PDV du plan
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PDVPlanUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PDVPlanUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PDVPlanUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.APPMDateSelectionException">
            <summary>
            APPMDateSelectionException thrown whenever an error occured while accessing to APPM Date Selection
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMDateSelectionException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMDateSelectionException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMDateSelectionException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.AffinitiesUIException">
            <summary>
            AffinitiesUIException thrown when error while creating affinities UI : APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AffinitiesUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AffinitiesUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AffinitiesUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Medias.TitleListDataAccess">
            <summary>
            Description résumée de TitleListDataAccess.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.TitleListDataAccess.DetailTitleListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Retourne la liste des Titres avec les supports associés
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Dataset avec 4 colonnes : id_title, title, id_media, media</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.TitleListDataAccess.keyWordTitleListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Retourne la liste des Titres avec les supports associés ayant une partie du mot keyWord 
            </summary>
            <param name="webSession">Session</param>
            <param name="keyWord">Mot clef</param>
            <param name="listMedia">Liste des supports (media) déjà sélectionnés</param>
            <returns>Données</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Grp.WaveListDataAccess">
            <summary>
            Charge les vagues AEPM  et OJD 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Grp.WaveListDataAccess.GetWaveListDataAccess(TNS.AdExpress.Constantes.FrameWork.Selection.Wave.Type,TNS.FrameWork.DB.Common.IDataSource,System.DateTime,TNS.AdExpress.Constantes.FrameWork.Results.APPM.TypeDateBegin)">
            <summary>
            Liste des vagues  à afficher 
            </summary>
            <param name="waveType">typde de vague</param>
            <param name="dataSource">source de données</param>
            <param name="dateBegin">date de début</param>
            <param name="typeDateBegin">type de date de début</param>
            <returns>liste des vagues</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Grp.WaveListDataAccess.GetAEPMWaveListDataAccess(TNS.FrameWork.DB.Common.IDataSource,System.DateTime,TNS.AdExpress.Constantes.FrameWork.Results.APPM.TypeDateBegin)">
            <summary>
            Liste des vagues AEPM
            </summary>
            <param name="dataSource">source de données</param>
            <param name="dateBegin">date de début</param>
            <param name="typeDateBegin">type de date de début</param>
            <returns>liste des vagues AEPM</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Grp.WaveListDataAccess.DateSelection(TNS.AdExpress.Constantes.FrameWork.Results.APPM.TypeDateBegin,System.DateTime)">
            <summary>
            Période sélectionnée
            </summary>
            <param name="typeDateBegin">type de date de début</param>
            <param name="dateBegin">date de début</param>
            <returns>période sélectionnée</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.TvSponsorshipDataAccess">
            <summary>
            Accès aux données pour le PARRAINAGE TV
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TvSponsorshipDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Charge les données pour créer étudier le parrainage télé
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>Données du  parrainage télé</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TvSponsorshipDataAccess.GetMediaData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Charge les données supportspour créer étudier le parrainage télé
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>Données du  parrainage télé</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TvSponsorshipDataAccess.UseOrder(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Indique la table à utilisée pour la requête
            </summary>
            <param name="webSession">Session du client</param>
            <returns>La table correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TvSponsorshipDataAccess.GetSqlFields(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les champs sql
            </summary>
            <param name="webSession">Session client</param>
            <returns>champs de la requête</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TvSponsorshipDataAccess.GetSqlFieldsWithoutTablePrefix(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les champs sql sans préfixe de table
            </summary>
            <param name="webSession">Session client</param>
            <returns>champs de la requête</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TvSponsorshipDataAccess.GetSqlOrderFields(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient l'ordre sql
            </summary>
            <param name="webSession">Session client</param>
            <returns>ordre sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TvSponsorshipDataAccess.GetSqlOrderFieldsWithoutTablePrefix(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient l'ordre sql sans préfixe de table
            </summary>
            <param name="webSession">Session client</param>
            <returns>ordre sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TvSponsorshipDataAccess.GetSqlGroupByFields(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le regroupement sql
            </summary>
            <param name="webSession">Session client</param>
            <returns>regroupement sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TvSponsorshipDataAccess.GetSqlGroupByFieldsWithoutTablePrefix(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le regroupement sql
            </summary>
            <param name="webSession">Session client</param>
            <returns>regroupement sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TvSponsorshipDataAccess.GetSqlJoins(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les jointures sql
            </summary>
            <param name="webSession">Session client</param>
            <returns>jointures sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TvSponsorshipDataAccess.GetSqlTables(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les tables sql
            </summary>
            <param name="webSession">Session client</param>
            <returns>tables sql</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess">
            <summary>
            Accès au données pour les indicateurs
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Boolean)">
            <summary>
            Fournit la liste des annonceurs,des références, les investissements mensuels (période N et N-1)
            pour indicateur Saisonnalité, sur le total supports de l'univers ou marché ou famille.
            </summary>
            <remarks>Cette méthode est utilisée pour la présentation des données sous forme de tableau.</remarks>
            <param name="webSession">Session du client</param>	
            <param name="withAdvertisers">champs annonceurs</param>	
            <param name="withRights">droits produits</param>
            <returns>Données de saisonnalité (analyse sectorielle)</returns>
            <history>[D. V. Mussuma]  Modifié le 24/11/04</history>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetChartData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Boolean)">
            <summary>
            Fournit la liste des annonceurs,des références, les investissements mensuels (période N et N-1)
            pour indicateur Saisonnalité, sur le total supports de l'univers ou marché ou famille.
            </summary>
            <remarks>Cette méthode est utilisée pour la présentation des données sous forme de graphique.</remarks>
            <param name="webSession">Session du client</param>	
            <param name="withAdvertisers">champs annonceurs</param>	
            <param name="withRights">droits produits</param>
            <returns>Données de saisonnalité (analyse sectorielle)</returns>
            <history>[D. V. Mussuma]  Modifié le 30/11/04</history>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetSeasonalityData(TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
             Pour le total marché chaque ligne de la table de données recupérée correspond
            à l'investissement mensuel,evolution par rapport au mois 
            de la pérode N-1,nombre de références et le budget moyen ,1er annonceur avec son
            investissement et SOV,1 ere référence avec son investissement et SOV.</summary>
            <remarks> Traitement distinct du total famille pour optimiser les temps de réponses
             par utilisation de procédures stockées</remarks>
             <param name="webSession">Session du client</param>				
             <returns>Données de saisonnalité (analyse sectorielle)</returns>
             <history>[D. V. Mussuma]  Modifié le 24/11/04</history>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetEvolutionData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType)">
            <summary>
            Fournit le dataset pour le palmares
            </summary>
            <param name="webSession">Session client</param>		
            <param name="tableType">Type de table</param>
            <returns>dataset pour le palmares</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetPalmaresData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.PalmaresRecap.typeYearSelected,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType)">
            <summary>
            Fournit le dataset pour le palmares
            </summary>
            <param name="webSession">session du client</param>
            <param name="typeYear">type d'année</param>
            <param name="tableType">type de table</param>
            <returns>données palmares</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetNoveltyData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Crée le tableau de résultats qui permettra de détecter les réels nouveaux produits
             ou annonceurs des démarrages de campagne. Par nouveau il faut comprendre, un annonceur ou produit actif sur le
             dernier mois , mais inactif (pas d'investissement) depuis le début de l'anné.		
             </summary>
             <remarks>Il fournit les données  pour déterminer les nouveaux annonceurs ou les nouvellles références.
             </remarks>
             <example>
             -Pour les nouvelles références l'appel est le suivant :
             <code>dsNovelty=IndicatorDataAccess.getNoveltyData(webSession,ConstResults.PalmaresRecap.ElementType.product,false,true,true);</code>
             -Pour les nouveaux annonceurs l'appel est le suivant :
             <code> dsNovelty=IndicatorDataAccess.getNoveltyData(webSession,ConstResults.PalmaresRecap.ElementType.advertiser,true,false,true);</code>
             </example>
             <param name="webSession">session du client</param>
             <param name="tableType">produit ou annonceur</param>
             <param name="onAdvertiser">la requête porte sur les annonceurs</param>
             <param name="onProduct">la requête porte sur les produits</param>
             <param name="TotalType"></param>
             <returns>données pour nouveautés</returns>
            <history>[D. V. Mussuma]  Modifié le 24/11/04</history>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.getMediaStrategyData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion,System.Boolean)">
             <summary>
             Charge les données pour créer la présentation graphique de stratégie média (analsyse sectorielle).
             Recupère la répartition média sur le total de la période 
            contenant les éléments ci-après :
            en ligne :
            l'investissement total famille ou marché ou univers  				
            de la période N et N-1		
            décliné par media, catégorie ,supports, annonceur.
             </summary>
            <remarks>
             Elle est utilisée aussi bien que pour remonter les données du total univers, marché, famille
            que pour celles des annonceurs de références ou concurrents.
            Exemples d'appel en fonction du type de données ciblées :
            </remarks>
             <example>-Pour recupérer les investissements des annonceurs de références et concurrents sur la période N et N-1
             <code>dsAdvertiser = IndicatorDataAccess.getMediaStrategyData(webSession,TNS.AdExpress.Constantes.FrameWork.Results.PalmaresRecap.ElementType.advertiser,CustomerSessions.ComparisonCriterion.universTotal,true);
             </code>
             -Pour recupérer les investissements pour les totaux univers par media,catégorie, support sur la période N et N-1
             <code>dsTotalUniverse = IndicatorDataAccess.getMediaStrategyData(webSession,TNS.AdExpress.Constantes.FrameWork.Results.PalmaresRecap.ElementType.advertiser,CustomerSessions.ComparisonCriterion.universTotal,false);</code>
             -Pour recupérer les investissements pour les totaux marchés ou famille par media,catégorie, support sur la période N et N-1
             <code>dsTotalMarketOrSector = IndicatorDataAccess.getMediaStrategyData(webSession,TNS.AdExpress.Constantes.FrameWork.Results.PalmaresRecap.ElementType.advertiser,CustomerSessions.ComparisonCriterion.marketTotal,false);</code>
             </example>		
             <param name="webSession">session du client</param>
             <param name="tableType">produit ou annonceur</param>
             <param name="comparisonCriterion">critère de comparaison</param>
             <param name="RefenceOrCompetitorAdvertiser">calcul pour annonceur de références ou concurrents</param>
             <returns>groupe de données pour stratégie média</returns>
             <history>[D. V. Mussuma]  Modifié le 28/01/05</history>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetMediaStrategy1stElmntData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion,TNS.AdExpress.Constantes.FrameWork.Results.MediaStrategy.MediaLevel)">
            <summary>
            Goupe de données qui fournit les premiers annonceurs de références ou concurrents par média
            </summary>
            <param name="webSession">session du client</param>
            <param name="tableType">type de la table générer (annonceur ou produit)</param>
            <param name="comparisonCriterion">critère de comparaison (univers ou marché  ou famille)</param>
            <param name="mediaLevel">niveau média (média ou catégorie ou support)</param>
            <history>[D. V. Mussuma]  Modifié le 28/01/05</history>
            <returns>requete sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.MediaStrategy1stElmntSql(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion,TNS.AdExpress.Constantes.FrameWork.Results.MediaStrategy.MediaLevel)">
            <summary>
            Requete sql pour récupérer les premiers annonceurs de références ou concurrents par média
            </summary>
            <param name="webSession">session du client</param>
            <param name="tableType">type de la table générer (annonceur ou produit)</param>
            <param name="comparisonCriterion">critère de comparaison (univers ou marché  ou famille)</param>
            <param name="mediaLevel">niveau média (média ou catégorie ou support)</param>
            <returns>requete sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetPluriMediaStrategy1stElmntData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion)">
            <summary>
            Requete sql pour récupérer les premiers annonceurs de références ou concurrents pour plurimédia
            </summary>
            <param name="webSession">session du client</param>
            <param name="tableType">type de la table générer (annonceur ou produit)</param>
            <param name="comparisonCriterion">critère de comparaison (univers ou marché  ou famille)</param>		
            <returns>requete sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.PluriMediaStrategy1stElmntSql(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion)">
            <summary>
            Requete sql pour récupérer les premiers annonceurs de références ou concurrents pour plurimédia
            </summary>
            <param name="webSession">sesion du client</param>
            <param name="tableType">type de la table générer (annonceur ou produit)</param>
            <param name="comparisonCriterion">critère de comparaison (univers ou marché  ou famille)</param>
            <returns>requete sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.getTotalForPeriod(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.PalmaresRecap.typeYearSelected)">
            <summary>
            Fournit le total marché ou le total famille
            </summary>
            <param name="webSession">session</param>
            <param name="typeYear">année courante ou année précédente</param>
            <returns>total marché ou le total famille</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.getTotalForMonth(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.PalmaresRecap.typeYearSelected)">
            <summary>
            Fournit le total marché ou le total famille pour le mois courant
            </summary>
            <param name="webSession">session</param>
            <param name="typeYear">année courante ou année précédente</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetSeasonalityTotalForPeriod(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion)">
            <summary>
            Fournit le total marché ou le total famille ou univers
            </summary>
            <param name="webSession">session</param>
            <param name="comparisonCriterion">Critère de commparaison pour le calcul des totaux (famille ou marché ou univers)</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.IntervalMonthsStudy(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Obtient la chaine de caractère representant la période de l'étude
            Elle est utilisé dans la requete pour la selection des mois
            </summary>
            <param name="webSession">session client</param>	
            <param name="withPreviousYearMonths">booléen specifiant la chaine retournée</param>	
            <returns>chaine de caractère de la période d'étude</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.ListMonthsStudy(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Obtient la chaine de caractère representant la période de l'étude
            Elle est utilisé dans la requete pour la selection des mois
            </summary>
            <param name="webSession">session client</param>	
            <param name="nbYear">Nombre d'années</param>
            <param name="onlyAlias">Sans alias</param>
            <param name="withPreviousYearMonths">booléen specifiant la chaine retournée</param>	
            <returns>chaine de caractère de la période d'étude</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.EvolutionIntervalMonthsStudy(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obient la période pour l'indicateur Evolution
            </summary>
            <param name="webSession">sesssion client</param>
            <returns>liste des mois</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.IntervalMonthsStudyForTotal(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.PalmaresRecap.typeYearSelected)">
            <summary>
            Utilisée dans le total univers et total marché
            </summary>
            <param name="webSession">Session</param>
            <param name="typeYear">type d'année (courante, précédente)</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.CurrentMonthStudyForTotal(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.PalmaresRecap.typeYearSelected)">
            <summary>
            Utilisée dans le total univers et total marché
            </summary>
            <param name="webSession">Session</param>
            <param name="typeYear">type d'année (courante, précédente)</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.NoveltyIntervalMonthsStudy(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Genère la chaine de cararctère nécessaire au sélections d'investissements
            des nouveaux produits
            </summary>
            <param name="webSession">session client</param>
            <param name="TotalType">total univers ou marché ou famille</param>
            <returns>chaine selection investissements</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.HasData(System.DateTime)">
            <summary>
            Les nouveaux produits ou annonceurs ne sont disponibles que passé
            le 20 février s'il s'agit de l'année actuelle
            </summary>
            <param name="PeriodEndDate">fin de période d'étude</param>
            <returns>booléen </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.StringMonthsComparativeStudy(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Donne la liste des mois pour année N-1
            </summary>
            <param name="webSession">session client</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetYearSelected(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String@,System.Int32@,System.DateTime)">
            <summary>
            Obtient l'identifiant de l'année sélectionnée  : 0==N , 1==N-1,2==N-2
            </summary>
            <param name="webSession">session du client</param>
            <param name="YearSelected">année sélectionné</param>
            <param name="year">identifiant année sélectionné</param>
            <param name="PeriodBeginningDate">date de début</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.MediaStrategySubQuery(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
             <summary>
            Sous REQUETE 1:	récupère la répartition média sur le total de la période  contenant les éléments ci-après :
            en ligne :
            l'investissement total famille ou marché ou univers  de la période N et N-1 décliné par media, catégorie ,supports, annonceur.													
             </summary>
             <param name="webSession">Session du client</param>
             <param name="recapTableName">nom de la table de données</param>
             <param name="comparisonCriterion">critère de comparaison (total univers, famille ou marché)</param>
             <param name="tableType">Type tableau produit ( "advertiser" ou "product")</param>
             <param name="StudyMonths">période étudiée</param>
             <param name="indexSubQuery">index de la sous requête</param>
             <param name="GroupAccessList">groupes en accès</param>
             <param name="GroupExceptionList">groupes en exceptions</param>
             <param name="SegmentAccessList">variétés en accès</param>
             <param name="SegmentExceptionList">variétés en exceptions</param>
             <param name="CategoryAccessList">catégories en accès</param>
             <param name="MediaAccessList">supports en accès</param>
             <param name="AdvertiserAccessList">annonceurs en accès</param>
             <param name="RefenceOrCompetitorAdvertiser">choix annonceur de références ou concurrents</param>
             <returns>répartition média sur le total de la période et par annonceur</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetFieldsForMediaDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
             <summary>
            Champs média de la requête en fonction du niveau média
             </summary>
             <param name="webSession">sessioin du client</param>
             <param name="PREFIXE">Prefixe de la table</param>
             <param name="indexSubQuery">index sous requête</param>
             <returns>champs média à afficher</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.getFieldForMediaLevel(TNS.AdExpress.Constantes.FrameWork.Results.MediaStrategy.MediaLevel,System.String,System.String)">
            <summary>
            Champs média de la requête en fonction du niveau média
            </summary>
            <param name="mediaLevel">niveau média</param>
            <param name="PREFIXE">préfixe de la table de données</param>
            <param name="dot">point (caractère) si champs doit être afficher avec le préfixe de la table</param>
            <returns>champ média à afficher</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetMediaStrategyFieldsForMediaDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
             <summary>
            Champs média de la requête en fonction du niveau média pour média stratégie
             </summary>
             <param name="webSession">sessioin du client</param>
             <param name="PREFIXE">Prefixe de la table</param>
             <param name="indexSubQuery">index sous requête</param>
             <returns>champs média à afficher</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetProductFieldsForMediaStrategy(TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Champs produit pour statégie média
            </summary>
            <param name="tableType">type de table ("advertiser" ou "product")</param>		
            <param name="indexSubQuery">index de la sous requête</param>
            <param name="ADVERTISER_PREFIXE">préfixe annonceur</param>	
            <param name="PRODUCT_PREFIXE">préfixe produit</param>	
            <param name="premier">vrai si c'est le premier champ</param>
            <param name="dot">point (caractère) si champs doit être afficher avec le préfixe de la table</param>
            <returns>champs produits</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetProductByGroupForMediaStrategy(TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,System.String)">
            <summary>
            Regroupement des produits pour stratégie média.
            </summary>
            <param name="tableType">Type tableau produit ( "advertiser" ou "product")</param>
            <param name="indexSubQuery">index de la sous requete</param>
            <returns>produit regroupés</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetMediaStrategyTablesForMediaDetail(TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
            Tables média de la requête en fonction du niveau média pour média stratégie
             </summary>
             <param name="webSession">sessioin du client</param>		
             <returns>champs média à afficher</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetMediaStrategyProductTables(System.String,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,System.String)">
            <summary>
            Choix table de la nomenclature produit
            </summary>
            <param name="recapTableName">table recap</param>
            <param name="tableType">type de table ("advertisr" ou "product")</param>
            <param name="indexSubQuery">index de la sous requête (éventuellement)</param>
            <returns>nom de la table produit</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetMediaStrategyJointForMediaDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
             <summary>
            Jointures média de la requête en fonction du niveau média pour média stratégie
             </summary>
             <param name="webSession">sessioin du client</param>
             <param name="SubQueryAlias">alias de la sous requête</param>		
             <returns>jointures des média en fonction du niveau sélectionné</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetMediaStrategyJointForProduct(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,System.String)">
            <summary>
            Jointures pour la sélection produit
            </summary>
            <param name="webSession">session du client</param>
            <param name="Tables_RECAP_PREFIXE">prefixe de la table recap</param>
            <param name="PRODUCT_PREFIXE">prefixe produit</param>
            <param name="ADVERTISER_PREFIXE">prefixe annonceur</param>
            <param name="tableType">type de table ( "advertiser" ou "product")</param>
            <param name="indexSubQuery">index de la sous requête</param>
            <returns>code sql des jointures </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetMediaStrategyOrderForMediaDetail(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.Boolean)">
             <summary>
            tri des  média de la requête en fonction du niveau média pour média stratégie
             </summary>
             <param name="webSession">sessioin du client</param>
             <param name="PREFIXE">Prefixe de la table</param>
            <param name="SortOrder">Ordre de tri</param>
            <param name="withMediaLabel">vrai s'il faut ordonner le libellé du média</param>
             <returns>champs média à afficher</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorDataAccess.GetProductByOrderForMediaStrategy(TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,System.String,System.String)">
             <summary>
             tri des produits pour stratégie média.
             </summary>
             <param name="tableType">Type tableau produit ( "advertiser" ou "product")</param>
            <param name="SubQueryAlias">Alias de la sous requête</param>
            <param name="SortOrder">ordre de tri</param>
             <returns>produit triés</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.CompetitorMediaPlanAnalysisDataAccess">
            <summary>
            Classe d'accès à la base de données pour les plans média concurrentiels
            sur un historique long
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorMediaPlanAnalysisDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Classe qui charge les données d'un plan media concurrentiel en analyse
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Données</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.InfoNewsItem">
            <summary>
            InfoNewsHashTable permet d'imbriquer plusieurs tableaux de résultat
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.InfoNewsItem._name">
            <summary>
            Nom de la liste d'éléments
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.InfoNewsItem._list">
            <summary>
            Liste des éléments
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.InfoNewsItem.#ctor(System.String,System.String[0:,0:])">
            <summary>
            Constructeur
            </summary>
            <param name="name">Nom de la liste d'éléments</param>
            <param name="list">Liste des éléments</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.InfoNewsItem.Name">
            <summary>
            Obtient le nom de la liste d'éléments
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.InfoNewsItem.List">
            <summary>
            Obtient la liste des éléments
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Results.ProofSystem">
            <summary>
            Accès au résultat des justificatifs Presse
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.ProofSystem.GetResultTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient à la construction du tableau des insertions des justificatifs Presse 
            </summary>		
            <param name="webSession">Session du client</param>
            <returns>Code HTML du tableau des justificatifs Presse </returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.LocationPlanTypesRules">
            <summary>
            Classe de traitements des données des types d'emplacements du plan.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.LocationPlanTypesRules.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Traitement des données des types d'emplacement du plan
            </summary>
            <param name="webSession">session du client</param>
            <param name="dataSource">source de données</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="baseTarget">cible de base</param>
            <param name="additionalTarget">cible supplémentaire</param>
            <returns>données des types d'emplacement du plan traitées</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.DisplayTreeNode">
            <summary>
            Classe pour l'affichage d'un arbre
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayTreeNode.ToHtml(System.Windows.Forms.TreeNode,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
             Affichage d'un arbre au format HTML
            </summary>
            <param name="root">Arbre à afficher</param>
            <param name="write">Arbre en lecture où en écriture</param>
            <param name="displayArrow">Affichage de la flêche</param>
            <param name="displayCheckbox">Affichage de la checkbox</param>
            <param name="witdhTable">Largeur de la table</param>
            <param name="displayBorderTable">Affichage de la bordure</param>
            <param name="allSelection">Affichage du lien "tout sélectionner"</param>
            <param name="SiteLanguage">Langue</param>
            <param name="showHideContent">Index ShowHideCOntent ?</param>
            <param name="typetree">Type d'arbre ?</param>
            <param name="div">Afficher les div true si c'est le cas</param>
            <returns>tableau correspondant à l'arbre</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayTreeNode.ToHtml(System.Windows.Forms.TreeNode,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
             Affichage d'un arbre au format HTML
            </summary>
            <param name="root">Arbre à afficher</param>
            <param name="write">Arbre en lecture où en écriture</param>
            <param name="displayArrow">Affichage de la flêche</param>
            <param name="displayCheckbox">Affichage de la checkbox</param>
            <param name="witdhTable">Largeur de la table (en pourcentage)</param>
            <param name="displayBorderTable">Affichage de la bordure</param>
            <param name="allSelection">Affichage du lien "tout sélectionner"</param>
            <param name="SiteLanguage">Langue</param>
            <param name="showHideContent">Index ShowHideCOntent ?</param>
            <param name="typetree">Type d'arbre ?</param>
            <param name="div">Afficher les div true si c'est le cas</param>
            <returns>tableau correspondant à l'arbre</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayTreeNode.ToExcel(System.Windows.Forms.TreeNode)">
            <summary>
            Affichage d'un arbre pour l'export Excel
            </summary>
            <param name="root">Arbre</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayTreeNode.GetNbLevels(System.Windows.Forms.TreeNode,System.Int32,System.Int32@)">
            <summary>
            Donne le nombre de niveau d'un arbre
            </summary>
            <param name="root">Arbre</param>
            <param name="level">Niveau de l'arbre</param>
            <param name="max">Nombre maximum de niveau</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayTreeNode.GetLevelCss(System.Int32)">
            <summary>
            Donne le nom du style CSS selon le niveau de l'arbre
            </summary>
            <param name="level">Niveau de l'arbre</param>
            <returns>Nom du style CSS</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayTreeNode.ToExcel(System.Windows.Forms.TreeNode,System.Text.StringBuilder@,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Affichage d'un arbre pour l'export Excel
            </summary>
            <param name="root">Arbre</param>
            <param name="html">Code html</param>
            <param name="level">Niveau de l'arbre</param>
            <param name="maxLevel">Nombre maximum de niveaud e l'arbre</param>
            <param name="nbTD">Nombre de cellule TD</param>
            <returns>True si le nombre maximum de TD a été atteint, sinon false</returns>
            <remarks>
            - Actuellement, la méthode gère 3 niveaux d'affichage mais elle est générique.
            Par conséquent, 3 styles sont définis. Il est possible de rajouter des niveaux de style CSS dans le 'switch case' correspondant
            dans la méthode ci-après et ajouter les niveaux dans la méthode GetLevelCss(int level)
            - Affichage sur 3 colonnes dans le dernier niveau
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayTreeNode.ToExcel(System.Windows.Forms.TreeNode,System.Int32,System.Boolean)">
            <summary>
            Affichage d'un arbre pour l'export Excel
            </summary>
            <param name="root">Arbre à afficher</param>		
            <param name="SiteLanguage">Langue</param>	
            <param name="displayCheckbox">True si l'on souhaite afficher la checkbox</param>
            <returns>tableau correspondant à l'arbre</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayTreeNode.AddScript">
            <summary>
            Script
            </summary>
            <returns>Code JavaScript</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayTreeNode.ToHtml(System.Windows.Forms.TreeNode,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
             Affichage d'un arbre au format HTML
            </summary>
            <param name="root">Arbre à afficher</param>
            <param name="write">Arbre en lecture où en écriture</param>
            <param name="displayArrow">Affichage de la flêche</param>
            <param name="displayCheckbox">Affichage de la checkbox</param>
            <param name="witdhTable">Largeur de la table</param>
            <param name="displayBorderTable">Affichage de la bordure</param>
            <param name="allSelection">Affichage du lien "tout sélectionner"</param>
            <param name="SiteLanguage">Langue</param>
            <param name="showHideContent">Index ShowHideCOntent ?</param>
            <param name="typetree">Type d'arbre ?</param>
            <param name="div">Afficher les div true si c'est le cas</param>
            <param name="percentage">Pour indiquer si la valeur de witdhTable est en pourcentage ou pas</param>
            <returns>tableau correspondant à l'arbre</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SectorDataSynthesisUIException">
            <summary>
            UI Synthèse
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSynthesisUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSynthesisUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSynthesisUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.RecapDataAccessException">
            <summary>
             Base de données: Analyses sectorielles
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.RecapDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.RecapDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.RecapDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.ProductClassificationListDataAccessException">
            <summary>
            Base de données: Liste de produits
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProductClassificationListDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProductClassificationListDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProductClassificationListDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaPublicationDatesSystemException">
            <summary>
            MediaPublicationDatesSystemException thrown while initializing the list
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPublicationDatesSystemException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPublicationDatesSystemException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPublicationDatesSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaInsertionsCreationsRulesException">
            <summary>
            Classe d'exception de la génération des données pour l'analyse plan média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaInsertionsCreationsRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaInsertionsCreationsRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaInsertionsCreationsRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.InfoNewsRulesException">
            <summary>
            Rules: Info/News
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.InfoNewsRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.InfoNewsRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.InfoNewsRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.IndicatorSeasonalityException">
            <summary>
            Analyse sectorielle: Indicateur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.IndicatorSeasonalityException.#ctor">
            <summary>
            constructeur par défaut
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.IndicatorSeasonalityException.#ctor(System.String)">
            <summary>
            constructeur avec message d'erreur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.IndicatorSeasonalityException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.FilesItemDataAccessException">
            <summary>
            Base de données: Périodicité du plan
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FilesItemDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FilesItemDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FilesItemDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.ExcelWebPageException">
            <summary>
            ExcelWebPageException thrown whenever an error occured in an excel web page
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ExcelWebPageException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ExcelWebPageException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">the exception message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ExcelWebPageException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.DynamicTablesUIException">
            <summary>
            DynamicTablesUIException thrown whenever an error occured while generating UI for sector analysis module
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicTablesUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicTablesUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicTablesUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CompetitorDataAccessException">
            <summary>
            Classe d'exception de la génération des données pour les modules concurrentiels
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.APPMMediaPlanUIExcpetion">
            <summary>
            APPMMediaPlanUIExcpetion thrown while constructing HTML for Media Plan : APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMMediaPlanUIExcpetion.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMMediaPlanUIExcpetion.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMMediaPlanUIExcpetion.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.VehicleDetailDataAccess">
            <summary>
            Description résumée de VehicleDetailDataAccess.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.VehicleDetailDataAccess.GetData(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Int64,System.Int32,System.Int32,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Ne fait rien, ne pas utiliser
            </summary>
            <param name="vehicle">Vehicle à traiter</param>
            <param name="idMedia">Identifiant du support</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.VehicleDetailDataAccess.EndRequest(System.Int64,System.Int32,System.Int32,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Ne fait rien, ne pas utiliser
            </summary>
            <param name="idMedia">Identifiant du média</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <param name="webSession">Session du client</param>
            <returns>NULL</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.VehicleDetailDataAccess.GetPressData(System.Int64,System.Int32,System.Int32,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Ne fait rien, ne pas utiliser
            </summary>
            <param name="idMedia">Identifiant du média</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <param name="webSession">Session du client</param>
            <returns>Null</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.IndicatorSynthesisDataAccess">
            <summary>
            Obtient les données de synthèses pour les indicateurs.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorSynthesisDataAccess.GetInvestmentData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion)">
            <summary>
            Obtient les investissements de l'année N et/ou N-1
            </summary>
            <param name="webSession">Session du client</param>
            <param name="comparisonCriterion">critère de comparaison</param>
            <returns>Données synthèses indicateurs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorSynthesisDataAccess.GetProductNumberData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion,System.String)">
            <summary>
            Obtient les investissements de l'année N et/ou N-1
            </summary>
            <param name="webSession">Session du client</param>
            <param name="comparisonCriterion">critère de comparaison</param>
            <param name="idProductLabel">libellé identifiant produit</param>
            <returns>Données synthèses indicateurs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.IndicatorSynthesisDataAccess.GetProductNumberSql(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion,System.String,System.Text.StringBuilder,System.String,TNS.AdExpress.Web.DataAccess.Functions.RecapUniversSelection,System.String,System.Boolean)">
            <summary>
            Obtient le nombre de produit (ou annonceur) actifs en fonction de la sélection client.
            </summary>
            <param name="webSession">Sesion  du client</param>
            <param name="comparisonCriterion">critère de comparaison</param>
            <param name="idProductLabel">Libellé identifiant produit</param>
            <param name="sql">Chaine de requete</param>
            <param name="recapTableName">Libellé de la table de données</param>
            <param name="recapUniversSelection">Sélection cliente</param>
            <param name="StudyMonths">mois à traiter</param>
            <param name="previousPeriod">Période précédente</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.GenericMediaScheduleDataAccess">
            <summary>
            DataAccess management for Media Schedule
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaScheduleDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod)">
            <summary>
            Get Data to build Media Schedule
            </summary>
            <param name="session">Client Session</param>
            <param name="period">Period</param>
            <returns>DataSet containing Data</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaScheduleDataAccess.GetAdNetTrackData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod)">
            <summary>
            Get Data for AdNetTrack Media Schedule
            </summary>
            <param name="webSession">Client Session</param>
            <param name="period">Media Schedule Period</param>
            <returns>Data</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaScheduleDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Selection.MediaSchedulePeriod,System.Int64,System.String,TNS.AdExpress.Web.Core.Sessions.GenericDetailLevel)">
            <summary>
            Get Data to build Media Schedule
            </summary>
            <param name="session">Client Session</param>
            <param name="period">Period</param>
            <param name="vehicleId">Vehicle Filter if required</param>
            <param name="additionalWhereClause">Additional conditions if required</param>
            <returns>DataSet containing Data</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaScheduleDataAccess.GetQuery(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Sessions.GenericDetailLevel,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.PeriodBreakdownType,System.Int64,System.Collections.Generic.List{TNS.AdExpress.Web.Core.Selection.PeriodItem},System.String)">
            <summary>
            Build query
            </summary>
            <param name="session">Client sesseion</param>
            <param name="detailLevel">Detail levels selection</param>
            <param name="periodDisplay">Period detail display</param>
            <param name="periodBreakDown">Type of period (days, weeks, monthes)</param>
            <param name="vehicleId">Vehicle filter for desagregated data</param>
            <param name="beginningDate">Period Beginning</param>
            <param name="endDate">Period End</param>
            <param name="additionalConditions">Addtional conditions such as AdNetTrack Baners...</param>
            <returns>Sql query as a string</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaScheduleDataAccess.GetDataTableName(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.PeriodBreakdownType,System.Int64)">
            <summary>
            Get data table to use in queries
            </summary>
            <param name="period">Type of period</param>
            <param name="vehicleId">Vehicle Id</param>
            <returns>Table matching the vehicle and the type of period</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaScheduleDataAccess.GetDateFieldName(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.PeriodBreakdownType)">
            <summary>
            Get Field to use for date
            </summary>
            <param name="period">Type of period</param>
            <returns>Date Filed Name matchnig the type of period</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaScheduleDataAccess.GetUnitFieldName(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.PeriodBreakdownType)">
            <summary>
            Get unit field to use in query
            </summary>
            <param name="session">Client Session</param>
            <returns>Unit field name</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaScheduleDataAccess.GetPeriodicity(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.PeriodBreakdownType,System.Int64)">
             <summary>
             Get field for periodicity data
             </summary>
            <param name="detailPeriod">Detail period type</param>
            <param name="vehicleId">Vehicle Id</param>
             <returns>Field matching period type</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GenericMediaScheduleDataAccess.GetProductSelection(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Get product selection
            </summary>
            <remarks>
            Must beginning by AND
            </remarks>
            <param name="session">Client session</param>
            <param name="dataTablePrefixe">data table prefixe</param>
            <returns>product selection to add as condition into a sql query</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.GadDataAccess">
            <summary>
            Classe qui récupère les informations du GAD
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.GadDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Obtient les données du gad
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idAddress">Identifiant de l'adresse</param>
            <returns>Données</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.CompetitorMediaInsertionsCreationDataAccess">
            <summary>
             Extrait le détail des insertions publicitaires dans un support, une catégorie, un média correspondant
            à la sélection utilisateur (nomenclatures produits et média, période) présente dans une session pour les médias
            concurentiel
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorMediaInsertionsCreationDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.Int64,System.Int64,System.Int32,System.Int32)">
            <summary>
            Extrait le détail des insertions publicitaires dans un support, une catégorie, un média correspondant
            à la sélection utilisateur (nomenclatures produits et média, période) présente dans une session:
            	Extraction de la table attaquée et des champs de sélection à partir du vehicle
            	Construction et exécution de la requête
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idVehicle">Identifiant du vehicle</param>
            <param name="idCategory">Identifiant Catégorie</param>
            <param name="idMedia">Identifiant du media</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <param name="idAdvertiser">Identifiant annonceur</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand on ne sait pas quelle table attaquer, quels champs sélectionner ou quand une erreur Orace s'est produite
            </exception>
            <returns>DataSet contenant le résultat de la requête</returns>
            <remarks>
            Utilise les méthodes:
            	private static string GetTable(DBClassificationConstantes.Vehicles.names idVehicle)
            	private static string GetFields(DBClassificationConstantes.Vehicles.names idVehicle)
            	private static string GetOrder(DBClassificationConstantes.Vehicles.names idVehicle)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorMediaInsertionsCreationDataAccess.GetTable(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Donne la table à utiliser pour le vehicle indiqué
            </summary>
            <param name="idVehicle">Identifiant du vehicle</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand le cas du vehicle spécifié n'est pas traité
            </exception>
            <returns>Chaine contenant le nom de la table correspondante</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorMediaInsertionsCreationDataAccess.GetFields(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Donne les champs à utiliser pour le vehicle indiqué
            </summary>
            <param name="idVehicle">Identifiant du vehicle</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand le cas du vehicle spécifié n'est pas traité
            </exception>
            <returns>Chaine contenant les champs sélectionnés</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorMediaInsertionsCreationDataAccess.GetFields(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean)">
            <summary>
            Donne les champs à utiliser pour le vehicle indiqué
            </summary>
            <param name="idVehicle">Identifiant du vehicle</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand le cas du vehicle spécifié n'est pas traité
            </exception>
            <returns>Chaine contenant les champs sélectionnés</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorMediaInsertionsCreationDataAccess.GetOrder(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Donne l'ordre de tri des enregistrements extraits
            </summary>
            <param name="idVehicle">Identifiant du vehicle</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand le cas du vehicle spécifié n'est pas traité
            </exception>
            <returns>Chaine contenant les champs de tris</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CompetitorMediaInsertionsCreationDataAccess.GetOrder(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean)">
            <summary>
            Donne l'ordre de tri des enregistrements extraits
            </summary>
            <param name="idVehicle">Identifiant du vehicle</param>
            <param name="withoutPrefix">avec prefixe</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand le cas du vehicle spécifié n'est pas traité
            </exception>
            <returns>Chaine contenant les champs de tris</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionsDataAccess">
            <summary>
            Donne la liste des sessions d'un client qui sont enregistrées, elle sont classés par répertoire
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionsDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Donne la liste des sessions d'un client qui sont enregistrées
            </summary>
            <remarks>Testé</remarks>
            <param name="webSession">Session du client</param>
            <returns>Listes de sessions</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionsDataAccess.GetDirectories(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Donne la liste des répertoires
            </summary>
            <remarks>Testée</remarks>
            <param name="webSession">webSession</param>
            <returns>Dataset avec l'identifiant Répertoire et son nom </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionsDataAccess.IsSessionExist(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Vérifie si une session est déjà enregistrée dans la base de données
            </summary>
            <remarks>Pas testée</remarks>
            <param name="webSession">webSession</param>
            <param name="sessionName">Nom de la session</param>
            <returns>Retourne vrai si la session existe</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionsDataAccess.IsSessionsInDirectoryExist(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64)">
            <summary>
            Vérifie s'il existe des sessions dans un répertoire
            </summary>
            <remarks>Testée</remarks>
            <param name="webSession">webSession</param>
            <param name="idDirectory">Identifiant répertoire</param>
            <returns>Retourne vrai s'il existe des sessions dans un répertoire</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionsDataAccess.IsDirectoryExist(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Vérifie l'existance d'un répertoire
            </summary>
            <remarks>Testée</remarks>
            <param name="webSession">webSession</param>
            <param name="DirectoryName">Nom du répertoire</param>
            <returns>Retourne vrai si le répertoire existe</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionsDataAccess.CreateDirectory(System.String,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Création d'un répertoire
            </summary>
            <remarks>Testée</remarks>
            <param name="nameDirectory">Nom du répertoire</param>
            <param name="webSession">webSession</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionsDataAccess.RenameDirectory(System.String,System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
             Renomme un répertoire
            </summary>
            <remarks>Testé</remarks>
            <param name="newName"></param>
            <param name="idDirectory">Identifiant Répertoire</param>
            <param name="webSession">webSession</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionsDataAccess.RenameSession(System.String,System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
             Renomme une session
            </summary>
            <remarks>Testé</remarks>
            <param name="newName">Nouveau nom de la session</param>
            <param name="idMySession">Identifiant de la session</param>
            <param name="webSession">web Session</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionsDataAccess.DropDirectory(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Supprime un répertoire dans la table Directory
            </summary>
            <remarks>Testée</remarks>
            <param name="idDirectory">Identifiant Répertoire</param>
            <param name="webSession">webSession</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionsDataAccess.MoveSession(System.Int64,System.Int64,System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Déplace une session
            </summary>
            <remarks>Testée</remarks>
            <param name="idOldDirectory">Identifiant du Répertoire source</param>
            <param name="idNewDirectory">Identifiant du Répertoire de destination</param>
            <param name="idMySession">Identifiant du résultat</param>
            <param name="webSession">Session du client</param>	
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.MyAdExpress.MySessionsDataAccess.GetSession(System.Int64,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Retourne le nom d'une session à partir de son identifiant
            </summary>
            <remarks>Testée</remarks>
            <param name="idSession">Identifiant de la session à charger</param>
            <param name="webSession">Session du client</param>
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.GroupItemForTableResult">
            <summary>
            Elément d'un groupe de sélection servant dans un tableau de résultat
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.GroupItemForTableResult._indexInResultTable">
            <summary>
            Index dans le tableau de résultat
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.GroupItemForTableResult.#ctor(System.Int64,System.Int32,System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="id">Identifiant de l'élément</param>
            <param name="groupNumber">Numéro du group auquel il appartient</param>
            <param name="indexInResultTable">Index dans le tableau de résultat</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.GroupItemForTableResult.IndexInResultTable">
            <summary>
            Obtient l'identifiant de l'élément
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.ExportOutdoorVersionItem">
            <summary>
            Objet version pour un export de la publicité extérieur
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportOutdoorVersionItem._nbMedia">
            <summary>
            Nombre de supports
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportOutdoorVersionItem._expenditureEuro">
            <summary>
            Budget
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportOutdoorVersionItem._nbBoards">
            <summary>
            Nombre de panneaux
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportOutdoorVersionItem._nbVisuel">
            <summary>
            Nombre de visuels
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExportOutdoorVersionItem.#ctor(System.Int64,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportOutdoorVersionItem.NbMedia">
            <summary>
            Get / Set Nombre de supports
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportOutdoorVersionItem.ExpenditureEuro">
            <summary>
            Get / Set Budget
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportOutdoorVersionItem.NbBoards">
            <summary>
            Get / Set Nombre de panneaux
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportOutdoorVersionItem.NbVisuel">
            <summary>
            Get / Set Nombre de visuels
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Selections.Products.GroupSystem">
            <summary>
            Set of tools for group management
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Selections.Products.GroupSystem.ListFromSelection(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Get list of groups matcing with the CurrentAdvertiserSelection in the user session.
            Do not forget to load CurrentAdvertiserSelection.....
            </summary>
            <param name="webSession">User session</param>
            <param name="dataSource">Data Source</param>
            <returns>List of groups</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Results.SponsorshipSystem">
            <summary>
            Accès au résultat du parrainage
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.SponsorshipSystem.GetResultTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau du parrainage 
            </summary>		
            <param name="webSession">Session du client</param>
            <returns>Code HTML du tableau du parrainage </returns>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Results.InfoNewsSystem">
            <summary>
            Accès aux données d'Info/News
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.BusinessFacade.Results.InfoNewsSystem._list">
            <summary>
            Liste de tous les éléments
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.InfoNewsSystem.#ctor(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructeur
            </summary>
            <param name="page">Page en cours</param>
            <param name="webSession">Session</param>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.InfoNewsSystem.GetHtml(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau déroulant d'Infos/News
            </summary>
            <param name="page">Page en cours</param>
            <param name="webSession">Session</param>
            <returns>Code HTML du tableau déroulant d'Infos/News</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Results.DashBoardSystem">
            <summary>
            Accès au résultat de l'analyse dynamique
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.DashBoardSystem.GetHtml(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau de Tableau de Bord en HTML
            </summary>
            <param name="webSession">WebSession</param>
            <returns>Code HTML du tableau de Tableau de Bord</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.DashBoardSystem.GetExcel(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau de Tableau de Bord
            </summary>
            <param name="page">Page</param>		
            <param name="webSession">WebSession</param>
            <returns>Code HTML du tableau de Tableau de Bord</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.DashBoardSystem.DashBoardQuery(System.Web.UI.Page)">
            <summary>
            Renvoi la méthode d'export excel a utilisé pour Tableau de Board
            </summary>
            <param name="page">Page</param>
            <returns>Entier de la méthode d'export excel de Tableau de Bord</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.PortofolioUI">
            <summary>
            Génération du code HTML pour les résultats d'un portefeuille
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.PortofolioUI.portofolioTitle1">
            <summary>
            constante pour le style, utiliséé pour les libellés, fond blanc
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.PortofolioUI.portofolioValue1">
            <summary>
            constante pour le style, utiliséé pour les valeurs, fond blanc
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.PortofolioUI.portofolioTitle2">
            <summary>
            constante pour le style, utiliséé pour les libellés, fond violet
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.PortofolioUI.portofolioValue2">
            <summary>
            constante pour le style, utiliséé pour les valeurs, fond violet
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.Synthesis(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String,System.Boolean)">
             <summary>
             Synthèse portefeuille
             </summary>
             <param name="webSession">session client</param>
             <param name="idVehicle">identifiant vehicle</param>
             <param name="idMedia">identifiant media</param>
             <param name="dateBegin">date de début</param>
             <param name="dateEnd">date de fin</param>
            <param name="excel">booléen à true si excel</param>
             <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetHTMLPortofolioUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère le code html d'une alerte portefeuille d'un support
            </summary>
            <param name="page">Page utilisée pour montrer le résultat</param>
            <param name="tab">Tableau de données du résultat</param>
            <param name="webSession">Session du client</param>
            <param name="Excel">sortie excel</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetPortofolioCreationMedia(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Génère le code pour l'affichage du chemin de fer
            </summary>
            <param name="webSession">Session client</param>
            <param name="date">date</param>
            <param name="idMedia">identifiant média</param>
            <param name="nameMedia">nom du média</param>
            <param name="nbrePages">nombre de pages</param>
            <param name="pageAnchor">Anchor de la page pour le positionnement de l'image dans son contexte</param>
            <returns>Code Html</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetPortofolioOneCreationMedia(System.String,System.String,System.String,System.String)">
             <summary>
             Affichage d'une page d'un support
             </summary>
             <param name="date">date</param>
             <param name="idMedia">identifiant média</param>
            <param name="fileName1">Nom du premier fichier</param>
            <param name="fileName2">Nom du 2ème fichier</param>
             <returns>page d'un support</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetPortofolioCreationMedia(System.String,System.String,System.String,System.Int32)">
            <summary>
            Génère le code pour l'affichage du chemin de fer
            </summary>
            <param name="date">date</param>
            <param name="idMedia">identifiant média</param>
            <param name="nameMedia">nom du média</param>
            <param name="languageId">Identifiant de la langue</param>
            <returns>Code Html</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetHTMLNoveltyUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String,System.Boolean)">
            <summary>
            Génère le code HTML pour la planche Nouveauté
            </summary>
            <param name="webSession">Session Client</param>
            <param name="idVehicle">identifiant du véhicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="dateBegin">Date de début</param>
            <param name="dateEnd">Date de fin</param>
            <param name="excel">utilisé pour les excel si true</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetHTMLNoveltyRadioTV(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Génère le code HTML pour la TV et la Presse
            </summary>
            <param name="webSession">Session Client</param>
            <param name="table">table avec les données</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="excel">utilisé pour les excel si true</param>
            <returns>Code Html</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetHTMLNoveltyPress(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Génère le code HTML pour la Presse
            </summary>
            <param name="webSession">Session Client</param>
            <param name="table">table avec les données</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="excel">utilisé pour les excel si true</param>
            <returns>Code Html</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.DetailMediaUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String,System.Boolean)">
            <summary>
            Méthode globale
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant media</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="excel">true si export Excel</param>
            <returns>Liste des supports</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.DetailMediaPressUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
             Génère le code Html pour le detail portefeuille dans le media press
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns>Code Html</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.DetailMediaTvRadioUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String,System.Boolean)">
            <summary>
            Détail portefeuille pour la télévision et la radio
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant media</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="excel">true si sortie Excel</param>
            <returns>Liste des supports pour la télé et la radio</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetHTMLDetailMediaPopUpUI(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Int64,System.Int64,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Génère le code html pour la popup dans le détail support
            </summary>
            <param name="webSession">Session client</param>
            <param name="table">table avec la liste des pubs</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="excel">true si export Excel</param>
            <param name="code_ecran">Code écran</param>
            <param name="date">jour de la semaine</param>
            <param name="page">Page</param>
            <param name="allPeriod">vrai si on présente les spots de toute la période</param>
            <returns>Code Html</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetHTMLPressDetailMediaPopUpUI(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Int64,System.Boolean,System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            Génère la popup avec la liste des pubs
            pour le média sélectionné
            </summary>
            <param name="webSession">Session client</param>
            <param name="table">table avec la liste des pubs</param>
            <param name="idMedia">identifiant média</param>
            <param name="excel">true si utilisé pour l'export Excel</param>
            <param name="date">jour de la semaine</param>
            <param name="page">page</param>
            <param name="allPeriod">vrai si on présente les spots de toute la période</param>
            <param name="idVehicle">Identifiant du media</param>
            <param name="mediaAgencyYear">Année agence média</param>
            <returns>Code Html</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetHTMLRadioDetailMediaPopUpUI(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Int64,System.Int64,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Fournit la liste des pubs pour un code-écran
            </summary>
            <param name="webSession">Session client</param>
            <param name="table">table</param>
            <param name="idMedia">identifiant média</param>
            <param name="excel">Si true, export excel</param>
            <param name="date">Jour de la semaine</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="page">page</param>
            <param name="allPeriod">vrai si on présente les spots de toute la période</param>
            <param name="codeEcran">Code écran</param>
            <param name="mediaAgencyYear">Année agence média</param>
            <returns>Code Html</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetHTMLTVDetailMediaPopUpUI(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Int64,System.Int64,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Affiche le code pour la pop-up
            </summary>
            <param name="webSession">Session Client</param>
            <param name="table">Table avec la liste des pubs</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="excel">indique s'il s'agit du fichier excel</param>
            <param name="date">date</param>
            <param name="page">page</param>	
            <param name="allPeriod">vrai si on présente les spots de toute la période</param>
            <param name="codeEcran">Code écran</param>
            <param name="mediaAgencyYear">Année agence média</param>
            <returns>Code Html</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetHTMLStructureUI(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Obtient le tableau de résultats pour la structure d'une  alerte de portefeuille
            </summary>
            <param name="page">page courante</param>
            <param name="webSession">session du client</param>
            <param name="Excel">vrai pour sortie au format ecel</param>
            <returns>code html du tableau de résultats à afficher</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetHTMLPerformancesUI(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère le code html pour afficher les performances du portefeuille d'un support
            </summary>
            <param name="page">Page utilisée pour montrer le résultat</param>		
            <param name="webSession">Session du client</param>
            <param name="Excel">vrai pour sortie au format excel</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetHTMLCalendarUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère le code HTML pour le calendrier d'action
            </summary>
            <param name="page">page</param>
            <param name="tab">tab</param>
            <param name="webSession">Session client</param>
            <returns>code HTML</returns>
            <param name="excel">True pour fichier Excel</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.InversClassStyleTitle(System.String)">
            <summary>
            Pour connaître le style du libellé à utiliser
            </summary>
            <param name="classStyleTitle">css en cours</param>
            <returns>nouveau style</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.InversClassStyleValue(System.String)">
            <summary>
            Pour connaître le style de la valeur à utiliser
            </summary>
            <param name="classStyleValue">css en cours</param>
            <returns>nouveau style</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetAllPeriodInsertions(System.Text.StringBuilder,System.String,System.String,System.String)">
            <summary>
            Affiche le lien vers le détail des insertions sur la période sélectionnée.
            </summary>
            <param name="t">Constructeur du lien</param>
            <param name="linkText">texte du lien</param>
            <param name="idSession">session client</param>
            <param name="idMedia">identifiant support</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetTvOrRadioTab(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.String,System.String)">
            <summary>
            Génère le code HTML du tableau de structure pour la télé et la radio
            </summary>
            <param name="webSession">Session du client</param>
            <param name="tab">tableau à afficher</param>
            <param name="idVehicle">identifiant du média</param>
            <param name="classCss">classe de style</param>
            <returns>code html du tableau à afficher</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetPressTab(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Data.DataTable,System.Data.DataTable,System.Data.DataTable,System.String)">
            <summary>
             Génère le code HTML du tableau de structure pour la presse
            </summary>
            <param name="dtFormat">table de données pour format</param>
            <param name="dtColor">table de données pour couleur</param>
            <param name="dtInsert">table de données pour encarts</param>
            <param name="dtLocation">table de données pour emplacements</param>
            <param name="classCss">classe de style</param>
            <param name="webSession">session du client</param>
            <returns>code html pour résultats de structure presse</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetVentilationLines(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Int32,System.String,TNS.AdExpress.Constantes.FrameWork.Results.PortofolioStructure.Ventilation)">
            <summary>
            Obtient les lignes format ou couleur ou emplacements ou encarts
            </summary>
            <param name="dt">table de données</param>
            <param name="labelcode">code du libéllé de la ventilation</param>
            <param name="classCss">classe de style</param>
            <param name="webSession">session du client</param>
            <param name="ventilation">format ou couleur ou emplacements ou encarts</param>
            <returns>code html lignes </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.CanShowMediaPlanL3(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Détermine de récupérer les données pour le niveau produit 3
            </summary>
            <param name="webSession">Session du client</param>
            <returns>vrai</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.SynthesisExcel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String,TNS.AdExpress.Constantes.Web.Module.Type)">
            <summary>
            Génère le fichier Excel pour la planche synthèse
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <param name="moduleType">type de module</param>
            <returns>Code Html Pour Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetExcelNoveltyUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Génère le fichier Excel pour la planche nouveauté
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant du vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns>Code Html Pour Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetExcelDetailMediaUI(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Export Excel pour le détail support
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="dateBegin">date de début</param>
            <param name="dateEnd">date de fin</param>
            <returns>Export Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetExcelDetailMediaPopUpUI(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Int64,System.Int64,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Génère l'export Excel pour le detail support du portefeuille
            </summary>
            <param name="webSession">Session client</param>
            <param name="table">table provenant du rule</param>
            <param name="idVehicle">identifiant vehicle</param>
            <param name="idMedia">identifiant média</param>
            <param name="date">jour de parution</param>
            <param name="excel">True si export excel</param>
            <param name="page">page</param>
            <param name="allPeriod">vrai si on présente les spots de toute la période</param>
            <param name="codeEcran">Code écran</param>
            <returns>HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetExcelPortofolioUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère l'export Excel pour le détail portefeuille
            </summary>
            <param name="page">PAGE courante</param>
            <param name="tab">tableau de résultats</param>
            <param name="webSession">session du client</param>
            <param name="Excel">vrai si sortie excel</param>
            <returns>code html pour sortie excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetExcelStructureUI(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
             <summary>
            Génère l'export Excel pour la STRUCTURE d'un portefeuille
             </summary>
             <param name="page">page courante</param>
             <param name="webSession">sessioin du client</param>
             <param name="Excel">vrai si sortie excel</param>
             <returns>tableau formatté pour affichage sous excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetExcelPerformancesUI(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Excel pour performance
            </summary>
            <param name="page">page</param>
            <param name="webSession">Session client</param>
            <param name="Excel">true si excel</param>
            <returns>Excel pour les performances</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetExcelCalendarUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Génère l'export Excel pour le calendrier d'actions
            </summary>
            <param name="page">PAGE courante</param>
            <param name="tab">tableau de résultats</param>
            <param name="webSession">session du client</param>
            <param name="Excel">vrai si sortie excel</param>
            <returns>code html pour sortie excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetRawExcelPortofolioUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère l'export Excel des données brutes pour le détail portefeuille
            </summary>
            <param name="page">PAGE courante</param>
            <param name="tab">tableau de résultats</param>
            <param name="webSession">session du client</param>
            <returns>code html pour sortie excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.GetRawExcelCalendarUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère l'export Excel des données brutes pour le calendrier d'actions
            </summary>
            <param name="page">PAGE courante</param>
            <param name="tab">tableau de résultats</param>
            <param name="webSession">session du client</param>
            <returns>code html pour sortie excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioUI.SynthesisAnalysis(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.String,System.String,System.Boolean)">
             <summary>
             Synthèse portefeuille
             </summary>
             <param name="webSession">session client</param>
             <param name="idVehicle">identifiant vehicle</param>
             <param name="idMedia">identifiant media</param>
             <param name="dateBegin">date de début</param>
             <param name="dateEnd">date de fin</param>
            <param name="excel">booléen à true si excel</param>
             <returns>Code Html</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.PortofolioChartUI">
            <summary>
            Graphiques Structure de l'alerte d'un portefeuille
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioChartUI.StructureChart(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Graphiques Structure de alerte d'un portefeuille
            </summary>
            <param name="webSession">Session du client</param>
            <param name="typeFlash">sortie flash</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioChartUI.GetPressSeriesData(System.Data.DataTable,System.String[]@,System.Double[]@,TNS.AdExpress.Constantes.FrameWork.Results.PortofolioStructure.Ventilation)">
            <summary>
            Obtient les séries de valeurs à afficher graphiquement
            </summary>
            <param name="dt">table de données</param>
            <param name="xValues">libellés du graphique</param>
            <param name="yValues">valeurs pour graphique</param>
            <param name="ventilation">format , couleur,emplacements,encarts</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioChartUI.GetEuroSeriesData(System.Object[0:,0:],System.String[]@,System.Double[]@)">
            <summary>
            Série d'euros
            </summary>
            <param name="tab">tableau de données</param>
            <param name="xEurosValues">liste libellés euros</param>
            <param name="yEurosValues">liste valeurs euros</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioChartUI.GetSpotSeriesData(System.Object[0:,0:],System.String[]@,System.Double[]@)">
            <summary>
            Série spot
            </summary>
            <param name="tab">tableau de données</param>
            <param name="xSpotValues">liste libellés spot</param>
            <param name="ySpotValues">liste valeurs spot</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioChartUI.GetDurationSeriesData(System.Object[0:,0:],System.String[]@,System.Double[]@)">
            <summary>
            Série durées
            </summary>
            <param name="tab">tableau de données</param>
            <param name="xDurationValues">liste libellés durées</param>
            <param name="yDurationValues">liste valeurs durées</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioChartUI.SetSeries(System.Object[0:,0:],Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.Series,System.String[],System.Double[],System.Drawing.Color[],System.String,System.Boolean)">
            <summary>
            Crétion du graphique euros,spot ou  durée pour média radio et télé
            </summary>
            <param name="tab">tableau de résultats</param>
            <param name="chartArea">contenant objet graphique</param>
            <param name="series">séries de valeurs</param>
            <param name="xValues">séries de libellés</param>
            <param name="yValues">séries de valeurs</param>
            <param name="pieColors">couleurs du graphique</param>
            <param name="typeFlash">sortie flash</param>
            <param name="chartAreaName">nom du conteneur de l'image</param>
            <returns>séries de valeurs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioChartUI.SetSeriesForPress(System.Data.DataTable,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.Series,System.String[],System.Double[],System.Drawing.Color[],System.String,System.Boolean)">
            <summary>
            Création du graphique euros,spot ou  durée pour média presse 
            </summary>
            <param name="dt">tableau de résultats</param>
            <param name="chartArea">contenant objet graphique</param>
            <param name="series">séries de valeurs</param>
            <param name="xValues">séries de libellés</param>
            <param name="yValues">séries de valeurs</param>
            <param name="pieColors">couleurs du graphique</param>
            <param name="typeFlash">sortie flash</param>
            <param name="chartAreaName">Nom du conteneur de l'image</param>
            <returns>séries de valeurs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioChartUI.InitializeComponent(Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.ChartArea,System.Boolean,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Initialise les styles du webcontrol pour média radio et télé
            </summary>
            <param name="chartAreaEuros">conteneur de l'image répartition euros</param>
            <param name="chartAreaSpot">conteneur de l'image répartition spot</param>
            <param name="chartAreaDuration">conteneur de l'image répartition durée</param>
            <param name="typeFlash">sortie flash</param>
            <param name="webSession">Session client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioChartUI.InitializeComponentForPress(Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.ChartArea,System.Boolean,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Initialise les styles du webcontrol pour média presse
            </summary>
            <param name="chartAreaFormat">conteneur de l'image répartition format</param>
            <param name="chartAreaColor">conteneur de l'image répartition couleur</param>
            <param name="chartAreaLocation">conteneur de l'image répartition emplacement</param>
            <param name="chartAreaInsert">conteneur de l'image répartition encart</param>
            <param name="typeFlash"></param>
            <param name="webSession">Session client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.PortofolioChartUI.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overrided to add "param" tags for contextual menu managment
            </summary>
            <param name="writer">Writer</param>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionTvUI">
            <summary>VersionRadioUI provide methods to get html code to display a version of the vehicle Tv</summary>
              <author>dmussuma</author>
              <since>mardi 5 septembre 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionTvUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.VersionItem)">
            <summary>
            Constructor
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="version">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionTvUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.ExportVersionItem)">
            <summary>
            Constructor with exportVersion
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="exportVersion">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionTvUI.GetHtml(System.Text.StringBuilder)">
            <summary>Render Version</summary>
            <param name="output"> Le writer HTML vers lequel écrire </param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionTvUI.RenderImage(System.Text.StringBuilder)">
            <summary>Render Version tv</summary>
              <author>dmussuma</author>
              <since>mardi 5 septembre 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionTvUI.RenderImageExport(System.Text.StringBuilder)">
            <summary>Render Version Visual For Tv Export UI</summary>
            <param name="output"></param>
              <author>rkaina</author>
              <since>vendredi 06 septembre 2006</since>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionRadioUI">
            <summary>VersionRadioUI provide methods to get html code to display a version of the vehicle Radio</summary>
              <author>dmussuma</author>
              <since>mardi 5 septembre 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionRadioUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.VersionItem)">
            <summary>
            Constructor
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="version">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionRadioUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Common.Results.ExportVersionItem)">
            <summary>
            Constructor with exportVersion
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="exportVersion">Version to display</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionRadioUI.GetHtml(System.Text.StringBuilder)">
            <summary>Render Version</summary>
            <param name="output"> Le writer HTML vers lequel écrire </param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionRadioUI.RenderImage(System.Text.StringBuilder)">
            <summary>Render Version radio</summary>
              <author>dmussuma</author>
              <since>mardi 5 septembre 2006</since>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.CompetitorMediaPlanAlertRules">
             <summary>
            Class métier de traitement des données issues de la base pour une analyse plan media concurentiel
             </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorMediaPlanAlertRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Fonction qui formate un DataSet en Calendrier d'actions sur une période
            </summary>
            <param name="webSession">Session du client</param>
            <param name="period">Periode d'étude</param>
            <returns>Tableau Formaté</returns>
            <remarks>
            Utilise les méthodes:
            	public static object[,] TNS.AdExpress.Web.Rules.Results.CompetitorMediaPlanAlertRules.getFormattedTable(WebSession webSession, string beginningPeriod, string endPeriod)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CompetitorMediaPlanAlertRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Fonction qui formate un DataSet en Calendrier d'actions à partie d'une date de debut et d'une date de fin:
            	Calcul des dates de début et de fin de calendrier
            	Extraction des données de la BD
            	Extraction du nombre de vehicle et de category des données renvoyées
            	Création d'un tableau repertoriant tous les jours
            	Initialisation des tableaux tab(résultat), tabCategoryIndex(index des lignes catégorie pour les pdm et les totaux), tabVehicleIndex(index des lignes média pour les pdm et les totaux)
            	Construction des libellé des périodes dans tab
            	Remplissage du tableau avec les chiffres (totaux) pour les supports et calculs des totaux vehicle et categorie(1 ligne = 1 vehicle OU 1catégorie OU 1 support)
            	Calcul des PDM vehicle, support et catégorie et total
            	Calcul de la périodicité
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningPeriod">Date de début</param>
            <param name="endPeriod">Date de fin</param>
            <returns>Tableau Formaté</returns>
            <remarks>
            Utilise les méthodes:
            	public static DateTime TNS.AdExpress.Web.Functions.Dates.getPeriodBeginningDate(string period, TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type periodType)
            	public static DateTime TNS.AdExpress.Web.Functions.Dates.getPeriodEndDate(string period, TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type periodType)
            	public static DataSet TNS.AdExpress.Web.DataAccess.Results.CompetitorMediaPlanAlertDataAccess.getPluriMediaDataset(WebSession webSession, string beginningDate, string endDate)
            </remarks>
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.Modules">
            <summary>
            Ensemble de fonctions sur les Modules du site AdExpress.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Modules.IsDashBoardModule(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Vérifie si le module appartient aux tableaux de bord
            </summary>
            <param name="webSession">sessioin du client </param>
            <returns>vrai c'est un module tableaux de bord</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Modules.LoadModuleStudyPeriodDates(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Charge les dates d'études sauvegardées de l'analyse dynamique
            </summary>
            <param name="webSession">Session Client</param>
            <param name="webSessionSave">Session Client sauvegardée</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Modules.ActivePreviousAtomicPeriod(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Gère la sélection de la semaine ou mois précédente
            </summary>
            <param name="previousPeriod">type de période</param>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Modules.IsSponsorShipTVModule(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient si le module appartient au groupe PARRAINAGE TV
            </summary>
            <param name="webSession"></param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Modules.IsRecapModule(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Vérifie si le module appartient aux Recap
            </summary>
            <param name="webSession">sessioin du client </param>
            <returns>vrai si c'est un module des Recap</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.DisplayUniverse">
            <summary>
            Class to shaw universe into export file
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayUniverse.ToExcel(TNS.AdExpress.Classification.AdExpressUniverse,System.Int32,Oracle.DataAccess.Client.OracleConnection)">
            <summary>
            Get Html render to show universe selection into excel file
            </summary>
            <param name="adExpressUniverse">adExpress Universe</param>
            <param name="language">language</param>
            <param name="connection">DB connection</param>
            <returns>Html render to show universe selection</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayUniverse.ToHtml(TNS.AdExpress.Classification.AdExpressUniverse,System.Int32,Oracle.DataAccess.Client.OracleConnection,System.Int32)">
            <summary>
            Get Html render to show universe selection into excel file
            </summary>
            <param name="adExpressUniverse">adExpress Universe</param>
            <param name="language">language</param>
            <param name="connection">DB connection</param>
            <returns>Html render to show universe selection</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayUniverse.GetLevelCss(System.Int32)">
            <summary>
            Give the Css name accoribng to level
            </summary>
            <param name="level">Niveau de l'arbre</param>
            <returns>Nom du style CSS</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayUniverse.GetUniverseGroupForExcel(System.Collections.Generic.List{TNS.Classification.Universe.NomenclatureElementsGroup},System.Int32,System.Int32,Oracle.DataAccess.Client.OracleConnection,TNS.Classification.Universe.AccessType)">
            <summary>
            Get Html render to show universe selection into excel file
            </summary>
            <param name="groups">universe groups</param>
            <param name="baseColSpan">base column span</param>
            <param name="language">language</param>
            <param name="connection">DB connection</param>
            <param name="accessType">items access type</param>
            <returns>Html render to show universe selection</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayUniverse.GetUniverseGroupForHtml(System.Collections.Generic.List{TNS.Classification.Universe.NomenclatureElementsGroup},System.Int32,System.Int32,Oracle.DataAccess.Client.OracleConnection,TNS.Classification.Universe.AccessType,System.Int32)">
            <summary>
            Get Html render to show universe selection into excel file
            </summary>
            <param name="groups">universe groups</param>
            <param name="baseColSpan">base column span</param>
            <param name="language">language</param>
            <param name="connection">DB connection</param>
            <param name="accessType">items access type</param>
            <returns>Html render to show universe selection</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.DisplayUniverse.GetBlankLine(System.Int32)">
            <summary>
            Spacer line
            </summary>
            <returns>HTML</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.VisualChoiceDataAccessException">
            <summary>
            VisualChoiceDataAccessException thrown whenever an error occured while accessing data for visual selection.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VisualChoiceDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VisualChoiceDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VisualChoiceDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SectorsSelectedBusinessFacadeException">
            <summary>
            System: Sélection des familles
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorsSelectedBusinessFacadeException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorsSelectedBusinessFacadeException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorsSelectedBusinessFacadeException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SectorDataSeasonalityRulesException">
            <summary>
            Rules : sector data seasonality
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSeasonalityRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSeasonalityRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSeasonalityRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PortofolioUIException">
            <summary>
            IHM: Portefeuille
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PortofolioUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.LoadingSystemException">
            <summary>
            System: Génération du code pour l'affichage d(attente
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.LoadingSystemException.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.LoadingSystemException.#ctor(System.String)">
            <summary>
            constructeur
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.LoadingSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.InfoNewsUIException">
            <summary>
            IHM: Info/News
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.InfoNewsUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.InfoNewsUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.InfoNewsUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.DashBoardSystemException">
            <summary>
            DashBoardDataAccessException thrown whenever an error occured while accessing DashBoard functionalities
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardSystemException.#ctor">
            <summary>
            Constructeur 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardSystemException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.DashBoardDataAccessException">
            <summary>
            DashBoardDataAccessException.  thrown whenever an error occured while retrieving data for DashBoard module
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardDataAccessException.#ctor">
            <summary>
            Constructeur 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DashBoardDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAlertRulesException">
            <summary>
            Classe d'exception de la classe metier pour l'alert plan média concurentiel
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAlertRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAlertRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAlertRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Medias.MediaPublicationDatesDataAccess">
            <summary>
            Description résumée de MediaPublicationDatesDataAccess.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.MediaPublicationDatesDataAccess.GetAllPublications(System.Int32,System.Int32)">
            <summary>
             Calculates and returns the dataset for the Media Plan 	 
            </summary>
            <param name="dateBegin">Starting date</param>
            <param name="dateEnd">Ending date</param>		
            <returns>dataset with all the publications of media within the defined period</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.MediaPublicationDatesDataAccess.GetLatestPublication(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel,TNS.AdExpress.Constantes.Web.Module.Type,System.Int64)">
            <summary>
            Get Internet last month publication date
            </summary>
            <param name="webSession">Session client</param>
            <param name="periodType">Type de période</param>
            <param name="moduleType">Type de module</param>
            <param name="idVehicle">ID média</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.MediaPublicationDatesDataAccess.GetLatestPublication(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Get last publication date
            </summary>
            <param name="webSession">Session client</param>
            <param name="idVehicle">Id média</param>
            <returns>Date</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.CreativeRadio">
            <summary>
             CreativeItem provides information for the display of a radio creative
             </summary>
              <author>G Ragneau</author>
              <since>09/08/2007</since>
              <stereotype>entity</stereotype>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeRadio._duration">
            <summary>
            Sport duration
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeRadio.#ctor(System.Int64)">
            <summary>Constructor</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeRadio.GetInstance(System.Data.DataRow,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Build instance of CreativeRadio using data containded in row
            </summary>
            <param name="row">Data container</param>
            <param name="session">Web Session</param>
            <returns>New CreativeItem Instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeRadio.FieldInstance(System.Data.DataRow,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Fill instance with data
            </summary>
            <param name="row">Data Container</param>
            <param name="item">item to fill</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeRadio.Render(System.Text.StringBuilder)">
            <summary>
            render creative
            </summary>
            <param name="output">Output</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeRadio.Duration">
            <summary>
            Get / Set Sport duration
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.RadioDurationComparer">
            <summary>
             Creative TV Duration Comparer
             </summary>
             <author>Guillaume.Ragneau</author>
             <since>lundi 20 septembre 2007 11:24:28</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.RadioDurationComparer.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Product Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.RadioDurationComparer.#ctor(System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="captionId">Product Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.RadioDurationComparer.Compare(TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Compare two CreativeItem products
            </summary>
            <param name="x">First creative item to compare</param>
            <param name="y">Second creative item to compare</param>
            <returns>-1 if x > y, 0 if equelas and 1 if y > x</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Results.APPMSystem">
            <summary>
            Construction d'un résultat pour APPM.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.APPMSystem.GetHtml(System.Web.UI.Page,System.Object,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Accès à la construction du tableau d'APPM
            </summary>
            <param name="page">Page</param>
            <param name="appmChart">APPMChart web control</param>
            <param name="webSession">Session du client</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <returns>Code HTML du APPM</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.APPMSystem.GetInsertionHtml(System.Web.UI.Page,TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Boolean)">
            <summary>
            Generate html UI for APPM Insertions (html page or excel), for a specific media
            </summary>
            <param name="page">Page</param>
            <param name="dataSource">Data Source</param>
            <param name="webSession">User session</param>
            <param name="idMedia">Media ID to study</param>
            <param name="excel">Specify if the webPage is on html or excel format</param>
            <returns>UI webpage Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.APPMSystem.GetVersionSynthesisHtml(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.Boolean)">
            <summary>
            Generate html UI for APPM Version Synthesis  (html page or excel), for a specific Version
            </summary>		
            <param name="dataSource">Data Source</param>
            <param name="webSession">User session</param>
            <param name="idVersion">Version ID to study</param>
            <param name="firstInsertionDate">Version first insertion date</param>
            <param name="excel">Specify if the webPage is on html or excel format</param>
            <returns>UI webpage Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.APPMSystem.GetProofHtml(System.Web.UI.Page,TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int64,System.Int32,System.Int32,System.String)">
            <summary>
            Méthode pour la construction du code html pour la page du justificatif
            </summary>
            <param name="page">Page</param>
            <param name="dataSource">Source de données</param>
            <param name="webSession">Session</param>
            <param name="idMedia">Identifiant du media</param>
            <param name="idProduct">Identifiant du produit</param>
            <param name="date">Date</param>
            <param name="dateParution">Date parution</param>
            <param name="pageNumber">Numéro de page</param>
            <returns>Code html</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.APPMSystem.GetExcel(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Accès à la construction de Excel d'APPM
            </summary>
            <param name="page">Page</param>
            <param name="webSession">Session du client</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <returns>Code Excel du APPM</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.APPMSystem.GetJPEG(System.Web.UI.Page,TNS.AdExpress.Web.UI.Results.APPM.APPMChartUI,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            This method is used for the jpeg format of the APPM charts
            </summary>
            <param name="page">Page</param>
            <param name="appmChart">APPMChart web control</param>
            <param name="webSession">Session du client</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <returns>Code HTML du APPM</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI">
            <summary>
            VersionsVehicleUI provide methods to get html code to display a set of version all from the same vehicle
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI._title">
            <summary>
            WebControl title
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI._versions">
            <summary>List of Versions</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI._vehicle">
             <summary>
             Media Classification considered in the web control
             </summary>
            <directed>True</directed>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI._webSession">
            <summary>
            Customer web session
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI._nb_column">
            <summary>
            Number of versions on a line
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI._versionsUIs">
            <summary>
            Object genberating html code
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Collections.Hashtable,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Constructor
            </summary>
            <param name="webSession">Customer Session</param>
            <param name="versions">List of verions details indexed by their Id</param>
            <param name="vehicle">Vehicle considered</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI.GetHtml">
            <summary>
            Build Html code to display the set of version
            </summary>
            <returns>Html Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI.SetUp">
            <summary>
            Initialise all webcontrols
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI.BuildHtml(System.Text.StringBuilder)">
            <summary> 
            Render all versions controls
            </summary>
            <returns>Html code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI.BuildVersionPath(System.String,System.String,System.String)">
            <summary>
            Build visual access path depending on the vehicle
            </summary>
            <param name="date">date to format YYYYMMDD</param>
            <param name="idMedia">Media Id</param>
            <returns>Full path to access an image</returns>
        </member>
        <!-- Commentaire XML incorrect ignoré pour le membre "M:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI.BuildVersionPath(System.String,System.String)" -->
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI.Session">
            <summary>
            Get / Set Customer web session
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI.Vehicle">
            <summary>
            Get / Set Considered Vehicle
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI.Title">
            <summary>
            Get / Set Web Control title
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI.Nb_Columns">
            <summary>
            Get / Set Columns number
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.UI.Results.MediaPlanVersions.VersionsVehicleUI.versions">
            <summary>Get / Set versions</summary>
             <author>gragneau</author>
             <since>jeudi 13 juillet 2006</since>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.MediaPlanAlertUI">
            <summary>
            Construit l'interface utilisateur pour les alertes plan media ou les zooms plan media
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanAlertUI.GetMediaPlanAlertWithMediaDetailLevelHtmlUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code HTML pour afficher un calendrier d'action détaillé en jour entre les dates de la session.
            Elles se base sur un tableau contenant les données
            tab vide : message "Pas de données" + bouton retour
            tab non vide:
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Javascripts (ouverture du détail des insertions et ouverture/fermeture des calendriers d'actions)
            	Génération du code HTML des entêtes de colonne
            	Génération du code HTML des périodes (Libellé du mois, intitulés d'une unité de période)
            	Génération du code HTML du calendrier d'action
            </summary>
            <param name="page">Page qui affiche le Plan Média</param>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <returns>Code Généré</returns>
            <remarks>
            Utilise les méthodes:
            	public static string TNS.AdExpress.Web.Functions.Script.OpenCreation()
            	public static string TNS.AdExpress.Web.Functions.Script.DynamicMediaPlan()
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanAlertUI.GetMediaPlanAlertWithMediaDetailLevelHtmlUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Génère le code HTML pour afficher un calendrier d'action détaillé en jour sur UNE période.
            Elles se base sur un tableau contenant les données
            tab vide : message "Pas de données" + bouton retour
            tab non vide:
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Javascripts (ouverture du détail des insertions et ouverture/fermeture des calendriers d'actions)
            	Génération du code HTML des entêtes de colonne
            	Génération du code HTML des périodes (période suivante, période courante, période suivante, intitulés d'une unité de période
            	Génération du code HTML du calendrier d'action
            </summary>
            <param name="page">Page qui affiche le Plan Média</param>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <param name="zoomDate">Période à prendre en compte (un mois ou une semaine)</param>
            <param name="url">Lien vers la pge elle-même. Permet de gérer les flèches "Période suivante", "Période précédente"</param>
            <returns>Code Généré</returns>
            <remarks>
            Utilise les méthodes:
            	public static string TNS.AdExpress.Web.Functions.Script.OpenCreation()
            	public static string TNS.AdExpress.Web.Functions.Script.DynamicMediaPlan()
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanAlertUI.GetMediaPlanAlertUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Génère le code HTML pour afficher un calendrier d'action détaillé en jour sur UNE période.
            Elles se base sur un tableau contenant les données
            tab vide : message "Pas de données" + bouton retour
            tab non vide:
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Javascripts (ouverture du détail des insertions et ouverture/fermeture des calendriers d'actions)
            	Génération du code HTML des entêtes de colonne
            	Génération du code HTML des périodes (période suivante, période courante, période suivante, intitulés d'une unité de période
            	Génération du code HTML du calendrier d'action
            </summary>
            <param name="page">Page qui affiche le Plan Média</param>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <param name="zoomDate">Période à prendre en compte (un mois ou une semaine)</param>
            <param name="url">Lien vers la pge elle-même. Permet de gérer les flèches "Période suivante", "Période précédente"</param>
            <returns>Code Généré</returns>
            <remarks>
            Utilise les méthodes:
            	public static string TNS.AdExpress.Web.Functions.Script.OpenCreation()
            	public static string TNS.AdExpress.Web.Functions.Script.DynamicMediaPlan()
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanAlertUI.GetMediaPlanAlertUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code HTML pour afficher un calendrier d'action détaillé en jour entre les dates de la session.
            Elles se base sur un tableau contenant les données
            tab vide : message "Pas de données" + bouton retour
            tab non vide:
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Javascripts (ouverture du détail des insertions et ouverture/fermeture des calendriers d'actions)
            	Génération du code HTML des entêtes de colonne
            	Génération du code HTML des périodes (Libellé du mois, intitulés d'une unité de période)
            	Génération du code HTML du calendrier d'action
            </summary>
            <param name="page">Page qui affiche le Plan Média</param>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <returns>Code Généré</returns>
            <remarks>
            Utilise les méthodes:
            	public static string TNS.AdExpress.Web.Functions.Script.OpenCreation()
            	public static string TNS.AdExpress.Web.Functions.Script.DynamicMediaPlan()
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanAlertUI.GetMediaPlanAlertWithMediaDetailLevelExcelUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.Boolean)">
            <summary>
            Génère le code HTML pour Ms Excel pour afficher un calendrier d'action entre deux périodes respectant le type de période spécifié dans la session.
            Elles se base sur un tableau contenant les données. Cette méthode sert aussi bien pour les zooms que pour les alertes
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Rappel des paramètres de périodes 
            	Génération du code HTML des périodes (Libellé du mois, intitulés d'une unité de période)
            	Génération du code HTML du calendrier d'action
            </summary>
            <returns>Code Généré</returns>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <param name="periodBeginning">Période de début du calendrier d'action</param>
            <param name="periodEnd">Période de fin du calendrier d'action</param>
            <param name="showValue">Montre les valeurs dans les cases du calendrier d'action</param>
            <returns>Code Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanAlertUI.GetMediaPlanAlertExcelUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Génère le code HTML pour Ms Excel pour afficher un calendrier d'action entre deux périodes respectant le type de période spécifié dans la session.
            Elles se base sur un tableau contenant les données. Cette méthode sert aussi bien pour les zooms que pour les alertes
            	Initialisation des compteurs de colonnnes, de lignes, de nombre de périodes...
            	Rappel des paramètres de périodes 
            	Génération du code HTML des périodes (Libellé du mois, intitulés d'une unité de période)
            	Génération du code HTML du calendrier d'action
            </summary>
            <returns>Code Généré</returns>
            <param name="tab">Tableau contenant les données à mettre en forme</param>
            <param name="webSession">Session du client</param>
            <param name="periodBeginning">Période de début du calendrier d'action</param>
            <param name="periodEnd">Période de fin du calendrier d'action</param>
            <returns>Code Généré</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MediaPlanAlertUI.GetSloganIdIndex(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient la colonne contenant le id_slogan
            Si le détail support ne contient pas le niveau slogan, elle retoune -1
            </summary>
            <param name="webSession">Session client</param>
            <returns>Colonne contenant l'id_slogan, -1 si pas de slogan</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.PDVPlanChartUI">
            <summary>
            This class is used to construct the charts for the PDV Plan Tab.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PDVPlanChartUI.ConstructChart(TNS.AdExpress.Web.UI.Results.APPM.APPMChartUI,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.Boolean)">
            <summary>
            This method is used to generate charts for PDV plan
            </summary>
            <param name="appmChart">webcontrol object</param>
            <param name="webSession">webSession of the client</param>
            <param name="dataSource">Datasource for executing queries</param>
            <param name="dateBegin">Beginning Date</param>
            <param name="dateEnd">Ending Date</param>
            <param name="baseTarget">Base target</param>
            <param name="additionalTarget">supplementary target</param>
            <param name="typeFlash">boolean that indicates whether its jpeg format or flash</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PDVPlanChartUI.SeriesPDVPlan(System.Data.DataTable,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.Series,System.String[],System.Double[],System.Drawing.Color[],System.String,System.Boolean)">
            <summary>
            Construct series for the PDV Plan Charts 
            </summary>
            <param name="dt">DataTable containing the data for constructing chart</param>
            <param name="chartArea">contenant objet graphique</param>
            <param name="series">Reference to the series object</param>
            <param name="xValues">xValues for the series</param>
            <param name="yValues">yValues for the series</param>
            <param name="pieColors">colors of the pie chart</param>
            <param name="typeFlash">boolean that indicates that whether the resultant chart is in flash format or jpeg</param>
            <param name="chartAreaName">Name of the chart Area</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PDVPlanChartUI.InitializeComponents(TNS.AdExpress.Web.UI.Results.APPM.APPMChartUI,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.ChartArea,Dundas.Charting.WebControl.ChartArea,System.Boolean)">
            <summary>
            This method is used to set the styles for the chart
            </summary>
            <param name="appmChart">Reference to the chart Object</param>
            <param name="chartAreaEuros">Chart Area for the Euro Pie</param>
            <param name="chartAreaPages">Chart Area for the Pages Pie</param>
            <param name="chartAreaInsertions">Chart Area for the Insertions Pie</param>
            <param name="chartAreaGRP">Chart Area for the GRP Pie</param>
            <param name="typeFlash">sortie flash</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.PDVPlanChartUI.GetSeriesData(System.Data.DataTable,System.Data.DataTable,System.String[],System.Double[],System.String)">
            <summary>
            This method populates the xValues and Yvalues arrays which are then used to construct the series
            </summary>
            <param name="graphicsTable">Table that contains the data for reference univers</param>
            <param name="totalTable">Table that contains the data for the total univers</param>
            <param name="xValues">An array that carries XValues for the series</param>
            <param name="yValues">An array that carries YValues for the series</param>
            <param name="colunm">colunm whose value is required for example euros, pages etc</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataAffintiesRules">
            <summary>
            Formats the table for affinities
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.SectorDataAffintiesRules.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Formats the table for affinities 
            </summary>
            <param name="dataSource">Data Source</param>
            <param name="webSession">User Session</param>
            <param name="dateBegin">Period beginning</param>
            <param name="dateEnd">Period end</param>
            <param name="idBaseTarget">Default target</param>
            <param name="idWave">Study wave</param>
            <returns>DataSet ready to be displayed</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SQLGeneratorException">
            <summary>
            Exception SQLGenerator
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SQLGeneratorException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SQLGeneratorException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SQLGeneratorException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SloganDataAccessException">
            <summary>
            Classe d'exception de la génération des données pour l'analyse plan média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SloganDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SloganDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SloganDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SectorDataSynthesisDataAccessException">
            <summary>
             Bases de données synthèse
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSynthesisDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSynthesisDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSynthesisDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PdfFilesSystemException">
            <summary>
            Rules: Info/News
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PdfFilesSystemException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PdfFilesSystemException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PdfFilesSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAnalysisDataAccessException">
            <summary>
            Classe d'exception de la génération des données pour l'analyse plan média concurentiel
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAnalysisDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAnalysisDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAnalysisDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Periods.RecapDataAccess">
            <summary>
            Traite les périodes des récaps
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Periods.RecapDataAccess.GetLastLoadedYear">
            <summary>
            Obtient la dernière année chargée dans la base de données pour les recap
            </summary>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.RecapDataAccessException">Erreur lors de l'ouverture, fermeture de la base données ou de l'execution de la requête</exception>
            <returns>Dernière année chargée</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.TendenciesDataAccess">
            <summary>
            Chargement des données pour le module Tendance
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TendenciesDataAccess.GetDataTendencies(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Dataset avec les données sous total nécessaire au module tendance
            </summary>
            <param name="webSession">Session Client</param>
            <param name="vehicleName">Nom du vehicle</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TendenciesDataAccess.GetTotalTendencies(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Retourne la ligne totale d'un média
            </summary>
            <param name="webSession">Session client</param>
            <param name="vehicleName">Nom du média</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TendenciesDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Dataset avec les données nécessaire au module tendance
            </summary>
            <param name="webSession">Session Client</param>
            <param name="vehicleName">Nom du vehicle</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.TendenciesDataAccess.GetPeriodN1(System.String)">
            <summary>
            Fournit la période N-1
            </summary>
            <param name="period">periode N</param>
            <returns>période N-1</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAnalysisDataAccess">
            <summary>
            Classe d'accès à la base de données, pour les plans media sur historique long
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAnalysisDataAccess.GetDataWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les données d'un calendrier d'action pour une analyse plan média
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAnalysisDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les données d'un calendrier d'action pour une analyse plan média
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAnalysisDataAccess.GetUnitFieldName(TNS.AdExpress.Constantes.Web.CustomerSessions.Unit)">
            <summary>
            Indique le champ à utilisée pour l'unité dans la requête
            </summary>
            <param name="unit">Type d'unité</param>
            <returns>Le champ correspondant au type d'unité</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAnalysisDataAccess.GetTableName(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Indique la table à utilisée pour la requête
            </summary>
            <param name="periodType">Type de période</param>
            <returns>La table correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAnalysisDataAccess.GetDateFieldName(TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Indique le champ à utilisée pour la date dans la requête
            </summary>
            <param name="periodType">Type de période</param>
            <returns>Le champ correspondant au type de période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAnalysisDataAccess.GetMediaFields(TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails)">
            <summary>
            Obtient les champs correspondants au détail media demandée par le client.
            Les champs demandées corespondent à l'identifiant et le libellé du niveau support
            </summary>
            <param name="preformatedMediaDetail">Niveau du détail media demandé</param>
            <returns>Chaîne contenant les champs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAnalysisDataAccess.GetOrderMediaFields(TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails)">
            <summary>
            Obtient les champs correspondants au détail media demandée par le client.
            Les champs demandées corespondent à l'identifiant et le libellé du niveau support
            </summary>
            <param name="preformatedMediaDetail">Niveau du détail media demandé</param>
            <returns>Chaîne contenant les champs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAnalysisDataAccess.GetMediaTable(TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails)">
            <summary>
            Obtient les nom des tables à utiliser lors d'un détail media
            </summary>
            <param name="preformatedMediaDetail">Niveau du détail media demandé</param>
            <returns>Chaîne contenant les tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAnalysisDataAccess.GetMediaJoinConditions(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Obtient les nom des tables à utiliser lors d'un détail media
            </summary>
            <param name="webSession">Session client</param>
            <param name="dataTablePrefixe">Prefixe de la table de résultat</param>
            <param name="beginByAnd">La condition doit commencée par And</param>
            <returns>Chaîne contenant les tables</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.AlertsInsertionsCreationsDataAccess">
            <summary>
            Extrait le détail des insertions publicitaires dans un support pour les Alertes mail
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.AlertsInsertionsCreationsDataAccess.GetData(TNS.FrameWork.DB.Common.IDataSource,System.String,System.String,System.String,System.String,System.Int64,System.String)">
            <summary>
            Extrait le détail des insertions publicitaires dans un média 
            	Extraction de la table attaquée et des champs de sélection à partir du vehicle
            	Construction et exécution de la requête
            	
            </summary>
            <param name="dataSource">Source de données</param>		
            <param name="dateBegin">Date de début de l'étude</param>
            <param name="dateEnd">Date de fin de l'étude</param>
            <param name="idMedia">Identifiant du support </param>
            <param name="idProduct">Identifiant du produit </param>
            <param name="idVehicle">Identifiant du média (Vehicle) sélectionné par le client</param>
            <param name="siteLanguage">Language du site</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand on ne sait pas quelle table attaquer, quels champs sélectionner ou quand une erreur Oracle s'est produite
            </exception>
            <returns>DataSet contenant le résultat de la requête</returns>
            <remarks>
            Utilise les méthodes:
            	- <code>private static string GetFields(DBClassificationConstantes.Vehicles.names idVehicle,WebSession webSesssion,bool isMediaDetail)</code> : obtient les champs de la requête.
            	- <code>private static string GetTables(DBClassificationConstantes.Vehicles.names idVehicle,WebConstantes.CustomerSessions.PreformatedDetails.PreformatedMediaDetails preformatedMediaDetail)</code> : obtient les tables de données pour la requête
            	- <code>private static void GetJoinConditions(WebSession webSession,StringBuilder sql,DBClassificationConstantes.Vehicles.names idVehicle,string dataTablePrefixe,bool beginByAnd)</code> : obtient les jointures de la requête
            	- <code> public static string TNS.AdExpress.Web.DataAccess.GetInsertionsOrder(DBClassificationConstantes.Vehicles.names idVehicle,WebSession webSesssion,bool isMediaDetail,string prefixeMediaPlanTable)</code> : obtient liodre de tri des résultats
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.AlertsInsertionsCreationsDataAccess.GetIdVehicle(TNS.FrameWork.DB.Common.IDataSource,System.String,System.String)">
            <summary>
            Obtient le média (vehicle) correspondant au support sélectionné.
            </summary>
            <param name="dataSource">Source de données</param>
            <param name="idMedia">Identifiant support</param>
            <param name="siteLanguage">Language du site</param>
            <returns>Média (vehicle)</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.AlertsInsertionsCreationsDataAccess.GetProductInformations(TNS.FrameWork.DB.Common.IDataSource,System.String,System.String)">
            <summary>
            Obtient les informations du produit
            </summary>
            <param name="dataSource">Source de données</param>
            <param name="idProduct">Identifiant du produit</param>
            <param name="siteLanguage">Langue du site</param>
            <returns>informations du produit</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.AlertsInsertionsCreationsDataAccess.GetSqlFields(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obetient les champs de la requête
            </summary>
            <param name="webSession"></param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.AlertsInsertionsCreationsDataAccess.GetSqlTables(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obetient les tables de la requête
            </summary>
            <param name="webSession">Session client</param>
            <returns>Tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.AlertsInsertionsCreationsDataAccess.GetFields(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String)">
            <summary>
            Donne les champs à traiter pour le détail des insertions.
            </summary>
            <param name="idVehicle">Identifiant du média</param>
            <param name="prefixeMediaPlanTable">prfixe table média (vehicle)</param>
            <returns>Chaine contenant les champs à traiter</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.AlertsInsertionsCreationsDataAccess.GetTables(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
             <summary>
            Obtient les tables correspondants au détail media demandée par le client. 
             </summary>
             <param name="idVehicle">Identifiant du média (vehicle)</param>			
             <returns>Chaîne contenant les tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.AlertsInsertionsCreationsDataAccess.GetMediaTables">
            <summary>
            Obtient les tables médias correspondants au détail media demandée par le client. 
            </summary>
            <returns>Chaîne contenant les tables médias</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.AlertsInsertionsCreationsDataAccess.GetJoinConditions(System.Text.StringBuilder,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String,System.Boolean,System.String)">
            <summary>
            Obtient les jointures à utiliser lors d'un détail media
            </summary>
            <param name="sql">requete sql</param>
            <param name="idVehicle">Identifiant média (vehicle)</param>
            <param name="dataTablePrefixe">prefixe table média</param>
            <param name="beginByAnd">Vrai si la condition doit commencée par And</param>
            <param name="siteLanguage">Language du site</param>
            <returns>requete sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.AlertsInsertionsCreationsDataAccess.GetMediaJoinConditions(System.String,System.Boolean,System.String)">
            <summary>
            Obtient les jointures média à utiliser lors d'un détail media
            </summary>
            <param name="siteLanguage">Language du site</param>
            <param name="dataTablePrefixe">Prefixe de la table de résultat</param>
            <param name="beginByAnd">Vrai si la condition doit commencée par And</param>
            <returns>Chaîne contenant les tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.AlertsInsertionsCreationsDataAccess.GetInsertionsOrder(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String)">
            <summary>
            Donne l'ordre de tri des enregistrements extraits
            </summary>
            <param name="idVehicle">Identifiant du vehicle</param>
            <param name="prefixeMediaPlanTable">prefixe table média</param>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaCreationDataAccessException">
            Lancée quand le cas du vehicle spécifié n'est pas traité
            </exception>
            <returns>Chaine contenant les champs de tris</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Selections.Grp.WavesSystem">
            <summary>
            Sélection des vagues APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Selections.Grp.WavesSystem.GetWaves(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Obtient une vague automatiquement en fonction de la date de début sélectionnée par le client.
            </summary>
            <param name="webSession">sesion du client</param>
            <param name="dataSource">source de données</param>
            <returns>vague sélectionnée</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.SelectionWebPage">
            <summary>
             Classe de base pour les pages de sélection
             </summary>
              <since>02/08/2006</since>
              <author>G. Facon</author>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.SelectionWebPage.#ctor">
            <author>G. Facon</author>
              <since>02/08/2006</since>
            <summary>
             Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.SelectionWebPage.SelectionWebPage_Load(System.Object,System.EventArgs)">
            <summary>
            Chargement de la page
            </summary>
            <param name="sender">Objet Source</param>
            <param name="e">Arguments</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.SelectionWebPage.ValidateSelection(System.Object,System.EventArgs)">
            <summary>
            Méthode de validation de la Sélection
            </summary>
            <param name="sender">Objet Source</param>
            <param name="e">Arguments</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.SelectionWebPage.GetNextUrlFromMenu">
            <summary>
            Obtient l'url suivante à partir du menu
            </summary>
            <returns>Url suivante</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.MarketShareUI">
            <summary>
            UI alerte de potentiels
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MarketShareUI.GetHtml(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code Html pour l'alerte de potentiels
            </summary>
            <returns>Code Html</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MarketShareUI.GetExcel(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code Excel pour l'alerte de potentiels
            </summary>
            <returns>Code Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.MarketShareUI.GetRawExcel(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Génère le code Excel des données brutes pour l'alerte de potentiels
            </summary>
            <returns>Code Raw Excel</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.InfoNewsUI">
            <summary>
            Classe utilisé pour l'affichage des plaquettes info/news
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.InfoNewsUI.GetHtml(System.Web.UI.Page,System.Collections.ArrayList)">
            <summary>
            Fonction pour la construction du code html pour l'affichage des plaquettes infos/news
            </summary>
            <returns>Source html du résultat</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.IndicatorMediaStrategyUI">
            <summary>
            IHM: Tableau de la stratégie média des indicateurs
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorMediaStrategyUI.GetIndicatorMediaStrategyHtmlUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Crée le code HTML pour afficher le tableau de la répartition média sur le total de la période 
            contenant les éléments ci-après :
            en ligne :
            -le total famille (en option uniquement en sélection de groupe/variétés) ou le
            total marché (en option)
            -les éléments de références
            -les éléments concurrents 
            en colonne :
            -Les investissements de la période N
            -une PDM (part de marché ) exprimant la répartition media en %
            -une évolution N vs N-1 en % (uniquement dans le cas d'une étude comparative)
            -le 1er annonceur en Keuros uniquement  pour les lignes total produits éventuels
            -la 1ere référence en Keuros uniquement  pour les lignes total produits éventuels
            Sur la dimension support le tableau est décliné de la façon suivante :
            -si plusieurs media, le tableua sera décliné par media
            -si un seul media, le tableau sera décliné par media, catégorie et supports
            </summary>				
            <param name="page">Page qui affiche les statégies média</param>
            <param name="tab">tableau des résultats</param>	
            <param name="webSession">Session du client</param>
            <param name="excel">booléen pour sortie html ou excel</param>	
            <returns>Code HTML</returns>		
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorMediaStrategyUI.GetIndicatorMediaStrategyExcelUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,System.Boolean)">
            <summary>
            Sortie Excel du tableau de résultats
            Cette procédure appelle celle qui génère le code HTML :
            <code>t.Append(getIndicatorMediaStrategyHtmlUI(page,tab,webSession,true))</code>
            Puis formatte le résultat dans un formulaire excel.
            </summary>
            <param name="page">page qui affiche les résultats</param>
            <param name="tab">tabelau de résultats</param>
            <param name="webSession">session client</param>
            <param name="excel">booléen pour sortie html ou excel</param>
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.MediaPlanAlertRules">
            <summary>
            Class métier de traitement des données issues de la base pour une analyse plan media
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanAlertRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Fonction qui formate un DataSet en Calendrier d'actions sur une période
            </summary>
            <param name="webSession">Session du client</param>
            <param name="period">Periode d'étude</param>
            <returns>Tableau Formaté</returns>
            <remarks>
            Utilise les méthodes:
            	public static object[,] TNS.AdExpress.Web.Rules.Results.MediaPlanAlertRules.getFormattedTable(WebSession webSession, string beginningPeriod, string endPeriod)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.MediaPlanAlertRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Fonction qui formate un DataSet en Calendrier d'actions à partie d'une date de debut et d'une date de fin:
            	Calcul des dates de début et de fin de calendrier
            	Extraction des données de la BD
            	Extraction du nombre de vbehicle et de category des données renvoyées
            	Création d'un tableau repertoriant tous les jours
            	Initialisation des tableaux tab(résultat), tabCategoryIndex(index des lignes catégorie pour les pdm et les totaux), tabVehicleIndex(index des lignes média pour les pdm et les totaux)
            	Construction des libellé des périodes dans tab
            	Remplissage du tableau avec les chiffres (totaux) pour les supports et calculs des totaux vehicle et categorie(1 ligne = 1 vehicle OU 1catégorie OU 1 support)
            	Calcul des PDM vehicle, support et catégorie et total
            	Calcul de la périodicité
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningPeriod">Date de début</param>
            <param name="endPeriod">Date de fin</param>
            <returns>Tableau Formaté</returns>
            <remarks>
            Utilise les méthodes:
            	public static DateTime TNS.AdExpress.Web.Functions.Dates.getPeriodBeginningDate(string period, TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type periodType)
            	public static DateTime TNS.AdExpress.Web.Functions.Dates.getPeriodEndDate(string period, TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type periodType)
            	public static DataSet TNS.AdExpress.Web.DataAccess.Results.MediaPlanAlertDataAccess.getPluriMediaDataset(WebSession webSession, string beginningDate, string endDate)
            </remarks>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.IndicatorSynthesisRules">
            <summary>
            Traite les données synthétiques des indicateurs sectorielles.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSynthesisRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Traite les données de synthèse indicateurs.
            </summary>
            <param name="webSession">Session du client</param>
            <returns>tableau  de résultats des synthèses indicatuers.</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSynthesisRules.ComputeBudget(System.Object[0:,0:],System.Data.DataTable,System.Int32,System.Boolean)">
            <summary>
            Calcule le budget en fonction de l'univers
            </summary>
            <param name="tab">tableau de résultats</param>
            <param name="dt">table d données</param>
            <param name="lineIndex">index ligne du tableau</param>
            <param name="comparativeStudy">Vrai si étude comparative</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSynthesisRules.ComputeAverageBudget(System.Object[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calcule le budget Moyen en fonction de l'univers par produit ou annonceur.
            </summary>
            <param name="tab">tableau de résultats</param>
            <param name="totalInvestLineIndex">index ligne total investissement</param>
            <param name="nbAdvertLineIndex">index ligne nombre d'éléments</param>
            <param name="averageInvestLineIndex">index ligne budget moyen</param>
            <param name="columnLineIndex">index colonne courante</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSynthesisRules.ComputePDV(System.Object[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calcule du PDV
            </summary>
            <param name="tab">tableau de résultats</param>
            <param name="childLineIndex">index line sous total</param>
            <param name="parentLineIndex">index line total</param>
            <param name="pdvLineIndex">index line pdv</param>
            <param name="columnIndex">index colonne</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSynthesisRules.ComputeEvolAndEcart(System.Object[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calcule Evolution et ecart  année N par rapport à année N-1
            </summary>
            <param name="tab">tableau de résultats</param>
            <param name="lineIndex">index ligne courante</param>
            <param name="total_N_Column">index colonne année N</param>
            <param name="total_N1_Column">index colonne année N-1</param>
            <param name="evolColumn">index colonne evolution</param>
            <param name="ecartColumn">index colonne ecart</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorSynthesisRules.hasData(System.Data.DataTable,System.Data.DataTable,System.Data.DataTable,System.Data.DataTable,System.Data.DataTable)">
            <summary>
            Vérifie qu'il ya des données à traiter.
            </summary>
            <param name="dtUniversTotal">Données total sélection</param>
            <param name="dtSectorTotal">Données total famille</param>
            <param name="dtMarketTotal">Données total marché</param>
            <param name="dtNbRef">Données nombre de références</param>
            <param name="dtNbAdvert">Données nombre d'annonceurs</param>
            <returns>Vrai si présenece de données.</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules">
            <summary>
            Classe métier ("Rules") pour l'indicateur Stratégie Média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion)">
             <summary>
             La répartition média sur le total de la période dans un tableau
             contenant les éléments ci-après :
             en ligne :
             -le total famille (en option uniquement en sélection de groupe/variétés) ou le
             total marché (en option)
             -les éléments de références
             -les éléments concurrents 
             en colonne :
             -Les investissements de la période N
             -une PDM (part de marché ) exprimant la répartition media en %
             -une évolution N vs N-1 en % (uniquement dans le cas d'une étude comparative)
             -le 1er annonceur en Keuros uniquement  pour les lignes total produits éventuels
             -la 1ere référence en Keuros uniquement  pour les lignes total produits éventuels
             Sur la dimension support le tableau est décliné de la façon suivante :
             -si plusieurs media, le tableau sera décliné par media
             -si un seul media, le tableau sera décliné par media, catégorie et supports
             </summary>
             <param name="webSession">session du client</param>
            <param name="comparisonCriterion">critère de comparaison</param>		
             <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.GetChartFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion)">
             <summary>
             La répartition média sur le total de la période dans un tableau
             contenant les éléments ci-après :
             en ligne :
             -le total famille (en option uniquement en sélection de groupe/variétés) ou le
             total marché (en option)
             -les éléments de références
             -les éléments concurrents 
             en colonne :
             -Les investissements de la période N		
             Sur la dimension support le tableau est décliné de la façon suivante :
             -si plusieurs media, le tableau sera décliné par media
             -si un seul media, le tableau sera décliné par media, catégorie et supports
             </summary>
             <remarks>Cette méthode est utilisée pour la présentation graphique des résultats.</remarks>
             <param name="webSession">session du client</param>
            <param name="comparisonCriterion">critère de comparaison</param>		
             <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.FillAdvertisers(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Data.DataTable,System.Data.DataRow[],System.String@,System.String@,System.Collections.Hashtable@,System.Collections.Hashtable@,System.Int32@,System.String,System.String,System.String,System.String,System.String,System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails,System.Boolean)">
            <summary>
            Obtient les annonceurs de référence ou concurrents au niveau d'une catégorie ou d'un média(support).
            </summary>
            <param name="webSession"></param>
            <param name="tab">session du client</param>
            <param name="dtTotalMarketOrSector">tableau de données annonceurs total</param>
            <param name="foundRows">liste d'annonceurs</param>
            <param name="AdvertiserInvest">investissement par annonceur</param>
            <param name="AdvertiserInvest_N1">investissement par annonceur année précédente</param>
            <param name="hPdmParentAdvert">PDM élément parent</param>
            <param name="hPdmChildAdvert">PDM élément enfant</param>
            <param name="indexTabRow">index ligne tableau</param>
            <param name="idVehicle">Identifiant média</param>
            <param name="Vehicle">Libellé média</param>
            <param name="idCategory">identifiant catégorie</param>
            <param name="Category">Libellé catégorie</param>
            <param name="idMedia">identifiant support</param>
            <param name="Media">Libellé support</param>
            <param name="preformatedMediaDetails">niveau de détail média</param>
            <param name="isPluri">vrai si plurimédia</param>
            <returns>Tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.FillAdvertisers(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Data.DataTable,System.Data.DataTable,System.String,System.String,System.Collections.Hashtable@,System.Collections.Hashtable@,System.Int32@,System.String,System.String,System.String,System.String,System.String,System.String,System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails)">
            <summary>
            Obtient les annonceurs de référence ou concurrents au niveau d'une catégorie ou d'un média(support).
            </summary>
            <param name="webSession">session du client</param>
            <param name="tab">tableau de résultats</param>
            <param name="dtAdvertiser">tableau de données annonceurs</param>
            <param name="dtTotalMarketOrSector">tableau de données annonceurs total</param>
            <param name="expression">expression de sélection</param>
            <param name="filter">expression de filtrage</param>
            <param name="hPdmVehAdvert">PDM annonceur par média (vehicle)</param>
            <param name="hPdmCatAdvert">PDM annonceur par catégorie</param>
            <param name="indexTabRow">index ligne tableau</param>
            <param name="idVehicle">ID média (vehicle)</param>
            <param name="Vehicle">Libellé média (vehicle)</param>
            <param name="idCategory">ID catégorie </param>
            <param name="Category">libellé catégorie</param>
            <param name="idMedia">ID support</param>
            <param name="Media">libellé support</param>
            <param name="idAdvertiser">ID annonceur</param>
            <param name="preformatedMediaDetails">niveau de détail média</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.FillAdvertisers(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Data.DataTable,System.Data.DataTable,System.String,System.String,System.String,System.Collections.ArrayList,System.Collections.Hashtable@,System.Collections.Hashtable@,System.String@,System.String@,System.Int32@,System.String,System.String,System.String,System.Boolean,System.Boolean@)">
            <summary>
            Obtient les annonceurs de référence ou concurrents au niveau d'un vehicle (média) ou plurimédia.
            </summary>
            <param name="webSession">session du client</param>
            <param name="tab">tableau de résultats</param>
            <param name="dtAdvertiser">tableau de données annonceurs</param>
            <param name="dtTotalMarketOrSector">tableau de données annonceurs total</param>
            <param name="expression">expression de sélection</param>
            <param name="expressionPreviuousYear">expression de sélection année précédente</param>
            <param name="filter">filtre de données</param>
            <param name="inAdvertVehicleAlreadyUsedArr">média déjà traités</param>
            <param name="hPdmVehAdvert">PDM média (vehicle)</param>
            <param name="hPdmTotAdvert">PDM total</param>
            <param name="AdvertiserInvestByVeh">investissement annonceur par vehicle(media)</param>
            <param name="AdvertiserInvestByVeh_N1">investissement annonceur par vehicle(media) année précédente</param>
            <param name="indexTabRow">index ligne du tableau</param>
            <param name="VehicleAccessList">liste des média</param>
            <param name="idVehicle">identifiant des média</param>
            <param name="Vehicle">libellé du vehicle</param>
            <param name="isPluri">vrai si plurimédia</param>
            <param name="hasAdvertiser">vrai si possède des annonceurs</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.ComputeInvestPdmEvol(System.Data.DataTable,System.String@,System.String@,System.String@,System.String@,System.String@,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Calcule les investissements,PDM et l'evolution pour chaque média.
            </summary>
            <param name="dt">Table de données</param>
            <param name="totalInvestParent">Investissement du média parent</param>
            <param name="totalInvestChild">Investissement du média fils</param>
            <param name="totalInvestChildPreviousYear">Investissement du média fils année précédente</param>
            <param name="mediaPDM">PDM média</param>	
            <param name="evolution">evolution</param>
            <param name="expression">expression selection lignes tables de données</param>
            <param name="expressionPreviuousYear">expression selection lignes tables de données année précédente</param>
            <param name="filter">expression filtrage des données</param>	
            <param name="comparativeStudy">vrai si étude comparative</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.FillTabInvestPdmEvol(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int32,System.String,System.String,System.Boolean,System.String,System.String,System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion,TNS.AdExpress.Constantes.FrameWork.Results.MediaStrategy.InvestmentType,TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails)">
            <summary>
            Remplit chaque ligne du tableau de résultats avec
            Investissement pour un total univers ou marché ou famille, ou un annonceur de référence ou concurrent,
            par média ou catégorie ou support
            </summary>
            <param name="webSession">session client</param>
            <param name="tab">tableau de résultats</param>
            <param name="indexTabRow">index ligne du tableau</param>
            <param name="idVehicle">identifiant média</param>
            <param name="Vehicle">libéllé média</param>		
            <param name="plurimedia">vrai si sélection plurimédia</param>
            <param name="Invest">investissement en Keuros soit pour un total univers ou marché ou famille, 
            ou un annonceur de référence ou concurrent</param>
            <param name="PDM">Part de marché</param>
            <param name="Evolution">Evolution période N par rapport à N-1</param>
            <param name="comparisonCriterion">total marché ou famille ou univers</param>
            <param name="investmentType">investissement total famille ou marché ou univers, ou pour un annonceur de référence ou concurrent</param>
            <param name="preformatedMediaDetail">niveau de détail média</param>
            <returns>tableau de résultats</returns>		
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.FillTabInvestPdmEvol(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion,TNS.AdExpress.Constantes.FrameWork.Results.MediaStrategy.InvestmentType,TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails)">
            <summary>
            Remplit chaque ligne du tableau de résultats avec
            Investissement pour un total univers ou marché ou famille, ou un annonceur de référence ou concurrent,
            par média ou catégorie ou support
            </summary>
            <param name="webSession">session client</param>
            <param name="tab">tableau de résultats</param>
            <param name="indexTabRow">index ligne du tableau</param>
            <param name="idVehicle">identifiant média</param>
            <param name="Vehicle">libéllé média</param>
            <param name="idCategory">identifiant catégorie</param>
            <param name="Category">libéllé catégorie</param>
            <param name="idMedia">identifiant support</param>
            <param name="Media">libéllé support</param>
            <param name="idRefOrCompetAdvertiser">identifiant annonceur de référence ou concurrent</param>
            <param name="RefOrCompetAdvertiser">libéllé annonceur de référence ou concurrent</param>
            <param name="plurimedia">vrai si sélection plurimédia</param>
            <param name="Invest">investissement en Keuros soit pour un total univers ou marché ou famille, 
            ou un annonceur de référence ou concurrent</param>
            <param name="PDM">Part de marché</param>
            <param name="Evolution">Evolution période N par rapport à N-1</param>
            <param name="comparisonCriterion">total marché ou famille ou univers</param>
            <param name="investmentType">investissement total famille ou marché ou univers, ou pour un annonceur de référence ou concurrent</param>
            <param name="preformatedMediaDetail">niveau de détail média</param>
            <returns>tableau de résultats</returns>		
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.FillTabFisrtElmt(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Object[0:,0:],TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion,System.String,System.Int32@,System.Boolean)">
            <summary>
            Remplit chaque ligne du tableau de résultats avec
            Investissement les données du premier annonceur ou référence de chauqe média.
            </summary>
            <param name="webSession">session</param>
            <param name="tab">tableau de résultats</param>
            <param name="comparisonCriterion">critère de comparaison</param>
            <param name="TotalMarketOrSectorInvest">investissement total</param>
            <param name="indexTabRow">index des lignes du tableau résultas</param>
            <param name="increment">vrai si change de ligne</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.FillTabFisrtElmt(System.Object[0:,0:],System.String@,System.Data.DataTable,System.Data.DataTable,System.String,System.String,System.Collections.ArrayList@,System.Int32@,System.Boolean,System.Boolean)">
            <summary>
            Remplit chaque ligne du tableau de résultats avec
            Investissement les données du premier annonceur ou référence de chauqe média.
            </summary>	
            <param name="tab">tableau de résultats</param>
            <param name="totalInvestChild">Investissement du média fils</param>		
            <param name="dt1stAdvertiser">Table de données premier annonceur</param>
            <param name="dt1stProduct">Table de données premiere référence</param>
            <param name="idElement">identifiant du média</param>
            <param name="LabelElement">libellé du média</param>
            <param name="inMediaAlreadyUsedArr">Médias déjà traités</param>
            <param name="indexTabRow">index des lignes du tableau résultas</param>
            <param name="increment">vrai si la ligne doit être incrémentée</param>
            <param name="isPluri">vrai si plurimédia</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.FillTabFisrtElmt(System.Object[0:,0:],System.Int32,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,System.String,System.String,System.Data.DataTable,System.Boolean)">
            <summary>
            Remplit chaque ligne du tableau de résultats concernant les totaux
            univers ou famille ou marché par les libéllés des annonceurs de référence
            ou concurrentsainsi que leurs investissements en Keuros.
            </summary>
            <param name="tab">tableau de résultats</param>
            <param name="indexTabRow">index ligne du tableau</param>		
            <param name="elementType">référence ou annonceur</param>
            <param name="dtFirstElmt">table de données</param>
            <param name="idMedia">identifiant du média (média ou catégorie ou support)</param>
            <param name="idMediaName">libellé du média</param>
            <param name="pluri">booléen pour préciser s'il s'agit d'une sélection mono ou plurimédia</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.FillTabFirstElmt(System.Object[0:,0:],System.Int32,System.String,System.String,System.String,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType)">
            <summary>
            Remplit chaque ligne du tableau de résultats concernant les totaux
            univers ou famille ou marché par les libéllés des annonceurs de référence
            ou concurrentsainsi que leurs investissements en Keuros.
            </summary>
            <param name="tab">tableau de résultats</param>
            <param name="indexTabRow">index ligne du tableau</param>
            <param name="idElement">identifiant annonceur de référence ou concurrent</param>
            <param name="LabelElement">libéllé annonceur de référence ou concurrent</param>
            <param name="InvestElement">investissement annonceur de référence ou concurrent</param>
            <param name="elementType">référence ou annonceur</param>
            <returns>tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.Get1stElmtDataTbleByMedia(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable@,System.Data.DataTable@,System.Data.DataTable@,System.Data.DataTable@,System.Data.DataTable@,System.Data.DataTable@,TNS.AdExpress.Constantes.Web.CustomerSessions.ComparisonCriterion,TNS.AdExpress.Constantes.FrameWork.Results.MediaStrategy.MediaLevel)">
            <summary>
            Récupère les tables de données pour les 1ers annonceurs ou références par média
            </summary>
            <param name="webSession">session du client</param>
            <param name="dt1stProductByVeh">table de données 1ere référence par média </param>
            <param name="dt1stAdvertiserByVeh">table de données 1er annonceur par média</param>
            <param name="dt1stProductByCat">table de données 1ere référence par catégorie</param>
            <param name="dt1stAdvertiserByCat">table de données 1er annonceur par catégorie</param>
            <param name="dt1stProductByMed">table de données 1ere référence par support</param>
            <param name="dt1stAdvertiserByMed">table de données 1ere référence par annonceur</param>
            <param name="comparisonCriterion">critère de comparaisonn (univers,marché,famille)</param>
            <param name="mediaLevel">niveau média</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.TabInstance(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Data.DataTable,System.Data.DataTable,System.String,System.Int32)">
            <summary>
            Initialise le tableau de résultas des répartion média en investissments.
            </summary>
            <param name="webSession">session du client </param>
            <param name="dtTotal">table de données total famille ou marché</param>
            <param name="dtAdvertiser">table de données annonceurs de références ou concurrents</param>		
            <param name="VehicleAccessList">média en accès</param>
            <param name="NB_MAX_COLUMNS">nombre max de colonne dans tableau</param>
            <returns>instance tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.SwitchMedia(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Détermine le niveau Média (Média ou catégorie ou support)
            </summary>
            <param name="webSession">session client</param>		
            <returns>niveau média</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.TreatCategory(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Un traitement peut être affectué si sélection média est au niveau catégorie
            </summary>
            <param name="webSession">session du client</param>
            <returns>vrai si niveau catégorie</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorMediaStrategyRules.TreatMedia(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Un traitement peut être affectué si on la session contient le niveau support
            </summary>
            <param name="webSession">session du client</param>
            <returns>vrai si niveau catégorie</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.Dates">
            <summary>
            Ensemble de fonctions de traitement de période
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.updateWebSessionDates(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Fonction qui les a jour les dates de debut et de fin de periodes dans la session en fonction du type de période sélectionné et de la longueur de la période
            </summary>
            <param name="webSession">Session utilisateur</param>
            <returns>Date de début et de fin de périodes</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.getPeriodTxt(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Transforme une periode  sous forme YYYYMM ou YYYYSS en "Month, Yeaar" ou "Week nn, Year"
            </summary>
            <param name="webSession">Session utilisateur</param>
            <param name="period">Période à "traduire"</param>
            <returns>"Month, Year" ou "Week nn, Year"</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.getDayOfWeek(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Retourne la première lettre du jour de la semaine dans la langue en cours 
            </summary>
            <param name="webSession">Session client</param>
            <param name="dayOfWeek">jour de la semaine</param>
            <returns>première lettre du jour de la semaine</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.getDay(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Retourne le jour de la semaine dans la langue en cours 
            </summary>
            <param name="webSession">Session client</param>
            <param name="dayOfWeek">jour de la semaine en anglais</param>
            <returns>jour de la semaine dans la langue en cours </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.dateToString(System.DateTime,System.Int32)">
            <summary>
            Fonction qui formate une date en chaine de caractère en fonction d'un langage
            </summary>
            <param name="date">Date à formater</param>
            <param name="language">Langage de traduction</param>
            <returns>dd/MM/YYYY ou MM/dd/YYYY suivant la langue</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.getPeriodBeginningDate(System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type)">
            <summary>
            Foction qui extrait à partir d'une période et d'un type de période la date de début de cette période
            </summary>
            <param name="period">Période dont on veut la date de début</param>
            <param name="periodType">Type de période considérée</param>
            <returns>Date de début de period</returns>
            <remarks>
            Utilise la classe:
            	public TNS.FrameWork.Date.AtomicPeriodWeek
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.getPeriodEndDate(System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type)">
            <summary>
            Fonction qui extrait à partir d'une période et d'un type de période la date de fin de cette période
            </summary>
            <param name="period">Période dont on veut la date de fin</param>
            <param name="periodType">Type de période considérée</param>
            <returns>Date de fin de period</returns>
            <remarks>
            Utilise la classe:
            	public TNS.FrameWork.Date.AtomicPeriodWeek
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.CheckPeriodValidity(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Vérification de la validité de la fin de la période en fonction de la fréquence de livraison des données dans le module
            </summary>
            <param name="webSession">Session du client</param>
            <param name="EndPeriod">Période de fin</param>
            <returns>Période de fin</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.getPeriodLabel(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type)">
            <summary>
             Affichage de la période dans les tableaux dynamiques en fonction de l'année choisie
            </summary>
            <param name="webSession">Session client</param>
            <param name="period">period</param>
            <returns>Période dans les tableaux dynamiques en fonction de l'année choisie</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.switchPeriod(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Affichage de la période dans les tableaux dynamiques
            </summary>
            <param name="webSession">Session client</param>
            <param name="beginPeriod">Début de la période</param>
            <param name="endPeriod">Fin de la période</param>
            <returns>Retourne la période sélectionnée</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.DownloadDates(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String@,System.String@,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type)">
            <summary>
            Dates de chargement des données
            </summary>
            <param name="webSession">session du client</param>
            <param name="PeriodBeginningDate">date de début</param>		
            <param name="PeriodEndDate">date de fin</param>
            <param name="periodType">type de période</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.WebSessionSaveDownloadDates(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String@,System.String@)">
            <summary>
            Dates de chargement des données sauvegardées
            </summary>
            <param name="webSessionSave">session du client sauvegardée</param>
            <param name="PeriodBeginningDate">date de début </param>
            <param name="PeriodEndDate">date de fin</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.IsPeriodActive(System.Double,TNS.FrameWork.Date.AtomicPeriodWeek,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type)">
            <summary>
            Vérifie si une période peut être traitée
            </summary>
            <param name="currentWeek">semaine courante</param>
            <param name="week">semaine </param>
            <param name="periodType">type de période</param>
            <returns>vrai si période active</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.LastLoadedMonth(System.String@,System.String@,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type)">
            <summary>
            Dernier mois chargé
            </summary>
            <param name="PeriodBeginningDate">date de début</param>		
            <param name="PeriodEndDate">date de fin</param>	
             <param name="periodType">type de période</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.LastLoadedWeek(System.String@,System.String@)">
            <summary>
            Derniere semaine chargée
            </summary>
            <param name="PeriodBeginningDate">date de début</param>		
            <param name="PeriodEndDate">date de fin</param>			
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.GetFirstDayNotEnabled(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.Int32,TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Renvoie le premier jour du calendrier à partir duquel les données ne sont pas encore chargées
            </summary>
            <returns>Le premier jour du calendrier à partir duquel les données ne sont pas encore chargées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.GetPreviousYearDate(System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.DisplayLevel)">
            <summary>
            Obtient la date de l'année précédente  sous forme YYYYMM ou YYYYWW
            </summary>
            <param name="period">date de l'année en cours sous forme YYYYMM ou YYYYWW</param>
            <param name="detailPeriod">niveau de détail de la période (ex. mois ou semaine)</param>
            <returns>date de l'année précédente  sous forme YYYYMM ou YYYYWW</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.GetTimeSlice(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Web.Repartition.timeInterval)">
            <summary>
            This function returns the time slice 
            </summary>
            <param name="webSession">session of the client</param>
            <param name="timeSlice">time slice</param>
            <returns>string time slice</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.GetFormat(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Web.Repartition.Format)">
            <summary>
            This function returns the format of the spot
            </summary>
            <param name="webSession">session of the client</param>
            <param name="format">format spot</param>
            <returns>string format</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.ConvertToNextToLastYear(System.String)">
            <summary>
            Convertit si nécessaire l'année de la date en année avant année précédente
            </summary>
            <param name="date">date</param>
            <returns>date</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.GetYearSelected(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String@,System.Int32@,System.DateTime)">
            <summary>
            Obtient l'identifiant de l'année sélectionnée  : 0==N , 1==N-1,2==N-2
            </summary>
            <param name="webSession">session du client</param>
            <param name="YearSelected">année sélectionné</param>
            <param name="year">identifiant année sélectionné</param>
            <param name="PeriodBeginningDate">date de début</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.yearID(System.DateTime,TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
             Determine l'identifiant de l'année de l'étude : 0==N , 1==N-1,2==N-2
             </summary>
             <param name="PeriodDate">DateTime</param>		
            <param name="webSession">Session client</param>
             <returns>entier identifiant</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.CurrentActiveMonth(System.DateTime,TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
             Identifie le mois actif 
             </summary>
             <param name="PeriodEndDate">fin de la période</param>
            <param name="webSession">Session client</param>
             <returns>mois </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.GetMonthAlias(System.Int32,System.Int32,System.Int32,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les alias (lettres) d'un mois
            </summary>
            <param name="monthNumber">Identifiant du mois</param>
            <param name="YearSelected">année sélectionnée</param>
            <param name="numberOfChar">Nombre de caractères</param>
            <returns>Première lettres d'un mois</returns>
            <param name="webSession">Session client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.GetDateFromAlias(System.String)">
            <summary>
            Donne la date en fonction de l'alias MMMYY
            </summary>
            <param name="DateAlias">date MMMYY</param>		
            <returns>retourne la date </returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.Max(System.DateTime,System.DateTime)">
            <summary>
            Compare two dates and return the greater
            </summary>
            <param name="date1">First Date Param</param>
            <param name="date2">Second Date Parm</param>
            <returns>Greater Date</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.Min(System.DateTime,System.DateTime)">
            <summary>
            Compare two dates and return the smalelr
            </summary>
            <param name="date1">First Date Param</param>
            <param name="date2">Second Date Parm</param>
            <returns>Smaller Date</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.GetAbsoluteEndPeriod(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Int32)">
            <summary>
            Obtient la fin de la période en fonction de la fréquence de chargement des données
            </summary>
            <param name="webSession">Session du client</param>
            <param name="EndPeriod">fin de la période</param>
            <param name="divisor">diviseur</param>
            <returns>Fin de la période</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.getZoomBeginningDate(System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type)">
            <summary>
            Foction qui extrait à partir d'un zoom et d'un type de période la date de début de cette période zoom
            </summary>
            <param name="period">Zoom dont on veut la date de début</param>
            <param name="periodType">Type de période considérée</param>
            <returns>Date de début de zoom</returns>
            <remarks>
            Utilise la classe:
            	public TNS.FrameWork.Date.AtomicPeriodWeek
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.Dates.getZoomEndDate(System.String,TNS.AdExpress.Constantes.Web.CustomerSessions.Period.Type)">
            <summary>
            Fonction qui extrait à partir d'un zoom et d'un type de période la date de fin de cette période
            </summary>
            <param name="period">Zoom dont on veut la date de fin</param>
            <param name="periodType">Type de période considérée</param>
            <returns>Date de fin de zoom</returns>
            <remarks>
            Utilise la classe:
            	public TNS.FrameWork.Date.AtomicPeriodWeek
            </remarks>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.VersionUIException">
            <summary>
            VersionUIException thrown whenever an error occured in VersionUI
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VersionUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VersionUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.VersionUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SectorDataSeasonalityDataAccessException">
            <summary>
            Bases de données saisonnalité
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSeasonalityDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSeasonalityDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSeasonalityDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SectorAnalysisIndicatorDataAccessException">
            <summary>
            Base de données: Indicateurs
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorAnalysisIndicatorDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>		
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorAnalysisIndicatorDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorAnalysisIndicatorDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PeriodicityPlanDataAccessException">
            <summary>
            Base de données: Périodicité du plan
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PeriodicityPlanDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PeriodicityPlanDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PeriodicityPlanDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaAgencyException">
            <summary>
            Classe d'exception pour le dataAccess agence média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaAgencyException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaAgencyException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaAgencyException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MarketShareSystemException">
            <summary>
            Classe d'exception de la génération des données pour l'analyse plan média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MarketShareSystemException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MarketShareSystemException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MarketShareSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.IndicatorMediaStrategyException">
            <summary>
            Analyse sectorielle: Indicateurs
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.IndicatorMediaStrategyException.#ctor">
            <summary>
            Constructeur par défaut
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.IndicatorMediaStrategyException.#ctor(System.String)">
            <summary>
            Constructeur avec message
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.IndicatorMediaStrategyException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.GadSystemException">
            <summary>
            System: Gad
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.GadSystemException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.GadSystemException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.GadSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.DynamicRulesException">
            <summary>
            DynamicRulesException thrown whenever an error occured while processing data for dynamic analysis module
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CompetitorSystemException">
            <summary>
            Classe d'exception accès aux fonctionnalités alert concurrentielle
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorSystemException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorSystemException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAlerUI">
            <summary>
            UI:Classe d'exception de la génération des données pour l'alert plan média concurentiel
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAlerUI.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAlerUI.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorMediaPlanAlerUI.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.CompetitorAlertCreationsResultsUIException">
            <summary>
            IHM: Création de l'alerte concurrentielle
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorAlertCreationsResultsUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorAlertCreationsResultsUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.CompetitorAlertCreationsResultsUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Products.AdvertiserListDataAccess">
            <summary>
            Chargement de liste : annonceur, famille, classe, groupe, marques
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.Selections.Products.AdvertiserListDataAccess._dsListAdvertiser">
            <summary>
            
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.AdvertiserListDataAccess.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Charge la liste des annonceurs qui peuvent être sélectionnés
            </summary>
            <param name="webSession">Session client</param>
            <param name="newText">Texte</param>
            <param name="radioButtonHoldingCompany"></param>
            <param name="radiobuttonAdvertiser"></param>
            <param name="radiobuttonProduct"></param>
            <param name="radiobuttonAll"></param>
            <param name="listHoldingCompany"></param>
            <param name="listAdvertiser"></param>
            <param name="listProduct"></param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.AdvertiserListDataAccess.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            Charge la liste des famille classe groupe
            </summary>
            <param name="webSession">Session client</param>
            <param name="newText">Texte</param>
            <param name="radioButtonSector">bool pour dire si l'on a sélectionné une famille</param>
            <param name="radioButtonSubSector">bool pour dire si l'on a sélectionné une classe</param>
            <param name="radioButtonGroup">bool pour dire si l'on a sélectionné un group</param>
            <param name="radioButtonSegment"></param>
            <param name="listSector"></param>
            <param name="listSubSector"></param>
            <param name="listGroup"></param>
            <param name="listSegment"></param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.AdvertiserListDataAccess.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean,System.String)">
            <summary>
             Charge la liste des Marques qui peuvent être sélectionnés
            </summary>
            <param name="webSession">session du client</param>
            <param name="newText">texte</param>
            <param name="radioButtonBrand">bouton radio marque</param>
            <param name="listBrand">liste des marques</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.AdvertiserListDataAccess.LoadDataSet(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Chargement du DataSet
            </summary>
            <param name="webSession">Session</param>
            <param name="sql">SQL</param>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.Selections.Products.AdvertiserListDataAccess.DsListAdvertiser">
            <summary>
            Obtient la liste des vehicles visible par le client
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Core.MediaPlanItem">
            <summary>
            Informations contenues dans une cellule d'un plan media
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.MediaPlanItem._periodicityId">
            <summary>
            Périodicité de l'élément
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.MediaPlanItem._graphicItemType">
            <summary>
            Element graphique représentant la cellule dans un plan média
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Core.MediaPlanItem._unit">
            <summary>
            Valeur de l'investissement
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.MediaPlanItem.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.MediaPlanItem.#ctor(System.Int64)">
            <summary>
            Constructeur
            </summary>
            <param name="periodicityId">Périodicité de la cellule</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Core.MediaPlanItem.ToString">
            <summary>
            La périodicité sous forme de chaîne de caratères
            </summary>
            <returns>La périodicité sous forme de chaîne de caratères</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.MediaPlanItem.PeriodicityId">
            <summary>
            Définit ou obtient l'identifiant de la périodicité
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.MediaPlanItem.GraphicItemType">
            <summary>
            Définit ou obtient la façon d'afficher la cellule
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Core.MediaPlanItem.Unit">
            <summary>
            Définit ou obtient la valeur de l'unité contenue dans la cellule
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.CreativePresse">
            <summary>
             CreativeItem provides information for the display of a press creative
             </summary>
              <author>G Ragneau</author>
              <since>09/08/2007</since>
              <stereotype>entity</stereotype>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativePresse._pageNumber">
            <summary>
            Volume of the creative in page
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativePresse.#ctor(System.Int64)">
            <summary>Constructor</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativePresse.GetInstance(System.Data.DataRow,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Build instance of CreativeRadio using data containded in row
            </summary>
            <param name="row">Data container</param>
            <param name="session">Web Session</param>
            <returns>New CreativeItem Instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativePresse.FieldInstance(System.Data.DataRow,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Fill instance with data
            </summary>
            <param name="row">Data Container</param>
            <param name="item">item to fill</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativePresse.Render(System.Text.StringBuilder)">
            <summary>
            render creative
            </summary>
            <param name="output">Output</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativePresse.PageNumber">
            <summary>
            Get / Set Volume of the creative in page
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.PageNumberComparer">
            <summary>
             Creative Page Number Comparer
             </summary>
             <author>Guillaume.Ragneau</author>
             <since>lundi 10 septembre 2007 11:24:28</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.PageNumberComparer.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Page Number Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.PageNumberComparer.#ctor(System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Page Number Comparer Caption ID</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.PageNumberComparer.Compare(TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Compare two CreativeItem Page Numbers
            </summary>
            <param name="x">First creative item to compare</param>
            <param name="y">Second creative item to compare</param>
            <returns>-1 if x > y, 0 if equelas and 1 if y > x</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing">
            <summary>
             CreativeItem provides information for the display of a radio creative
             </summary>
              <author>G Ragneau</author>
              <since>09/08/2007</since>
              <stereotype>entity</stereotype>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing._media">
            <summary>
            Creative media
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing._weight">
            <summary>
            Creative Weight
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing._nbobjet">
            <summary>
            Creative  Object Number
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing._format">
            <summary>
            Creative Format
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing._mail_format">
            <summary>
            Creative Mail Format
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing._mail_type">
            <summary>
            Creatuive Mail type
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing._standard">
            <summary>
            Creative Standard
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing._rapidity">
            <summary>
            Creative Mailing rapidity
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing._mail_content">
            <summary>
            Creative Content
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing.#ctor(System.Int64)">
            <summary>Constructor</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing.GetInstance(System.Data.DataRow,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Build instance of CreativeRadio using data containded in row
            </summary>
            <param name="row">Data container</param>
            <param name="session">Web Session</param>
            <returns>New CreativeItem Instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing.FieldInstance(System.Data.DataRow,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Fill instance with data
            </summary>
            <param name="row">Data Container</param>
            <param name="item">item to fill</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing.Render(System.Text.StringBuilder)">
            <summary>
            render creative
            </summary>
            <param name="output">Output</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing.Media">
            <summary>
            Get / Set Creative media
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing.Weight">
            <summary>
            Get / Set Creative Weight
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing.Nbobjet">
            <summary>
            Get / Set Creative  Object Number
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing.Format">
            <summary>
            Get / Set Creative Format
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing.Mail_format">
            <summary>
            Get / Set Creative Mail Format
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing.Mail_type">
            <summary>
            Get / Set Creatuive Mail type
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing.Standard">
            <summary>
            Get / Set Creative Standard
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing.Rapidity">
            <summary>
            Get / Set Creative Mailing rapidity
            </summary>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeMailing.Mail_content">
            <summary>
            Get / Set Creative Content
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.SupportComparer">
            <summary>
             Creative Support Comparer
             </summary>
             <author>Guillaume.Ragneau</author>
             <since>lundi 20 septembre 2007 11:24:28</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.SupportComparer.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Support Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.SupportComparer.#ctor(System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="captionId">Product Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.SupportComparer.Compare(TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Compare two CreativeItem Supports
            </summary>
            <param name="x">First creative item to compare</param>
            <param name="y">Second creative item to compare</param>
            <returns>-1 if x > y, 0 if equelas and 1 if y > x</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.ObjectNumberComparer">
            <summary>
             Creative Object Number Comparer
             </summary>
             <author>Guillaume.Ragneau</author>
             <since>lundi 20 septembre 2007 11:24:28</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.ObjectNumberComparer.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Object Number Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.ObjectNumberComparer.#ctor(System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="captionId">Object Number Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.ObjectNumberComparer.Compare(TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Compare two CreativeItem Object Numbers
            </summary>
            <param name="x">First creative item to compare</param>
            <param name="y">Second creative item to compare</param>
            <returns>-1 if x > y, 0 if equelas and 1 if y > x</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Results.PdfFilesSystem">
            <summary>
            Accès aux données Fichiers resultats
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.BusinessFacade.Results.PdfFilesSystem._list">
            <summary>
            Liste de tous les éléments
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.PdfFilesSystem.GetHtml(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Accès à la construction du tableau déroulant Fichiers resultats
            </summary>
            <param name="page">Page en cours</param>
            <param name="webSession">Session</param>
            <param name="dataSource">Source de données</param>
            <returns>Code HTML du tableau déroulant Fichiers resultats</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Results.MediaPlanSystem">
            <summary>
            Construction d'un résultat pour un plan média.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.MediaPlanSystem.GetHtml(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.String,System.String)">
            <summary>
            Construction d'un résultat pour un plan média.
            </summary>
            <param name="page">page</param>
            <param name="webSession">session du client</param>
            <param name="dataSource">source de données</param>
            <param name="zoomDate">date</param>
            <param name="url">lien</param>
            <returns>HTML tableau de résultats</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.MediaPlanSystem.GetExcelUI(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.String,System.String,System.Boolean)">
            <summary>
            Construction d'un résultat pour un plan média au format excel.
            </summary>
            <param name="page">page</param>
            <param name="webSession">session du client</param>
            <param name="dataSource">source de données</param>
            <param name="zoomDate">date</param>
            <param name="url">lien</param>
            <param name="showValue">Montrer les ip dans le tableaux</param>
            <returns>HTML tableau de résultats</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.IndicatorNoveltyUI">
            <summary>
            Interface Utilisateur des Nouveautés (produits ou annonceurs) dans analyse sectorielle
            Cette classe génère suivant le format de sortie le code pour afficher un tableau	
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorNoveltyUI.GetIndicatorNoveltyHtmlUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType,System.Boolean)">
            <summary>
            Crée le code HTML pour l'affichage du tableau de résultats qui permettra de détecter les réels nouveaux produits
            ou annonceurs des démarrages de campagne. Par nouveau il faut comprendre, un annonceur ou produit actif sur le
            dernier mois , mais inactif (pas d'investissement) depuis le début de l'anné.
            </summary>		
            <param name="webSession">Session du client</param>
            <param name="page">Page qui affiche les nouveautés</param>
            <param name="tab">tableau des résultats</param>
            <param name="elementType">annonceur ou référence</param>
            <param name="excel">sortie Html ou excel</param>
            <returns>Code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorNoveltyUI.GetIndicatorNoveltyGraphicHtmlUI(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType)">
            <summary>
            Crée le code HTML pour l'affichage du tableau (version graphique) de résultats qui permettra de détecter les réels nouveaux produits
            ou annonceurs des démarrages de campagne. Par nouveau il faut comprendre, un annonceur ou produit actif sur le
            dernier mois , mais inactif (pas d'investissement) depuis le début de l'anné.
            </summary>	
            <param name="tab">tableau de résultats </param>
            <param name="webSession">session client</param>
            <param name="elementType">élément annonceur ou référence</param>
            <returns>Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.IndicatorNoveltyUI.GetIndicatorNoveltyExcelUI(System.Web.UI.Page,System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType)">
            <summary>
            Sortie Excel
            </summary>
            <param name="page">page</param>
            <param name="tab">tab</param>
            <param name="webSession">webSession</param>
            <param name="elementType">Type d'éléments (produit, annonceur)</param>
            <returns>Code</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.InsertionPlanUI">
            <summary>
            Build the user interface for the APPM module, tab "Valorisation and efficiency by media"
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.InsertionPlanUI.GetHtml(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Int64,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Generate HTML Code so as to display the detail of the insertions
            </summary>
            <param name="dataSource">Data Source</param>
            <param name="webSession">User session</param>
            <param name="dateBegin">Beginning of the study</param>
            <param name="dateEnd">End  of the study</param>
            <param name="idBaseTarget">Default target</param>
            <param name="idMedia">Media to detail</param>
            <param name="idWave">Study wave</param>
            <param name="excel">Specify if it must fit excel code</param>
            <returns>HTML Code</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.InsertionPlanUI.GetExcel(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Int64,System.Int64,System.Int64)">
            <summary>
            Excel of Insertion APPM
            </summary>
            <param name="webSession">session client</param>
            <param name="dateBegin">Beginning Datet</param>
            <param name="dateEnd">Ending date</param>
            <param name="idBaseTarget">base target</param>
            <param name="idWave">id of the wave</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="idMedia">Media to detail</param>
            <returns>HTML string for the synthesis table</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.HtmlHeader">
            <summary>
            Description résumée de HtmlHeader.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.UI.HtmlHeader._cssKeys">
            <summary>
            Liste des clés des styles css
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.HtmlHeader.#ctor(System.Collections.ArrayList)">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.HtmlHeader.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Génère ce contrôle dans le paramètre de sortie spécifié.
            </summary>
            <param name="writer"> Le writer HTML vers lequel écrire </param>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.IndicatorPalmaresRules">
            <summary>
            Utiliser pour le palmares 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorPalmaresRules.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorPalmaresRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.FrameWork.Results.PalmaresRecap.typeYearSelected,TNS.AdExpress.Constantes.FrameWork.Results.MotherRecap.ElementType)">
            <summary>
            Retourne l'objet contenant les infos pour un tableau palmares
            </summary>
            <param name="webSession"></param>
            <param name="typeYear"></param>
            <param name="tableType"></param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.IndicatorPalmaresRules.GetTable(System.Object[0:,0:],System.Object[0:,0:])">
            <summary>
            fournit un tableau avec les 10 première lignes 
            </summary>
            <param name="firstTab">tableau avec toutes les lignes</param>
            <param name="endTab">tableau avec 10 lignes</param>
            <returns></returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.AffintiesRules">
            <summary>
            Formats the table for affinities
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.AffintiesRules.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Formats the table for affinities 
            </summary>
            <param name="dataSource">Data Source</param>
            <param name="webSession">User Session</param>
            <param name="dateBegin">Period beginning</param>
            <param name="dateEnd">Period end</param>
            <param name="idBaseTarget">Default target</param>
            <param name="idWave">Study wave</param>
            <returns>DataSet ready to be displayed</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.TendenciesDataAccessException">
            <summary>
            Classe d'exception de la génération des données pour le module Tendances
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.TendenciesDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.TendenciesDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.TendenciesDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SectorDataSynthesisRulesException">
            <summary>
            Rules : sector data synthèse
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSynthesisRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSynthesisRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataSynthesisRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SectorDataAffinitiesRulesExcpetion">
            <summary>
            AffinitiesRulesExcpetion thrown when error while processing affinities data : Sector Data APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataAffinitiesRulesExcpetion.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataAffinitiesRulesExcpetion.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SectorDataAffinitiesRulesExcpetion.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.ProofSystemException">
            <summary>
            ProofSystemException thrown whenever an error occured while processing data for Justificatis Presse module
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProofSystemException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProofSystemException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProofSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaPlanAnalysisDataAccessException">
            <summary>
            Classe d'exception de la génération des données pour l'analyse plan média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanAnalysisDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanAnalysisDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanAnalysisDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
            <summary>
            Classe d'exception de la génération des données pour l'analyse plan média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.MarketShareRulesException">
            <summary>
            Classe d'exception de la génération des données pour l'analyse plan média
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MarketShareRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MarketShareRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.MarketShareRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.FunctionsUIException">
            <summary>
            UI: Fonctions
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FunctionsUIException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FunctionsUIException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.FunctionsUIException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.DynamicTableRulesException">
            <summary>
            DynamicTableRulesException thrown whenever an error occured while processing data for dynamic table module
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicTableRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicTableRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DynamicTableRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.DirectoryDataAccessException">
            <summary>
            DirectoryDataAccessException thrown whenever an error occured while accesing my adexpress directories
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DirectoryDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DirectoryDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.DirectoryDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.AffinitiesRulesExcpetion">
            <summary>
            AffinitiesRulesExcpetion thrown when error while processing affinities data : APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AffinitiesRulesExcpetion.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AffinitiesRulesExcpetion.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.AffinitiesRulesExcpetion.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Products.ProductClassificationListDataAccess">
            <summary>
            Description résumée de ProductClassificationList.
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.ProductClassificationListDataAccess.SectorList(TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
            Donne une liste de Famille en fonction des droits du client. 
             </summary>
             <param name="webSession">Session du client</param>
             <returns>Liste des familles autorisées au client.</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.ProductClassificationListDataAccess.SectorList(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
             <summary>
            Donne une liste de Famille en fonction des droits du client. 
             </summary>
             <param name="webSession">Session du client</param>
             <param name="idSector">identifiant(s) de(s) famille(s)</param>
             <returns>Liste des familles autorisées au client.</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.ProductClassificationListDataAccess.ListSectorInTreeNode(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Windows.Forms.TreeNode)">
            <summary>
            Retourne la liste des id_sector en accès à partir d'un treeNode
            </summary>
            <param name="tree">arbre</param>
            <param name="webSession">Session web</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.ProductClassificationListDataAccess.ListSectorInUniverse(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Classification.AdExpressUniverse)">
            <summary>
            Retourne la liste des id_sector en accès à partir d'un treeNode
            </summary>
            <param name="tree">arbre</param>
            <param name="webSession">Session web</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Products.ProductClassificationListDataAccess.GetListSectorSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            retourne la liste des familles sélectionnées
            </summary>
            <param name="webSession"> session client</param>
            <returns>Liste des familles sélectionnées</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess">
            <summary>
            Get Data for creatives
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String,System.Int32,System.Int32,System.Int32,System.Int64)">
            <summary>
            Get Creatives Data
            </summary>
            <param name="session">Web Session</param>
            <param name="vehicle">Vehicle Id</param>
            <param name="filters">Filters to consider</param>
            <param name="fromDate">Period beginning</param>
            <param name="toDate">Period End</param>
            <param name="universId">Competitor Univers Id</param>
            <returns>DataSet containing creatives Data</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess.GetOneUniverseData(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String,System.Int32,System.Int32,System.Int32,System.Int64)">
            <summary>
            Get Creatives Data
            </summary>
            <param name="session">Web Session</param>
            <param name="vehicle">Vehicle Id</param>
            <param name="filters">Filters to consider</param>
            <param name="fromDate">Period beginning</param>
            <param name="toDate">Period End</param>
            <param name="universId">Competitor Univers Id</param>
            <returns>Requete sql</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess.GetPresentVehicles(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Int32,System.Int32,System.Int32,System.Int64,System.Collections.Generic.List{System.Int32})">
            <summary>
            Return list of vehicle referenced in the user univers
            </summary>
            <param name="session">User session</param>
            <param name="filters">User filters</param>
            <param name="fromDate">User Period beginning</param>
            <param name="toDate">User Period End</param>
            <param name="universId">User Univers Selection</param>
            <param name="moduleId">User Current Module</param>
            <param name="vehicles">Vehicles to check</param>
            <returns>List of vehicles present</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess.GetFields(System.Text.StringBuilder,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Build select clause
            </summary>
            <param name="sql">Output</param>
            <param name="vehicle">Vehicle considered</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess.GetFields(System.Text.StringBuilder,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean)">
            <summary>
            Build select clause
            </summary>
            <param name="sql">Output</param>
            <param name="withOutPrefix">With out prefixe</param>
            <param name="vehicle">Vehicle considered</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess.GetTables(System.Text.StringBuilder,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Generate from clause
            </summary>
            <param name="sql">Output</param>
            <param name="vehicle">Vehicle</param>
            <param name="session">Web Session</param>
            <param name="dataTable">Table utilisée</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess.GetJoins(System.Text.StringBuilder,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Get Jointure clauses
            </summary>
            <param name="sql">Output</param>
            <param name="vehicle">Vehicle considered</param>
            <param name="session">Web Sessions</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess.GetGroupBy(System.Text.StringBuilder,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Build group by clause
            </summary>
            <param name="sql">Output</param>
            <param name="vehicle">Vehicle considered</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess.GetGroupBy(System.Text.StringBuilder,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean)">
            <summary>
            Build group by clause
            </summary>
            <param name="sql">Output</param>
            <param name="vehicle">Vehicle considered</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess.GetSelection(System.Text.StringBuilder,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Generate selection in current environment
            </summary>
            <param name="sql">Output</param>
            <param name="session">Web Session</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess.GetCompetitorSelection(System.Text.StringBuilder,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32)">
            <summary>
            Generate selection in competitor environnement
            </summary>
            <param name="sql">Output</param>
            <param name="session">Session</param>
            <param name="universId">Univers Id Number</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess.SetMDRequest(System.Text.StringBuilder)">
            <summary>
            Set MD specific request parameters
            </summary>
            <param name="sql">Output</param>
        </member>
        <!-- Commentaire XML incorrect ignoré pour le membre "M:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess.CheckZeroVersion(TNS.AdExpress.Web.Core.Sessions.GenericDetailLevel,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.String)" -->
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.CreativesDataAccess.GetFiltersClause(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Web.Core.Sessions.GenericDetailLevel,System.String,System.Int32)">
            <summary>
            Generate filters clause
            </summary>
            <param name="session">Web Session</param>
            <param name="detailLevels">Detail Levels Selected</param>
            <param name="filters">Filters Ids</param>
            <param name="vehicle">Vehicle Id</param>
            <returns>Filters clause</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.MediaPlanDataAccess">
            <summary>
            This class calculates and returns the datasets which are used to construct APPM Media Plan
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.MediaPlanDataAccess.Get(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Calculates and returns the dataset for the Media Plan 	 
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="dataSource">dataSource for creating Datasets</param>
            <param name="dateBegin">Starting date</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">Base Target</param>
            <param name="additionalTarget">Additional Target</param>
            <returns>dataset for media plan of APPM</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.MediaPlanDataAccess.GetDataWithVersions(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Calculates and returns the dataset for the Media Plan 	 
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="dataSource">dataSource for creating Datasets</param>
            <param name="dateBegin">Starting date</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">Base Target</param>
            <param name="additionalTarget">Additional Target</param>
            <returns>dataset for media plan of APPM</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.MediaPlanDataAccess.GetAllPublications(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.Int32,System.Int32,System.Int64,System.Int64,System.String)">
            <summary>
             Calculates and returns the dataset for the Media Plan 	 
            </summary>
            <param name="webSession">Session of the client</param>
            <param name="dataSource">dataSource for creating Datasets </param>
            <param name="dateBegin">Starting date</param>
            <param name="dateEnd">Ending date</param>
            <param name="baseTarget">Base Target</param>
            <param name="additionalTarget">Additional Target</param>
            <param name="idsMedia">The ids of the media for whom all publications are to be searched</param>
            <returns>dataset for synthesis of APPM</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.APPM.InsertPlanDataAccess">
            <summary>
            Manage the requests to the database for the module "Valorisation and efficiency by insertion"
            !!! Require to load the advertiser univers to study in the Current Univres Advertiser of the webSession
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.APPM.InsertPlanDataAccess.GetData(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Int64,System.Int64,System.Int64)">
            <summary>
            
            </summary>
            <param name="dataSource">Data Source</param>
            <param name="webSession">User Session</param>
            <param name="dateBegin">Period beginning</param>
            <param name="dateEnd">Period end</param>
            <param name="idBaseTarget">Base target</param>
            <param name="idMedia">Media to study</param>
            <param name="idWave">Wave ID</param>
            <returns>DataSet containing data for the "Valorisation and efficiency by insertion plan"</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.MediaPlanResultData">
            <summary>
             Données servant à construire un plan media
             </summary>
              <since>13/07/2006</since>
              <author>G. Facon</author>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.MediaPlanResultData._versionsDetail">
            <summary>
             Liste des informations des versions utilisées par le résultats
             </summary>
              <since>13/07/2006</since>
              <author>G. Facon</author>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.MediaPlanResultData.#ctor">
            <summary>
             Constructeur
             </summary>
              <since>13/07/2006</since>
              <author>G. Facon</author>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.MediaPlanResultData.GetVersionList">
            <summary>
            Obtient la liste des versions utilisée par le résultat
            </summary>
            <remarks>Format: 25001,15002,32555</remarks>
            <returns>liste des versions utilisée par le résultat</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.MediaPlanResultData.VersionsDetail">
            <summary>
             Obtient la liste des informations des versions utilisées par le résultat
             </summary>
              <since>13/07/2006</since>
              <author>G. Facon</author>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem">
            <summary>
            Description résumée de ExportAPPMVersionItem.
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._agency">
            <summary>Nom d'Agence Média</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._dateBegin">
            <summary>Date de début</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._dateEnd">
            <summary>Date de fin</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._budget">
            <summary>budget brut (euros)</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._versionWeight">
            <summary>Version Weight</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._brand">
            <summary>Marque</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._insertions">
            <summary>nombre d'insertions</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._pages">
            <summary>nombre de pages utilisés</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._supports">
            <summary>nombre de supports utilisés</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._pdv">
            <summary>Part de voix de la campagne</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._targetSelected">
            <summary>cible selectionnée</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._baseTarget">
            <summary>cible de base</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._grpNumber">
            <summary>nombre de GRP(cible selectionnée</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._grpNumberBase">
            <summary>nombre de GRP(cible 15 ans et +)</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._indiceGRP">
            <summary>Indice GRP vs cible 15 ans à +</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._grpCost">
            <summary>Indice GRP vs cible 15 ans à +</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._grpCostBase">
            <summary>Coût GRP(cible 15 et +)</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._indiceGRPCost">
            <summary>Indice coût GRP vs cible 15 ans à +</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem._nbVisuel">
            <summary>Nombre de visuels</summary>
            <author>rkaina</author>
            <since>jeudi 29 août 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.#ctor(System.Int64,System.String,System.String)">
            <summary>Constructor</summary>
             <author>rkaina</author>
             <since>jeudi 17 août 2006</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.#ctor(System.Int64,System.String)">
            <summary>Constructor</summary>
             <author>rkaina</author>
             <since>jeudi 17 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.Agency">
            <summary>Get / Set Nom d'Agence Média</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.DateBegin">
            <summary>Get / Set Date de début</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.DateEnd">
            <summary>Get / Set Date de fin</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.Budget">
            <summary>Get / Set budget brut (euros)</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.VersionWeight">
            <summary>Get / Set Version Weight</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.Brand">
            <summary>Get / Set Marque</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.Insertions">
            <summary>Get / Set nombre d'insertions</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.Pages">
            <summary>Get / Set nombre de pages utilisés</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.Supports">
            <summary>Get / Set nombre de supports utilisés</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.PDV">
            <summary>Get / Set Part de voix de la campagne</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.TargetSelected">
            <summary>Get / Set cible selectionnée</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.BaseTarget">
            <summary>Get / Set cible de base</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.GRPNumber">
            <summary>Get / Set nombre de GRP(cible selectionnée)</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.GRPNumberBase">
            <summary>Get / Set nombre de GRP(cible 15 ans et +)</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.IndiceGRP">
            <summary>Get / Set Indice GRP vs cible 15 ans à +</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.GRPCost">
            <summary>Get / Set Indice GRP vs cible 15 ans à +</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.GRPCostBase">
            <summary>Get / Set Coût GRP(cible 15 et +)</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.IndiceGRPCost">
            <summary>Get / Set Indice coût GRP vs cible 15 ans à +</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.ExportAPPMVersionItem.NbVisuel">
            <summary>Get / Set Nombre de visuels</summary>
             <author>rkaina</author>
             <since>jeudi 29 août 2006</since>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.CreativeTV">
            <summary>
             CreativeItem provides information for the display of a TV creative
             </summary>
              <author>G Ragneau</author>
              <since>09/08/2007</since>
              <stereotype>entity</stereotype>
        </member>
        <member name="F:TNS.AdExpress.Web.Common.Results.Creatives.CreativeTV._duration">
            <summary>
            Sport duration
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeTV.#ctor(System.Int64)">
            <summary>Constructor</summary>
            <author>Guillaume Ragneau</author>
            <since>jeudi 09 aout 2007</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeTV.GetInstance(System.Data.DataRow,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Build instance of CreativeRadio using data containded in row
            </summary>
            <param name="row">Data container</param>
            <param name="session">Web Session</param>
            <returns>New CreativeItem Instance</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeTV.FieldInstance(System.Data.DataRow,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Fill instance with data
            </summary>
            <param name="row">Data Container</param>
            <param name="item">item to fill</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.CreativeTV.Render(System.Text.StringBuilder)">
            <summary>
            render creative
            </summary>
            <param name="output">Output</param>
        </member>
        <member name="P:TNS.AdExpress.Web.Common.Results.Creatives.CreativeTV.Duration">
            <summary>
            Get / Set Sport duration
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.TVDurationComparer">
            <summary>
             Creative TV Duration Comparer
             </summary>
             <author>Guillaume.Ragneau</author>
             <since>lundi 20 septembre 2007 11:24:28</since>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.TVDurationComparer.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="caption">Product Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.TVDurationComparer.#ctor(System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="captionId">Product Comparer Caption</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Common.Results.Creatives.Comparers.TVDurationComparer.Compare(TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem,TNS.AdExpress.Web.Common.Results.Creatives.CreativeItem)">
            <summary>
            Compare two CreativeItem products
            </summary>
            <param name="x">First creative item to compare</param>
            <param name="y">Second creative item to compare</param>
            <returns>-1 if x > y, 0 if equelas and 1 if y > x</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.BusinessFacade.Results.DynamicSystem">
            <summary>
            Accès au résultat de l'analyse dynamique
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.DynamicSystem.GetResultTable(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau de l'analyse dynamique
            </summary>		
            <param name="webSession">Session du client</param>
            <returns>Code HTML du tableau de l'analyse dynamique</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.DynamicSystem.GetExcel(System.Web.UI.Page,TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau de l'analyse dynamique
            </summary>
            <param name="webSession">Session du client</param>
            <param name="page">page</param>
            <returns>Code HTML du tableau de l'analyse dynamique</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.DynamicSystem.GetRawExcel(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Accès à la construction du tableau de l'analyse dynamique
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Code HTML du tableau de l'analyse dynamique</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.BusinessFacade.Results.DynamicSystem.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les données à traiter en fonction de l'onglet
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Résultat</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.TendenciesUI">
            <summary>
            Génère le code HTML pour le module Tendance
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.TendenciesUI.GetHTMLTendenciesUITemp(System.Object[0:,0:],TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean)">
            <summary>
            Fournit le code HTML pour le module tendances
            </summary>
            <param name="tab">tableau de données</param>
            <param name="webSession">Session Client</param>
            <param name="vehicleName">Nom du vehicle</param>
            <param name="excel">true si export excel</param>
            <returns>code HTML</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.TendenciesUI.GetHTMLTendenciesUI(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean)">
            <summary>
            Génère le code Html pour les tendances
            </summary>
            <param name="webSession">Session client</param>
            <param name="vehicleName">Nom du vehicle</param>
            <param name="excel">format excel</param>
            <returns></returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.TendenciesUI.GetExcelTendenciesUI(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.AdExpress.Constantes.Classification.DB.Vehicles.names,System.Boolean)">
            <summary>
            Export Excel
            </summary>		
            <param name="webSession">Session Client</param>
            <param name="vehicleName">Nom du vehicle</param>
            <param name="excel">True si Export Excel</param>
            <returns>Export Excel</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.TendenciesUI.Evol(System.Object,System.Object,System.Boolean)">
            <summary>
            Fournit la fleche correspondante à l'évolution
            </summary>
            <param name="data">Evolution</param>
            <param name="N">Année N</param>
            <returns>image correspondante</returns>
            <param name="excel">True si excel</param>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.TendenciesUI.ConvertUnitValueAndPdmToString(System.Object,TNS.AdExpress.Constantes.Web.CustomerSessions.Unit,System.Boolean)">
            <summary>
            Fournit le bon format pour une unité
            </summary>
            <param name="unitValue">valeur de l'unité</param>
            <param name="unit">unité</param>
            <param name="pdm">pdm</param>
            <returns>format</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.UI.Results.APPM.APPMChartUI">
            <summary>
            This class is just used to inherit the chart class of the DUNDAS.
            This webcontrol is added in the ASPX page but is parameterized in the other classes like PDVPlanChartUI or PeriodicityPlanChartUI
            The main objective of doing this was that as we had three tabs in which graphs were to be shown we couldnt add 3 controls in the ASPX.
            So we have added one control APPMChartUI in the ASPX page and then the reference to this object is sent to our classes which 
            parameterized it according to their needs. 
            This also helped us do the development in parallel as everyone had its own class for the chart. 
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.UI.Results.APPM.APPMChartUI.#ctor">
            <summary>
            Constructor of the class
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.FilesItemRules">
            <summary>
            Traitement des listes de fichiers pour Fichiers resultats
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.FilesItemRules.GetData(System.Collections.ArrayList,TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource)">
            <summary>
            Obtient le tableau de résultat Fichiers resultats
            </summary>
            <param name="typeList">Liste des types possibles pour les fichiers résultats</param>
            <param name="webSession">Session</param>
            <param name="dataSource">DataSource pour la creation de DataSet</param>
            <returns>Tableau de résultat</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.FilesItemRules.VerifCharacter(System.String)">
            <summary>
            Fonction qui teste la présence d'un caractère spécifié dans une chaine
            </summary>
            <param name="name">Chaine à tester</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.CreativeRules">
            <summary>
            Get a table of Creatives depending on parameters
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CreativeRules.GetCreatives(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Int64,System.String)">
            <summary>
            Get List of Creative Items
            </summary>
            <param name="session">Web Session</param>
            <param name="IdVehicle">Vehicle Id</param>
            <param name="filters">Custom Filters</param>
            <param name="fromDate">Period Beginning</param>
            <param name="toDate">Period End</param>
            <param name="universId">Competitor Univers Id</param>
            <param name="zoom">Zoom Period</param>
            <param name="moduleId">Identifiant du module</param>
            <param name="parameters">Chaine de caractère contenant des paramètres à afaire passer dans un lien quelconque.</param>
            <returns>List of creatives</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CreativeRules.GetVehicles(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int64,System.String,System.Int32)">
            <summary>
            Get Vehicle to purpose in Creative details
            </summary>
            <param name="session">User Session</param>
            <param name="module">Current module</param>
            <param name="filters">Filters Ids</param>
            <param name="idModule">Module identifiant</param>
            <param name="universId">Current Univers Identifiant (concurrant environnement, -1 by default)</param>
            <returns>List of vehicle Ids</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.CreativeRules.GetImpactedVehicleIds(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String,System.String,System.Collections.ArrayList@,System.String@,System.Int32,System.Int32)">
            <summary>
            Obtient la liste des médias (vehicle) impactés
            </summary>
            <param name="webSession">Session du client</param>
            <param name="idMediaLevel1">Média Niveau 1</param>
            <param name="idMediaLevel2">Média Niveau 2</param>
            <param name="idMediaLevel3">Média Niveau 3</param>
            <param name="idMediaLevel4">Média Niveau 4</param>
            <param name="vehicleArr">Liste des médias impactés</param>
            <param name="idVehicle">Média en cours</param>
            <param name="dateBegin">Period Beginning</param>
            <param name="dateEnd">Period End</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.ZoomMediaPlanRules">
            <summary>
            Zoom Plan Média APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.ZoomMediaPlanRules.GetFormattedTable(TNS.AdExpress.Web.Core.Sessions.WebSession,TNS.FrameWork.DB.Common.IDataSource,System.String,System.String)">
             <summary>
             Fonction qui formate un DataSet en Calendrier d'actions à partie d'une date de debut et d'une date de fin:
            		Calcul des dates de début et de fin de calendrier
            		Extraction des données de la BD
            		Extraction du nombre de vbehicle et de category des données renvoyées
            		Création d'un tableau repertoriant tous les jours
            		Initialisation des tableaux tab(résultat), tabCategoryIndex(index des lignes catégorie pour les pdm et les totaux), tabVehicleIndex(index des lignes média pour les pdm et les totaux)
            		Construction des libellé des périodes dans tab
            		Remplissage du tableau avec les chiffres (totaux) pour les supports et calculs des totaux vehicle et categorie(1 ligne = 1 vehicle OU 1catégorie OU 1 support)
            		Calcul des PDM vehicle, support et catégorie et total
            		Calcul de la périodicité
             </summary>
             <param name="webSession">Session du client</param>
            <param name="dataSource">source de données</param>
            <param name="beginningPeriod">date de début</param>
            <param name="endPeriod">date de fin</param>				
             <returns>Tableau Formaté</returns>		
        </member>
        <member name="T:TNS.AdExpress.Web.Rules.Results.APPM.InsertionPlanRules">
            <summary>
            Process data for the APPM module, insertion popUp
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Rules.Results.APPM.InsertionPlanRules.GetData(TNS.FrameWork.DB.Common.IDataSource,TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32,System.Int32,System.Int64,System.Int64,System.Int64)">
            <summary>
            Process data from database so as to get the desired information
            </summary>
            <remarks>Able to process one or more media</remarks>
            <param name="dataSource">Data Source</param>
            <param name="webSession">User Session</param>
            <param name="dateBegin">Period beginning</param>
            <param name="dateEnd">Period end</param>
            <param name="idBaseTarget">Default target</param>
            <param name="idMedia">Media to detail</param>
            <param name="idWave">Study wave</param>
            <returns>DataSet ready to be displayed</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Functions.ProductDetailLevel">
            <summary>
            Fonctions des niveaux de détail produit
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.ProductDetailLevel.GetDefault(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le niveau de détail produit par défaut en fonction du module
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Niveau de détail</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.ProductDetailLevel.GetLevelNumber(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le nombre de niveau
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Nombre de niveau</returns>
            <remarks>On se base sur le caractère séparateur '/' pour calculer le nombre de niveau</remarks>
            <example>Famille/Classe/Groupe => 3 niveaux</example>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.ProductDetailLevel.LevelProductToHtmlString(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le texte du niveau de détail produit
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Texte du niveau de détail produi</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.ProductDetailLevel.LevelProductToExcelString(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient le texte du niveau de détail produit
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Texte du niveau de détail produit</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.ProductDetailLevel.CanCustomizeUniverseSlogan(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Droit d'acceder à la sélection des accroches en fonctions de la sélection produit.
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Vrai si le client peut affiner son univers de versions</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.ProductDetailLevel.ShowMediaPlanL1(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Indique s'il faut afficher un lien vers l'alerte plan média
            pour la nomenclature de niveau 1
            </summary>
            <param name="webSession">session du client</param>
            <returns>True si on peut afficher le lien, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.ProductDetailLevel.ShowMediaPlanL2(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Indique s'il faut afficher un lien vers l'alerte plan média
            pour la nomenclature de niveau 2
            </summary>
            <param name="webSession">Session du client</param>
            <returns>True si on peut afficher le lien, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.ProductDetailLevel.ShowMediaPlanL3(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Indique s'il faut afficher un lien vers l'alerte plan média
            pour la nomenclature de niveau 3
            </summary>
            <param name="webSession">Session du client</param>
            <returns>True si on peut afficher le lien, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.ProductDetailLevel.DisplayCreation(TNS.AdExpress.Web.Core.Sessions.WebSession,System.Int32)">
             <summary>
             Savoir si l'on affiche la creation
             </summary>
             <param name="webSession">Session du client</param>
            <param name="level">Niveau affichage</param>
             <returns>True si on peut affichier la création, false sinon</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.Functions.ProductDetailLevel.DisplayCreation(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Savoir si l'on affiche la creation
            </summary>
            <param name="webSession">Session du client</param>		
            <returns>True si on doit affichier la création, false sinon</returns>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.SupportPlanDataAccessException">
            <summary>
            Base de données: Performance et valorisation du plan d'un support
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SupportPlanDataAccessException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SupportPlanDataAccessException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.SupportPlanDataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.ProofRulesException">
            <summary>
            Base de données: APPM Proof
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProofRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProofRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.ProofRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PeriodicityPlanRulesException">
            <summary>
            Rules: Périodicité du plan
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PeriodicityPlanRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PeriodicityPlanRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PeriodicityPlanRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PDVPlanRulesException">
            <summary>
            Base de données: Tableaux dynamiques
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PDVPlanRulesException.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PDVPlanRulesException.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PDVPlanRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.PDVPlanChartUIExcpetion">
            <summary>
            IHM: APPM Graphique de la PDV du plan
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PDVPlanChartUIExcpetion.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PDVPlanChartUIExcpetion.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.PDVPlanChartUIExcpetion.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.IndicatorSynthesisRulesException">
            <summary>
            Analyse sectorielle: Indicateur
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.IndicatorSynthesisRulesException.#ctor">
            <summary>
            constructeur par défaut
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.IndicatorSynthesisRulesException.#ctor(System.String)">
            <summary>
            constructeur avec message d'erreur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.IndicatorSynthesisRulesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.Exceptions.APPMMediaPlanRulesExcpetion">
            <summary>
            APPMMediaPlanUIExcpetion thrown while formatting Media Plan data : APPM
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMMediaPlanRulesExcpetion.#ctor">
            <summary>
            Constructeur de base
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMMediaPlanRulesExcpetion.#ctor(System.String)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
        </member>
        <member name="M:TNS.AdExpress.Web.Exceptions.APPMMediaPlanRulesExcpetion.#ctor(System.String,System.Exception)">
            <summary>
            Constructeur
            </summary>
            <param name="message">Message d'erreur</param>
            <param name="innerException">Exception source</param>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Periods.PortofolioAnalysisDateDataAccess">
            <summary>
            Accès aux données pour la sélection des dates 
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess">
            <summary>
            Charge la liste des Vehicles que peut sélectionner un client
            </summary>
        </member>
        <member name="F:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess._list">
            <summary>
            Liste des Vehicles que peut sélectionner un client
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess.#ctor(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Constructeur
            </summary>
            <param name="webSession">Session du client</param>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess.DetailInterestCenterListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Retourne la liste des centres d'intérêts avec les supports d'un utilisateur
            </summary>
            <param name="webSession">Session</param>
            <returns>Dataset avec 4 colonnes : id_interest_center, interest_center, id_media, media</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess.keyWordInterestCenterListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Retourne la liste des centres d'intérêts avec les supports d'un utilisateur ayant une partie du mot keyWord 
            </summary>
            <param name="webSession">Session</param>
            <param name="keyWord">Mot clef</param>
            <param name="listMedia">Liste des supports (media) déjà sélectionnés</param>
            <returns>Données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess.DetailMediaSellerListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Retourne la liste des régies avec les supports d'un utilisateur
            </summary>
            <param name="webSession">Session</param>
            <returns>dataset avec 4 colonnes : id_media_seller, media_seller, id_media, media</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess.keyWordMediaSellerListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Retourne la liste des régies avec les supports d'un utilisateur ayant une partie du mot keyWord 
            </summary>
            <param name="webSession">Session</param>
            <param name="keyWord">Mot clef</param>
            <param name="listMedia">Liste des supports (media) déjà sélectionnés</param>
            <returns>Données</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess.VehicleInterestCenterMediaListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Donne la liste des Media/Centre d'intérêts/supports en fonctions des droits de l'utilisateur
            </summary>
            <param name="webSession">Session du client</param>
            <returns>dataset avec 6 colonnes : id_vehicle,vehicle,id_interest_center, interest_center, id_media, media</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess.VehicleInterestCenterMediaListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
            <summary>
            Donne la liste des Media/Centre d'intérêts/supports en fonctions des droits de l'utilisateur
            </summary>
            <param name="webSession">Session du client</param>	
            <param name="listVehicle">liste des média (vehicle) déjà sélectionnés</param>
            <returns>dataset avec 6 colonnes : id_vehicle,vehicle,id_interest_center, interest_center, id_media, media</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess.VehicleInterestCenterMediaListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String)">
            <summary>
            Donne la liste des Media/Centre d'intérêts/supports en fonctions des droits de l'utilisateur
            </summary>
            <param name="webSession">Session du client</param>	
            <param name="listVehicle">liste des média (vehicle) déjà sélectionnés</param>
            <param name="listInterestCenter">liste des centres d'intérêts déjà sélectionnés</param>
            <param name="listMedia">liste des supports (media) déjà sélectionnés</param>	
            <returns>dataset avec 6 colonnes : id_vehicle,vehicle,id_interest_center, interest_center, id_media, media</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess.InterestCenterList(TNS.AdExpress.Web.Core.Sessions.WebSession)">
             <summary>
            Donne une liste de centre d'interet en fonction des droits du client. 
             </summary>
             <param name="webSession">Session du client</param>
             <returns>Liste des centre d'interetpour autorisées au client.</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess.InterestCenterList(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String)">
             <summary>
            Donne une liste de centre d'interet en fonction des droits du client. 
             </summary>
             <param name="webSession">Session du client</param>
             <param name="idInterestCenter">identifiant(s) de(s) centre d'interet(s)</param>
             <returns>Liste des centre d'interetautorisées au client.</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess.InterestCenterList(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
             <summary>
            Donne une liste de centre d'interet en fonction des droits du client
             </summary>
             <param name="webSession">Session du client</param>
             <param name="idInterestCenter">identifiant(s) de(s) centre d'interet(s)</param>
             <param name="idMedia">identifiant(s) de(s) support(s) sélectionné(s)</param>
             <returns>Liste des centre d'interet autorisées au client.</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess.getListInterestCenterSelected(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            retourne la liste de centres d'interet
            </summary>
            <param name="webSession"> session client</param>
            <returns>Liste des centre d'interet sélectionnées</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess.VehicleCatMediaListDataAccess(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Dataset retournant la liste des média, catégories, support
            en fonction des droits d'un utilisateur
            </summary>
            <param name="webSession">webSession</param>
            <returns>dataset</returns>
        </member>
        <member name="P:TNS.AdExpress.Web.DataAccess.Selections.Medias.VehicleListDataAccess.List">
            <summary>
            Obtient la liste des vehicles visible par le client
            </summary>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAlertDataAccess">
            <summary>
            Extraction des données d'alerte plan média de la BD
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAlertDataAccess.GetDataWithMediaDetailLevel(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String)">
            <summary>
            Charge les données pour créer un plan média d'UN vehicle
            	Assignation du nom de la table à attaquer et de l'unité à sélectionner
            	Construction et exécution de la requête
            </summary>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
            Lancée si aucune table ne correspond au vehicle,si l'unité n'est pas valide ou si une erreur Oracle est survenue
            </exception>
            <param name="webSession">Session du client</param>
            <param name="idVehicle">Identifiant du vehicle à traiter</param>
            <param name="beginingDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>Dataset contenant les données rapatriées de la base de données pour le vehicule considéré</returns>
            <remarks>
            Utilise les méthodes:
            	private static string getTable(DBClassificationConstantes.Vehicles.names idVehicle)
            	private static string getField(TNS.AdExpress.Constantes.Web.CustomerSessions.Unit unit)
            	public static string TNS.AdExpress.Web.Functions.SqlGenerator.getAnalyseCustomerProductRight(WebSession webSession,string tablePrefixe,bool beginByAnd)
            	public static string TNS.AdExpress.Web.Functions.SqlGenerator.getAnalyseCustomerMediaRight(WebSession webSession,string tablePrefixe,bool beginByAnd)
            	public string TNS.AdExpress.Web.Core.Sessions.WebSession.GetSelection(TreeNode univers, TNS.AdExpress.Constantes.Customer.Right.type level)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAlertDataAccess.GetMediaFields(TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails)">
            <summary>
            Obtient les champs correspondants au détail media demandée par le client.
            Les champs demandées corespondent à l'identifiant et le libellé du niveau support
            </summary>
            <param name="preformatedMediaDetail">Niveau du détail media demandé</param>
            <returns>Chaîne contenant les champs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAlertDataAccess.GetOrderMediaFields(TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails)">
            <summary>
            Obtient les champs correspondants au détail media demandée par le client.
            Les champs demandées corespondent à l'identifiant et le libellé du niveau support
            </summary>
            <param name="preformatedMediaDetail">Niveau du détail media demandé</param>
            <returns>Chaîne contenant les champs</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAlertDataAccess.GetMediaTable(TNS.AdExpress.Constantes.Web.CustomerSessions.PreformatedDetails.PreformatedMediaDetails)">
            <summary>
            Obtient les nom des tables à utiliser lors d'un détail media
            </summary>
            <param name="preformatedMediaDetail">Niveau du détail media demandé</param>
            <returns>Chaîne contenant les tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAlertDataAccess.GetMediaJoinConditions(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.Boolean)">
            <summary>
            Obtient les nom des tables à utiliser lors d'un détail media
            </summary>
            <param name="webSession">Session client</param>
            <param name="dataTablePrefixe">Prefixe de la table de résultat</param>
            <param name="beginByAnd">La condition doit commencée par And</param>
            <returns>Chaîne contenant les tables</returns>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAlertDataAccess.GetData(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String,System.String)">
            <summary>
            Charge les données pour créer un plan média d'UN vehicle
            	Assignation du nom de la table à attaquer et de l'unité à sélectionner
            	Construction et exécution de la requête
            </summary>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
            Lancée si aucune table ne correspond au vehicle,si l'unité n'est pas valide ou si une erreur Oracle est survenue
            </exception>
            <param name="webSession">Session du client</param>
            <param name="idVehicle">Identifiant du vehicle à traiter</param>
            <param name="beginingDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>Dataset contenant les données rapatriées de la base de données pour le vehicule considéré</returns>
            <remarks>
            Utilise les méthodes:
            	private static string getTable(DBClassificationConstantes.Vehicles.names idVehicle)
            	private static string getField(TNS.AdExpress.Constantes.Web.CustomerSessions.Unit unit)
            	public static string TNS.AdExpress.Web.Functions.SqlGenerator.getAnalyseCustomerProductRight(WebSession webSession,string tablePrefixe,bool beginByAnd)
            	public static string TNS.AdExpress.Web.Functions.SqlGenerator.getAnalyseCustomerMediaRight(WebSession webSession,string tablePrefixe,bool beginByAnd)
            	public string TNS.AdExpress.Web.Core.Sessions.WebSession.GetSelection(TreeNode univers, TNS.AdExpress.Constantes.Customer.Right.type level)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAlertDataAccess.GetPluriMediaDataset(TNS.AdExpress.Web.Core.Sessions.WebSession,System.String,System.String)">
            <summary>
            Charge les données pour créer un plan média pour chaque vehicle sélectionné dans la session
            sur la période spécifiée
            </summary>
            <param name="webSession">Session du client</param>
            <param name="beginningDate">date de début de période au formazt YYYYMMDD</param>
            <param name="endDate">date de fin de période au formazt YYYYMMDD</param>
            <returns>Dataset contenant les données rapatriées de la base de données pour les vehicule sélectionné dans la session</returns>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
            Lancée en cas d'erreur sur un vehicle
            </exception>
            <remarks>
            Utilise les méthodes:
            	public string TNS.AdExpress.Web.Core.Sessions.WebSession.GetSelection(TreeNode univers, TNS.AdExpress.Constantes.Customer.Right.type level)
            </remarks>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAlertDataAccess.GetPluriMediaDataset(TNS.AdExpress.Web.Core.Sessions.WebSession)">
            <summary>
            Obtient les données pour créer un plan média plurimédia à partir  des données 
            de la session d'un client
            </summary>
            <param name="webSession">Session du client</param>
            <returns>Données chargées</returns>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
            Lancée en cas d'erreur
            </exception>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.MediaPlanAlertDataAccess.GetTable(TNS.AdExpress.Constantes.Classification.DB.Vehicles.names)">
            <summary>
            Obtient la table à utiliser en fonction du vehicle
            </summary>
            <param name="idVehicle">Identifiant du vehicle</param>
            <returns>NOm de la table</returns>
            <exception cref="T:TNS.AdExpress.Web.Exceptions.MediaPlanAlertDataAccessException">
            Lancée au cas ou le vehicle considéé n'est pas un cas traité
            </exception>
        </member>
        <member name="T:TNS.AdExpress.Web.DataAccess.Results.InfoNewsDataAccess">
            <summary>
            Classe qui récupère les informations d'infos/news
            </summary>
        </member>
        <member name="M:TNS.AdExpress.Web.DataAccess.Results.InfoNewsDataAccess.GetData(System.String,System.String)">
            <summary>
            Obtient la liste des fichiers PDF d'une plaquette
            </summary>
            <param name="name">Nom de la plaquette</param>
            <param name="pathDirectory">Chemin du répertoire</param>
            <returns>Liste des fichiers</returns>
        </member>
    </members>
</doc>
